<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/05/17/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
      <url>/2022/05/17/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[<p>设备管理:</p><p>1.设备控制器:</p><p>状态寄存器:</p><p>​    ready-bit:就绪位</p><p>​    Interrupt Enable:中断允许位</p><p>​    Interrupt Flag:中断标志位</p><p>数据寄存器:</p><p>控制寄存器:</p><p>2.设备和处理器之间的数据传输:</p><p>程控I/O:</p><p>1)检查就绪位</p><p>2)如果就绪位没有设置,返回步骤一</p><p>3)读数据寄存器的内存,同时寄存器的就绪位会清0</p><p>4)将读入的字符存入内存</p><p>5)返回步骤一</p><p>缺点:</p><p>​    对于处理器的资源的利用很没有效率</p><p>改进:</p><p>​    设置一个中断位,当发生中断时,执行前述的指令来完成数据传输</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows程序设计</title>
      <link href="/2022/04/28/windows%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/"/>
      <url>/2022/04/28/windows%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h3 id="API"><a href="#API" class="headerlink" title="API"></a>API</h3><h4 id="URLDownloadToFile"><a href="#URLDownloadToFile" class="headerlink" title="URLDownloadToFile"></a>URLDownloadToFile</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">下载文件:</span><br><span class="line"><span class="function">HRESULT <span class="title">URLDownloadToFile</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">             LPUNKNOWN            pCaller,      <span class="comment">//参数为ActiveX控件的指针</span></span></span></span><br><span class="line"><span class="params"><span class="function">             LPCTSTR              szURL,<span class="comment">//要下载的url地址</span></span></span></span><br><span class="line"><span class="params"><span class="function">             LPCTSTR              szFileName,   <span class="comment">//保存的路径</span></span></span></span><br><span class="line"><span class="params"><span class="function">  _Reserved_ DWORD                dwReserved,   <span class="comment">//Reserved. Must be set to 0.</span></span></span></span><br><span class="line"><span class="params"><span class="function">             LPBINDSTATUSCALLBACK lpfnCB       <span class="comment">//下载进度状态回调接口的指针，实时监控下载文件的状态需要用到这个指针</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br><span class="line"> 返回值：</span><br><span class="line">S_OK : 成功下载；</span><br><span class="line">E_OUTOFMEMORY：缓冲区长度不够，或者没有足够的内存来完成下载的操作；</span><br><span class="line">INET_E_DOWNLOAD_FAILURE：指定的资源或者回调接口有问题。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="ShellExecuteEx"><a href="#ShellExecuteEx" class="headerlink" title="ShellExecuteEx"></a>ShellExecuteEx</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line">SHELLEXECUTEINFO shellinfo = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">shellinfo.cbSize = <span class="built_in"><span class="keyword">sizeof</span></span>(SHELLEXECUTEINFO);</span><br><span class="line">shellinfo.lpVerb = _T(<span class="string">&quot;open&quot;</span>);</span><br><span class="line">shellinfo.lpFile = _T(<span class="string">&quot;calc.exe&quot;</span>);</span><br><span class="line">shellinfo.nShow = SW_SHOW;</span><br><span class="line"><span class="built_in">ShellExecuteEx</span>(&amp;shellinfo);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">自动执行文件:</span><br><span class="line">输入输出参数都是 SHELLEXECUTEINFO 结构体，其结构定义如下：</span><br><span class="line"><span class="function">BOOL <span class="title">ShellExecuteEx</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _Inout_ SHELLEXECUTEINFO *pExecInfo</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> _<span class="title">SHELLEXECUTEINFO</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  DWORD    cbSize;<span class="comment">//结构大小,sizeof(SHELLEXECUTEINFO)</span></span><br><span class="line">  ULONG     fMask;<span class="comment">//指定结构成员的有效性</span></span><br><span class="line">  HWND      hwnd;<span class="comment">//父窗口句柄或出错时显示错误父窗口的句柄，可以为 NULL</span></span><br><span class="line">  LPCTSTR   lpVerb;<span class="comment">//指定该函数的执行动作</span></span><br><span class="line">  LPCTSTR   lpFile;<span class="comment">//操作对象路径</span></span><br><span class="line">  LPCTSTR   lpParameters;<span class="comment">//执行参数，可以为 ULL</span></span><br><span class="line">  LPCTSTR   lpDirectory;<span class="comment">//工作目录，可以为 NULL</span></span><br><span class="line">  <span class="keyword">int</span>             nShow;<span class="comment">//显示方式</span></span><br><span class="line">  HINSTANCE hInstApp;<span class="comment">//如果设置了 SEE_MASK_NOCLOSEPROCESS ,并且调用成功则该值大于32，调用失败者被设置错误值</span></span><br><span class="line">  LPVOID     lpIDList;<span class="comment">//ITEMIDLIST结构的地址，存储成员的特别标识符，当fMask不包括SEE_MASK_IDLIST或SEE_MASK_INVOKEIDLIST时该项被忽略</span></span><br><span class="line">  LPCTSTR   lpClass;<span class="comment">//指明文件类别的名字或GUID，当fMask不包括SEE_MASK_CLASSNAME时该项被忽略</span></span><br><span class="line">  HKEY        hkeyClass;<span class="comment">//获得已在系统注册的文件类型的Handle，当fMask不包括SEE_MASK_HOTKEY时该项被忽略</span></span><br><span class="line">  DWORD   dwHotKey;<span class="comment">//程序的热键关联，低位存储虚拟关键码（Key Code），高位存储修改标志位(HOTKEYF_)，当fmask不包括SEE_MASK_HOTKEY时该项被忽略</span></span><br><span class="line"></span><br><span class="line">  <span class="class"><span class="keyword">union</span></span></span><br><span class="line"><span class="class">  &#123;</span></span><br><span class="line">    HANDLE hIcon;<span class="comment">//取得对应文件类型的图标的Handle，当fMask不包括SEE_MASK_ICON时该项被忽略</span></span><br><span class="line">    HANDLE hMonitor;<span class="comment">//将文档显示在显示器上的Handle，当fMask不包括SEE_MASK_HMONITOR时该项被忽略</span></span><br><span class="line">  &#125; DUMMYUNIONNAME;</span><br><span class="line"></span><br><span class="line">  HANDLE    hProcess;<span class="comment">//指向新启动的程序的句柄。若fMask不设为SEE_MASK_NOCLOSEPROCESS则该项值为NULL。</span></span><br><span class="line">                     <span class="comment">//但若程序没有启动，即使fMask设为SEE_MASK_NOCLOSEPROCESS，该值也仍为NULL。</span></span><br><span class="line">                     <span class="comment">//如果没有新创建进程，也会为空</span></span><br><span class="line"></span><br><span class="line">&#125; SHELLEXECUTEINFO, *LPSHELLEXECUTEINFO;</span><br><span class="line"></span><br><span class="line">fMask 用于指定结构成员的内容和有效性，可为下列值的组合：</span><br><span class="line"></span><br><span class="line">● <span class="built_in">SEE_MASK_DEFAULT</span> (<span class="number">0</span>)默认</span><br><span class="line">● SEE_MASK_CLASSNAME 使用 lpClass 参数，如果 SEE_MASK_CLASSKEY 也有效，则用后者</span><br><span class="line">● SEE_MASK_CLASSKEY 使用 hkeyClass 参数</span><br><span class="line">● SEE_MASK_IDLIST 使用 lpIDList 参数</span><br><span class="line">● SEE_MASK_INVOKEIDLIST 使用选定项目的快捷菜单 IContextMenu 接口处理程序</span><br><span class="line">● SEE_MASK_ICON 使用 hIcon 给出的菜单，不能与 SEE_MASK_HMONITOR 共用，Vista之后</span><br><span class="line">● SEE_MASK_HOTKEY 使用 dwHotKey 参数</span><br><span class="line">● SEE_MASK_NOCLOSEPROCESS 如果执行之后需要返回进程句柄，或者等待执行完毕的话，则需要指定该参数，从结构参数意义可以看到 hProcess 和 hInstApp 都依赖该选项</span><br><span class="line">● SEE_MASK_CONNECTNETDRV 验证共享并连接到驱动器号</span><br><span class="line">● SEE_MASK_NOASYNC 不等待操作完成，直接返回，会创建一个后台线程运行。</span><br><span class="line">● SEE_MASK_FLAG_DDEWAIT 弃用，使用 SEE_MASK_NOASYNC</span><br><span class="line">● SEE_MASK_DOENVSUBST 环境变量会被展开</span><br><span class="line">● SEE_MASK_FLAG_NO_UI 出现错误，不显示错误消息框，比如不会弹出找不到文件之类的窗口，直接返回失败</span><br><span class="line">● SEE_MASK_UNICODE UNICODE 程序</span><br><span class="line">● SEE_MASK_NO_CONSOLE 继承父进程的控制台，而不是创建新的控制台，与 CREATE_NEW_CONSOLE 相反</span><br><span class="line">● SEE_MASK_ASYNCOK 执行在后台线程，调用立即返回</span><br><span class="line">● SEE_MASK_NOQUERYCLASSSTORE 弃用</span><br><span class="line">● SEE_MASK_HMONITOR 使用 hmonitor，不能与 SEE_MASK_ICON 共存</span><br><span class="line">● SEE_MASK_NOZONECHECKS 不执行区域检查</span><br><span class="line">● SEE_MASK_WAITFORINPUTIDLE 创建新进程后，等待进程变为空闲状态再返回，超时时间为<span class="number">1</span>分钟</span><br><span class="line">● SEE_MASK_FLAG_LOG_USAGE 跟踪应用程序启动次数</span><br><span class="line">● SEE_MASK_FLAG_HINST_IS_SITE</span><br><span class="line"></span><br><span class="line">lpVerb 参数与 ShellExecute 的 lpOperation 参数一致：</span><br><span class="line">edit 用编辑器打开 lpFile 指定的文档，如果 lpFile 不是文档，则会失败</span><br><span class="line">explore 浏览 lpFile 指定的文件夹</span><br><span class="line">find 搜索 lpDirectory 指定的目录</span><br><span class="line">open 打开 lpFile 文件，lpFile 可以是文件或文件夹</span><br><span class="line">print 打印 lpFile，如果 lpFile 不是文档，则函数失败</span><br><span class="line">properties 显示属性</span><br><span class="line">runas 请求以管理员权限运行，比如以管理员权限运行某个exe</span><br><span class="line"><span class="literal">NULL</span> 执行默认”open”动作</span><br><span class="line"></span><br><span class="line">nShow 与 ShellExecute 的该参数一致：</span><br><span class="line">● SW_HIDE 隐藏窗口，活动状态给令一个窗口</span><br><span class="line">● SW_MINIMIZE 最小化窗口，活动状态给令一个窗口</span><br><span class="line">● SW_RESTORE 用原来的大小和位置显示一个窗口，同时令其进入活动状态</span><br><span class="line">● SW_SHOW 用当前的大小和位置显示一个窗口，同时令其进入活动状态</span><br><span class="line">● SW_SHOWMAXIMIZED 最大化窗口，并将其激活</span><br><span class="line">● SW_SHOWMINIMIZED 最小化窗口，并将其激活</span><br><span class="line">● SW_SHOWMINNOACTIVE 最小化一个窗口，同时不改变活动窗口</span><br><span class="line">● SW_SHOWNA 用当前的大小和位置显示一个窗口，不改变活动窗口</span><br><span class="line">● SW_SHOWNOACTIVATE 用最近的大小和位置显示一个窗口，同时不改变活动窗口</span><br><span class="line">● SW_SHOWNORMAL 与SW_RESTORE相同</span><br><span class="line"></span><br><span class="line">如果设置了 SEE_MASK_NOCLOSEPROCESS ，调用成功则 hInstApp 返回大于<span class="number">32</span>的值，调用失败会返回：</span><br><span class="line">● <span class="built_in">SE_ERR_FNF</span> (<span class="number">2</span>) 文件未找到</span><br><span class="line">● <span class="built_in">SE_ERR_PNF</span> (<span class="number">3</span>) 路径未找到</span><br><span class="line">● <span class="built_in">SE_ERR_ACCESSDENIED</span> (<span class="number">5</span>) 拒绝访问</span><br><span class="line">● <span class="built_in">SE_ERR_OOM</span> (<span class="number">8</span>) 内存不足</span><br><span class="line">● <span class="built_in">SE_ERR_DLLNOTFOUND</span> (<span class="number">32</span>) 动态库未找到</span><br><span class="line">● <span class="built_in">SE_ERR_SHARE</span> (<span class="number">26</span>) 无法共享打开的文件</span><br><span class="line">● <span class="built_in">SE_ERR_ASSOCINCOMPLETE</span> (<span class="number">27</span>) 文件关联信息不完整</span><br><span class="line">● <span class="built_in">SE_ERR_DDETIMEOUT</span> (<span class="number">28</span>) 操作超时</span><br><span class="line">● <span class="built_in">SE_ERR_DDEFAIL</span> (<span class="number">29</span>) 操作失败</span><br><span class="line">● <span class="built_in">SE_ERR_DDEBUSY</span> (<span class="number">30</span>) DDE 操作忙</span><br><span class="line">● <span class="built_in">SE_ERR_NOASSOC</span> (<span class="number">31</span>) 文件关联不可用</span><br><span class="line"></span><br><span class="line">返回值：</span><br><span class="line">函数执行成功，返回 TRUE ，否则返回 FALSE ，可使用 GetLastError 获取错误码。</span><br><span class="line"></span><br><span class="line">● ERROR_FILE_NOT_FOUND 文件不存在</span><br><span class="line">● ERROR_PATH_NOT_FOUND 路径不存在</span><br><span class="line">● <span class="function">ERROR_DDE_FAIL <span class="title">DDE</span><span class="params">(动态数据交换)</span>失败</span></span><br><span class="line"><span class="function">● ERROR_NO_ASSOCIATION 未找到与指定文件拓展名关联的应用</span></span><br><span class="line"><span class="function">● ERROR_ACCESS_DENIED 拒绝访问</span></span><br><span class="line"><span class="function">● ERROR_DLL_NOT_FOUND 未找到dll</span></span><br><span class="line"><span class="function">● ERROR_CANCELLED 功能提示用户提供额外信息，但是用户取消请求。</span></span><br><span class="line"><span class="function">● ERROR_NOT_ENOUGH_MEMORY 内存不足</span></span><br><span class="line"><span class="function">● ERROR_SHARING_VIOLATION 发生共享冲突</span></span><br></pre></td></tr></table></figure><h3 id="文件的操作"><a href="#文件的操作" class="headerlink" title="文件的操作"></a>文件的操作</h3><h4 id="文件的删除"><a href="#文件的删除" class="headerlink" title="文件的删除"></a>文件的删除</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件的删除</span></span><br><span class="line"><span class="function">BOOL WINAPI <span class="title">DeleteFile</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_  LPCTSTR lpFileName</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数执行成功，返回 TRUE ，否则返回 FALSE ，可使用 GetLastError 获取错误码。</span></span><br><span class="line"><span class="comment">//备注：如果程序尝试删除一个不存在的文件，GetLastError 返回 ERROR_FILE_NOT_FOUND。如果文件是只读的，则 GetLastError 返回 ERROR_ACCESS_DENIED。</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="文件的复制"><a href="#文件的复制" class="headerlink" title="文件的复制"></a>文件的复制</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件的复制:</span></span><br><span class="line"><span class="function">BOOL <span class="title">CopyFile</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpExistingFileName, <span class="comment">//存在的文件路径</span></span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpNewFileName,      <span class="comment">//新的保存文件路径</span></span></span></span><br><span class="line"><span class="params"><span class="function">  BOOL    bFailIfExists       </span></span></span><br><span class="line"><span class="params"><span class="function">    <span class="comment">//传递TRUE：如果目标文件已经存在，不拷贝，CopyFile 返回 FALSE，传递 FALSE，如果目标文件已经存在，覆盖目标文件</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><h4 id="文件的移动"><a href="#文件的移动" class="headerlink" title="文件的移动"></a>文件的移动</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL <span class="title">MoveFile</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpExistingFileName,</span></span></span><br><span class="line"><span class="params"><span class="function">  LPCTSTR lpNewFileName</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"><span class="comment">//lpExistingFileName：要移动的源文件或者文件夹的路径</span></span><br><span class="line"><span class="comment">//lpNewFileName：要移动到的目标文件或者文件夹的路径</span></span><br></pre></td></tr></table></figure><blockquote><p>获取错误码函数:GetLastError</p><p>返回DWORD</p></blockquote><h3 id="MessageBox"><a href="#MessageBox" class="headerlink" title="MessageBox"></a>MessageBox</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">MessageBox</span>(HWND hWnd, LPCTSTR lpText, LPCTSTR lpCaption, UINT uType)</span><br><span class="line">hWnd:</span><br><span class="line">此参数代表消息框拥有的窗口。如果为<span class="literal">NULL</span>，则消息框没有拥有窗口。</span><br><span class="line"></span><br><span class="line">lpText:</span><br><span class="line">消息框的内容。</span><br><span class="line"></span><br><span class="line">lpCaption:</span><br><span class="line">消息框的标题。</span><br><span class="line"></span><br><span class="line">uType:</span><br><span class="line">指定一个决定对话框的内容和行为的位标志集。此参数可以为下列标志组中标志的组合。指定下列标志中的一个来显示消息框中的按钮以及图标。</span><br></pre></td></tr></table></figure><h3 id="消息处理"><a href="#消息处理" class="headerlink" title="消息处理"></a>消息处理</h3><p>消息使用MSG结构进行存储</p><h3 id="客户区和非客户区"><a href="#客户区和非客户区" class="headerlink" title="客户区和非客户区"></a>客户区和非客户区</h3><h3 id="获取设备环境句柄"><a href="#获取设备环境句柄" class="headerlink" title="获取设备环境句柄"></a>获取设备环境句柄</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">方法一:</span><br><span class="line">hdc=<span class="built_in">BeginPaint</span>(hWnd,&amp;ps);</span><br><span class="line"><span class="built_in">EndPaint</span>(hWnd,&amp;ps);</span><br><span class="line"></span><br><span class="line">方法二:</span><br><span class="line">hdc=<span class="built_in">GetDC</span>(hWnd);</span><br><span class="line"><span class="built_in">Release</span>(hWnd,hdc)</span><br><span class="line">    </span><br><span class="line"><span class="comment">//GetClientRect(hWnd,&amp;rect);</span></span><br><span class="line"><span class="comment">//DrawText(hdc, TEXT(&quot;hello world!&quot;), -1, &amp;rect, DT_CENTER);</span></span><br><span class="line"><span class="comment">//TextOut(hdc, 400, 400, TEXT(&quot;你是不是傻&quot;) ,5);    </span></span><br></pre></td></tr></table></figure><h3 id="文本的输出"><a href="#文本的输出" class="headerlink" title="文本的输出"></a>文本的输出</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//TextOut 函数使用当前选择的字体、背景颜色和文本颜色，将一个字符串绘制于窗口的指定位置。</span></span><br><span class="line"><span class="function">BOOL <span class="title">TextOut</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_  HDC hdc,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_  <span class="keyword">int</span> nXStart,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_  <span class="keyword">int</span> nYStart,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_  LPCTSTR lpString,<span class="comment">// 指向将被绘制字符串的指针</span></span></span></span><br><span class="line"><span class="params"><span class="function">  _In_  <span class="keyword">int</span> cchString <span class="comment">//lpString 字符串的长度（有多少个字符）</span></span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br></pre></td></tr></table></figure><h3 id="字符串的处理"><a href="#字符串的处理" class="headerlink" title="字符串的处理"></a>字符串的处理</h3><h4 id="不安全的处理版本"><a href="#不安全的处理版本" class="headerlink" title="不安全的处理版本"></a>不安全的处理版本</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//函数用途:wsprintf </span></span><br><span class="line"><span class="comment">//函数将格式化字符串写入到指定的缓冲区里</span></span><br><span class="line"><span class="comment">//输出缓冲区里的的值取决于格式说明符（即&quot;%&quot;）</span></span><br><span class="line"><span class="comment">//如果写入的是文字，此函数给写入的文字的末尾追加一个&#x27;\0&#x27;</span></span><br><span class="line"><span class="comment">//函数的返回值是写入的长度，但不包括最后的&#x27;\0&#x27;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">wsprintf</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _Out_  LPTSTR lpOut,<span class="comment">//缓冲区的最大的限制为1024字节</span></span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   LPCTSTR lpFmt,<span class="comment">//格式化字符串</span></span></span></span><br><span class="line"><span class="params"><span class="function">  _In_    ...</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"><span class="comment">//lstrlen 函数用于计算指定字符串的长度（不包含&#x27;\0）</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> WINAPI <span class="title">lstrlen</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_  LPCTSTR lpString</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"><span class="comment">//lstrcat 函数的功能是将一个字符串拼接在另一个字符串后边。</span></span><br><span class="line"><span class="function">LPTSTR WINAPI <span class="title">lstrcat</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _Inout_  LPTSTR lpString1,<span class="comment">//一个以&#x27;\0&#x27;为结尾的字符串，该字符串空间必须大到足以容纳本身及另一个字符串</span></span></span></span><br><span class="line"><span class="params"><span class="function">  _In_     LPTSTR lpString2</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"><span class="comment">//lstrcpy 函数的功能是复制一个字符串到缓冲区。</span></span><br><span class="line"><span class="function">LPTSTR WINAPI <span class="title">lstrcpy</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _Out_  LPTSTR lpString1,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   LPTSTR lpString2</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="安全的处理版本"><a href="#安全的处理版本" class="headerlink" title="安全的处理版本"></a>安全的处理版本</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//StringCchPrintf 函数用于把数据格式化写入到指定的缓冲区里，该函数要求提供目标缓冲区的大小，确保不会发生越界访问。</span></span><br><span class="line"><span class="function">HRESULT <span class="title">StringCchPrintf</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _Out_  LPTSTR pszDest,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   <span class="keyword">size_t</span> cchDest,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   LPCTSTR pszFormat,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   ...</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"><span class="comment">//StringCchLength 函数用于确定字符串是否超过了规定的长度，以字符为计算单位。</span></span><br><span class="line"><span class="function">HRESULT <span class="title">StringCchLength</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   LPCTSTR psz,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   <span class="keyword">size_t</span> cchMax,</span></span></span><br><span class="line"><span class="params"><span class="function">  _Out_  <span class="keyword">size_t</span> *pcch</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"><span class="comment">//StringCchCat 函数的功能是将一个字符串拼接到另一个字符串。StringCchCat 函数要求提供目标缓冲区的长度，以确保写入数据不会超出缓冲区的末尾。</span></span><br><span class="line"><span class="function">HRESULT <span class="title">StringCchCat</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _Inout_  LPTSTR pszDest,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_     <span class="keyword">size_t</span> cchDest,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_     LPCTSTR pszSrc</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"><span class="comment">//StringCchCopy 函数的功能是复制一个字符串到缓冲区。StringCchCopy 函数要求提供目标缓冲区的长度，以确保写入数据不会超出缓冲区的末尾。</span></span><br><span class="line"><span class="function">HRESULT <span class="title">StringCchCopy</span><span class="params">(</span></span></span><br><span class="line"><span class="params"><span class="function">  _Out_  LPTSTR pszDest,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   <span class="keyword">size_t</span> cchDest,</span></span></span><br><span class="line"><span class="params"><span class="function">  _In_   LPCTSTR pszSrc</span></span></span><br><span class="line"><span class="params"><span class="function">)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//需要引入#include&lt;strsafe.h&gt;头文件</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>实例</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> xchar,ychar;</span><br><span class="line"><span class="keyword">case</span> WM_CREATE:</span><br><span class="line">hdc = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line"><span class="built_in">GetTextMetrics</span>(hdc, &amp;textmetric);</span><br><span class="line">xchar = textmetric.tmAveCharWidth;<span class="comment">//字体中小写字符的平均宽度（一般定义为字母 x 的宽度）</span></span><br><span class="line">ychar = textmetric.tmHeight + textmetric.tmExternalLeading;<span class="comment">//取得字的高度和字之间的间距</span></span><br><span class="line"><span class="built_in">ReleaseDC</span>(hWnd, hdc);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">RECT rect;</span><br><span class="line">            hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line"><span class="keyword">wchar_t</span> c[] = <span class="string">L&quot;你真的漂亮&quot;</span>;</span><br><span class="line"><span class="keyword">size_t</span> tlength;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line"><span class="comment">//GetClientRect(hWnd,&amp;rect);</span></span><br><span class="line"><span class="comment">//DrawText(hdc, TEXT(&quot;hello world!&quot;), -1, &amp;rect, DT_CENTER);</span></span><br><span class="line"><span class="comment">//TextOut(hdc, 400, 400, TEXT(&quot;你是不是傻&quot;) ,5);</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line"><span class="built_in">StringCchPrintf</span>(szBuffer, <span class="number">128</span>,<span class="built_in">TEXT</span>(<span class="string">&quot;%d,%s&quot;</span>), i + <span class="number">1</span>, <span class="built_in">TEXT</span>(<span class="string">&quot;这是一个测试&quot;</span>));</span><br><span class="line"><span class="built_in">StringCchLength</span>(szBuffer, <span class="number">128</span>, &amp;tlength);</span><br><span class="line"><span class="built_in">TextOut</span>(hdc, xchar, i*ychar, szBuffer, tlength);</span><br><span class="line">&#125; </span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//获取窗口的尺寸</span></span><br><span class="line"><span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">RECT rect;</span><br><span class="line">            hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line"><span class="built_in">GetClientRect</span>(hWnd, &amp;rect);</span><br><span class="line">cxClient = <span class="built_in">GetSystemMetrics</span>(SM_CXSCREEN);</span><br><span class="line">cyClient = <span class="built_in">GetSystemMetrics</span>(SM_CXSCREEN);</span><br><span class="line"><span class="built_in">StringCchPrintf</span>(szBuffer, <span class="number">128</span>, <span class="built_in">TEXT</span>(<span class="string">&quot;当前显示器的分辨率是：%d*%d px&quot;</span>),cxClient,cyClient );</span><br><span class="line"><span class="built_in">DrawText</span>(hdc, szBuffer, <span class="number">-1</span>, &amp;rect, DT_CENTER);</span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><h3 id="滚动条"><a href="#滚动条" class="headerlink" title="滚动条"></a>滚动条</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加滚动条</span></span><br><span class="line">HWND hWnd = <span class="built_in">CreateWindowW</span>(szWindowClass, szTitle, WS_OVERLAPPEDWINDOW|WS_VSCROLL|WS_HSCROLL,</span><br><span class="line">      CW_USEDEFAULT, <span class="number">0</span>, CW_USEDEFAULT, <span class="number">0</span>, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>, hInstance, <span class="literal">nullptr</span>);</span><br><span class="line">WS_VSCROLL <span class="comment">//添加垂直滚动条</span></span><br><span class="line">WS_HSCROLL <span class="comment">//添加水平滚动条</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//滚动t</span></span><br><span class="line"><span class="keyword">case</span> WM_VSCROLL:</span><br><span class="line">hdc = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line"><span class="comment">//设置对齐的方式</span></span><br><span class="line"><span class="comment">//SetTextAlign(hdc, TA_TOP | TA_RIGHT);</span></span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (<span class="built_in">LOWORD</span>(wParam))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> SB_LINEUP:</span><br><span class="line"><span class="built_in">TextOut</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, _T(<span class="string">&quot;向上滚动一行&quot;</span>), <span class="number">6</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> SB_LINEDOWN:</span><br><span class="line"><span class="built_in">TextOut</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, _T(<span class="string">&quot;向下滚动一行&quot;</span>), <span class="number">6</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> SB_PAGEDOWN:</span><br><span class="line"><span class="built_in">TextOut</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, _T(<span class="string">&quot;想下滚动一页&quot;</span>), <span class="number">6</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> SB_THUMBTRACK:</span><br><span class="line"><span class="built_in">TextOut</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, _T(<span class="string">&quot;抓着不放&quot;</span>), <span class="number">4</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">ReleaseDC</span>(hWnd, hdc);</span><br><span class="line"><span class="keyword">break</span>;</span><br></pre></td></tr></table></figure><p>MoveToEx()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">//指定一个起点</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>LineTo()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>psgx学习</title>
      <link href="/2022/04/21/psgx%E5%AD%A6%E4%B9%A0/"/>
      <url>/2022/04/21/psgx%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>项目文件:</p><p><img src="/.com//blog\source_posts\image-20220421234323827.png" alt="image-20220421234323827"></p>]]></content>
      
      
      
        <tags>
            
            <tag> sgx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓</title>
      <link href="/2022/04/14/%E5%AE%89%E5%8D%93/"/>
      <url>/2022/04/14/%E5%AE%89%E5%8D%93/</url>
      
        <content type="html"><![CDATA[<h3 id="数据的保存"><a href="#数据的保存" class="headerlink" title="数据的保存"></a>数据的保存</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br></pre></td><td class="code"><pre><span class="line">sharedPreference:保存和读取数据</span><br><span class="line"><span class="comment">//获取权限</span></span><br><span class="line">        ActivityCompat.requestPermissions(MainActivity.<span class="keyword">this</span>, <span class="keyword">new</span> String[]&#123;</span><br><span class="line">        Manifest.permission.READ_EXTERNAL_STORAGE, Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;, <span class="number">1</span>);</span><br><span class="line">        <span class="comment">//设置为private只能对此app有用</span></span><br><span class="line">        <span class="comment">//从sharedPreference中读取数据</span></span><br><span class="line">        SharedPreferences sharedPreferences = getPreferences(Activity.MODE_PRIVATE);</span><br><span class="line">        String name = sharedPreferences.getString(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;no name&quot;</span>);</span><br><span class="line">        String color = sharedPreferences.getString(<span class="string">&quot;color&quot;</span>, <span class="string">&quot;black&quot;</span>);</span><br><span class="line"></span><br><span class="line">        tv_name.setText(name);</span><br><span class="line">        tv_color.setText(color);</span><br><span class="line"></span><br><span class="line">     </span><br><span class="line">        SharedPreferences.Editor editor = sharedPreferences.edit();</span><br><span class="line">        editor.putString(<span class="string">&quot;name&quot;</span>, tv_name.getText().toString());</span><br><span class="line">        editor.putString(<span class="string">&quot;color&quot;</span>, tv_color.getText().toString());</span><br><span class="line">        editor.commit();<span class="comment">//提交之后才会写入文件</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//sdcard的保存和读取数据</span></span><br><span class="line">File sdcard = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DOWNLOADS);</span><br><span class="line">        String path = sdcard.getPath();</span><br><span class="line"></span><br><span class="line">        File file = <span class="keyword">new</span> File(path + File.separator + <span class="string">&quot;list.txt&quot;</span>);</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line">        BufferedReader bufferedReader = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                bufferedReader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(file));</span><br><span class="line">                String line = <span class="keyword">null</span>;</span><br><span class="line">                line = bufferedReader.readLine();</span><br><span class="line">                <span class="keyword">while</span> (line != <span class="keyword">null</span>) &#123;</span><br><span class="line">                    tv_neirong.append(line);</span><br><span class="line">                    line = bufferedReader.readLine();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    bufferedReader.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                file.createNewFile();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//将数据写入文件</span></span><br><span class="line">        bt2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                String neirong = tv_neirong.getText().toString();</span><br><span class="line">                BufferedWriter bufferedWriter = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    bufferedWriter =<span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(file,<span class="keyword">true</span>));</span><br><span class="line">                    bufferedWriter.write(neirong);</span><br><span class="line"></span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        bufferedWriter.close();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将数据存入数据库sqlite3</span></span><br><span class="line"><span class="comment">//新建一个MyDBHelper用来创建数据库和数据表</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyDBHelper</span> <span class="keyword">extends</span> <span class="title">SQLiteOpenHelper</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String table_name = <span class="string">&quot;users&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String db_name=<span class="string">&quot;muzinan&quot;</span>;</span><br><span class="line">    <span class="comment">//构造函数 出入数据库的名字</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyDBHelper</span><span class="params">(<span class="meta">@Nullable</span> Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, db_name, <span class="keyword">null</span>, <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(SQLiteDatabase sqLiteDatabase)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;create table if not exists &quot;</span> + table_name + <span class="string">&quot; (_username text primary key, psw text, phone integer, address text,gender text)&quot;</span>;</span><br><span class="line">        sqLiteDatabase.execSQL(sql);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//用于声明</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(SQLiteDatabase sqLiteDatabase, <span class="keyword">int</span> i, <span class="keyword">int</span> i1)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;DROP TABLE IF EXISTS &quot;</span> + table_name;</span><br><span class="line">        sqLiteDatabase.execSQL(sql);</span><br><span class="line">        onCreate(sqLiteDatabase);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">&quot;UsersDao&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] user_column = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;_username&quot;</span>, <span class="string">&quot;psw&quot;</span>, <span class="string">&quot;phone&quot;</span>, <span class="string">&quot;address&quot;</span>, <span class="string">&quot;gender&quot;</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> MyDBHelper userDBHelper;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UserDao</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        userDBHelper = <span class="keyword">new</span> MyDBHelper(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断数据表中是否含有数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isDateExist</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            db = userDBHelper.getReadableDatabase();</span><br><span class="line">            cursor = db.query(userDBHelper.table_name, <span class="keyword">new</span> String[]&#123;<span class="string">&quot;count(_username)&quot;</span>&#125;, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (cursor.moveToFirst()) &#123;</span><br><span class="line">                count = cursor.getInt(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (count &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;,e&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="keyword">null</span>) &#123;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (db != <span class="keyword">null</span>) &#123;</span><br><span class="line">                db.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 添加</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">insertDate</span><span class="params">(String username, String psw, String address, String gender, <span class="keyword">int</span> phone)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            db = userDBHelper.getWritableDatabase();</span><br><span class="line">            db.beginTransaction();</span><br><span class="line"></span><br><span class="line">            ContentValues contentValues = <span class="keyword">new</span> ContentValues();</span><br><span class="line">            contentValues.put(<span class="string">&quot;_username&quot;</span>, username);</span><br><span class="line">            contentValues.put(<span class="string">&quot;psw&quot;</span>, psw);</span><br><span class="line">            contentValues.put(<span class="string">&quot;address&quot;</span>, address);</span><br><span class="line">            contentValues.put(<span class="string">&quot;phone&quot;</span>, phone);</span><br><span class="line">            contentValues.put(<span class="string">&quot;gender&quot;</span>, gender);</span><br><span class="line">            db.insertOrThrow(userDBHelper.table_name, <span class="keyword">null</span>, contentValues);</span><br><span class="line">            db.setTransactionSuccessful();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLiteConstraintException e) &#123;</span><br><span class="line">            Toast.makeText(context, <span class="string">&quot;主键重复&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;&quot;</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (db != <span class="keyword">null</span>) &#123;</span><br><span class="line">                db.endTransaction();</span><br><span class="line">                db.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * 修改数据</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">updateOrder</span><span class="params">(String username, String psw, String address, String gender, <span class="keyword">int</span> phone)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            db = userDBHelper.getWritableDatabase();</span><br><span class="line">            db.beginTransaction();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// update Orders set OrderPrice = 800 where Id = 6</span></span><br><span class="line">            ContentValues contentValues = <span class="keyword">new</span> ContentValues();</span><br><span class="line">            contentValues.put(<span class="string">&quot;_username&quot;</span>, username);</span><br><span class="line">            contentValues.put(<span class="string">&quot;psw&quot;</span>, psw);</span><br><span class="line">            contentValues.put(<span class="string">&quot;address&quot;</span>, address);</span><br><span class="line">            contentValues.put(<span class="string">&quot;phone&quot;</span>, phone);</span><br><span class="line">            contentValues.put(<span class="string">&quot;gender&quot;</span>, gender);</span><br><span class="line"></span><br><span class="line">            db.update(userDBHelper.table_name, contentValues,</span><br><span class="line">                    <span class="string">&quot;_username = ?&quot;</span>,</span><br><span class="line">                    <span class="keyword">new</span> String[]&#123;username&#125;);</span><br><span class="line"></span><br><span class="line">            db.setTransactionSuccessful();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;&quot;</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (db != <span class="keyword">null</span>) &#123;</span><br><span class="line">                db.endTransaction();</span><br><span class="line">                db.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除一条数据</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">deleteOrder</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            db = userDBHelper.getWritableDatabase();</span><br><span class="line">            db.beginTransaction();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// delete from Orders where Id = 7</span></span><br><span class="line">            db.delete(userDBHelper.table_name, <span class="string">&quot;_username= ?&quot;</span>, <span class="keyword">new</span> String[]&#123;username&#125;);</span><br><span class="line">            db.setTransactionSuccessful();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;&quot;</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (db != <span class="keyword">null</span>) &#123;</span><br><span class="line">                db.endTransaction();</span><br><span class="line">                db.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据查询  此处将用户名为username的信息提取出来</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;Range&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUser</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        SQLiteDatabase db = <span class="keyword">null</span>;</span><br><span class="line">        Cursor cursor = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            db = userDBHelper.getReadableDatabase();</span><br><span class="line"></span><br><span class="line">            cursor = db.query(userDBHelper.table_name, user_column, <span class="string">&quot;_username = ?&quot;</span>,</span><br><span class="line">                    <span class="keyword">new</span> String[]&#123;username&#125;,</span><br><span class="line">                    <span class="keyword">null</span>, <span class="keyword">null</span>, <span class="keyword">null</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//求出所有性别为男的人的总数</span></span><br><span class="line">            <span class="comment">/*cursor=db.query(userDBHelper.table_name, new String[]&#123;&quot;COUNT(sex)&quot;&#125;,</span></span><br><span class="line"><span class="comment">                    &quot;gender=?&quot;, new String[]&#123;&quot;男&quot;&#125;, null, null, null);</span></span><br><span class="line"><span class="comment">            if (cursor.moveToFirst()) &#123;</span></span><br><span class="line"><span class="comment">                count = cursor.getInt(0);</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(cursor.getCount()&gt;<span class="number">0</span>) &#123;</span><br><span class="line">                User user = <span class="keyword">new</span> User();</span><br><span class="line">                cursor.moveToFirst();</span><br><span class="line">                user.Username = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;_username&quot;</span>)));</span><br><span class="line">                user.Psw = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;psw&quot;</span>)));</span><br><span class="line">                user.Phone = (cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;phone&quot;</span>)));</span><br><span class="line">                user.Add = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;address&quot;</span>)));</span><br><span class="line">                user.Gender = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;gender&quot;</span>)));</span><br><span class="line">                Log.i(TAG, user.toString());</span><br><span class="line">                <span class="keyword">return</span> user;</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="comment">/* if (cursor.getCount() &gt; 0) &#123;</span></span><br><span class="line"><span class="comment">                List&lt;User&gt; userList = new ArrayList&lt;User&gt;(cursor.getCount());</span></span><br><span class="line"><span class="comment">                while (cursor.moveToNext()) &#123;</span></span><br><span class="line"><span class="comment">                    User user = parseUser(cursor);</span></span><br><span class="line"><span class="comment">                    userList.add(user);</span></span><br><span class="line"><span class="comment">                &#125;</span></span><br><span class="line"><span class="comment">                return userList;</span></span><br><span class="line"><span class="comment">            &#125;*/</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.e(TAG, <span class="string">&quot;&quot;</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (cursor != <span class="keyword">null</span>) &#123;</span><br><span class="line">                cursor.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (db != <span class="keyword">null</span>) &#123;</span><br><span class="line">                db.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 将查找到的数据转换成User类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;Range&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> User <span class="title">parseUser</span><span class="params">(Cursor cursor)</span> </span>&#123;</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        user.Username = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;_username&quot;</span>)));</span><br><span class="line">        user.Psw = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;psw&quot;</span>)));</span><br><span class="line">        user.Phone = (cursor.getInt(cursor.getColumnIndex(<span class="string">&quot;phone&quot;</span>)));</span><br><span class="line">        user.Add = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;address&quot;</span>)));</span><br><span class="line">        user.Gender = (cursor.getString(cursor.getColumnIndex(<span class="string">&quot;gender&quot;</span>)));</span><br><span class="line">        <span class="keyword">return</span> user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="字体的设置"><a href="#字体的设置" class="headerlink" title="字体的设置"></a>字体的设置</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">Android系统默认字体支持四种字体，分别为：</span><br><span class="line"></span><br><span class="line">noraml （普通字体,系统默认使用的字体）</span><br><span class="line">sans（非衬线字体）</span><br><span class="line">serif （衬线字体）</span><br><span class="line">monospace（等宽字体）</span><br><span class="line">除此之外还可以使用其他字体文件（*.ttf）</span><br><span class="line"></span><br><span class="line">一、使用系统自带的字体</span><br><span class="line">1.在xml中修改字体</span><br><span class="line"></span><br><span class="line">&lt;!--  不指明typeface --&gt;</span><br><span class="line">            &lt;TextView style=&quot;@style/TextStyle&quot;</span><br><span class="line">                android:text=&quot;Hello , world  中华人民共和国(没有设置属性)&quot;/&gt;</span><br><span class="line"> </span><br><span class="line">            &lt;!--  使用默认的normal字体--&gt;</span><br><span class="line">            &lt;TextView</span><br><span class="line">                style=&quot;@style/TextStyle&quot;</span><br><span class="line">                android:typeface=&quot;normal&quot;</span><br><span class="line">                android:text=&quot;Hello , world  中华人民共和国(xml设置normal)&quot;/&gt;</span><br><span class="line"> </span><br><span class="line">            &lt;!--  使用默认的sans字体--&gt;</span><br><span class="line">            &lt;TextView</span><br><span class="line">                style=&quot;@style/TextStyle&quot;</span><br><span class="line">                android:typeface=&quot;sans&quot;</span><br><span class="line">                android:text=&quot;Hello , world  中华人民共和国(xml设置sans)&quot;/&gt;</span><br><span class="line"> </span><br><span class="line">            &lt;!--  使用默认的serifs字体--&gt;</span><br><span class="line">            &lt;TextView</span><br><span class="line">                style=&quot;@style/TextStyle&quot;</span><br><span class="line">                android:typeface=&quot;serif&quot;</span><br><span class="line">                android:text=&quot;Hello , world  中华人民共和国(xml设置serif)&quot;/&gt;</span><br><span class="line"> </span><br><span class="line">            &lt;!--  使用默认的monospace字体--&gt;</span><br><span class="line">            &lt;TextView</span><br><span class="line">                style=&quot;@style/TextStyle&quot;</span><br><span class="line">                android:typeface=&quot;monospace&quot;</span><br><span class="line">                android:text=&quot;Hello , world  中华人民共和国(xml设置monospace)&quot;/&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2.在Java代码中修改字体</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        vSansText = (TextView) findViewById(R.id.sans);</span><br><span class="line">        vSerifText = (TextView) findViewById(R.id.serif);</span><br><span class="line">        vMonospaceText = (TextView) findViewById(R.id.monospace);</span><br><span class="line"> </span><br><span class="line">        //设置字体样式</span><br><span class="line">        vSansText.setTypeface(Typeface.SANS_SERIF);</span><br><span class="line">        vSerifText.setTypeface(Typeface.SERIF);</span><br><span class="line">        vMonospaceText.setTypeface(Typeface.MONOSPACE);</span><br><span class="line"></span><br><span class="line">二、在Android中可以引入其他字体</span><br><span class="line"></span><br><span class="line">        //从asset 读取字体</span><br><span class="line">        //得到AssetManager</span><br><span class="line">        AssetManager mgr = getAssets();</span><br><span class="line">        //根据路径得到Typeface</span><br><span class="line">        Typeface tf = Typeface.createFromAsset(mgr, &quot;fonts/HelveticaNeueLTPro-UltLt.otf&quot;);</span><br><span class="line">        //设置字体</span><br><span class="line">        vTTFText.setTypeface(tf);</span><br></pre></td></tr></table></figure><h3 id="图标的设置"><a href="#图标的设置" class="headerlink" title="图标的设置"></a>图标的设置</h3><p><img src="/.com//blog\source_posts\image-20220415214251534.png" alt="image-20220415214251534"></p><p><img src="/.com//blog\source_posts\image-20220415214307238.png" alt="image-20220415214307238"></p><h3 id="Textview"><a href="#Textview" class="headerlink" title="Textview"></a>Textview</h3><p><img src="/.com//blog\source_posts\image-20220417173012039.png" alt="image-20220417173012039"></p><p><img src="/.com//blog\source_posts\image-20220417174300623.png" alt="image-20220417174300623"></p><h3 id="Button"><a href="#Button" class="headerlink" title="Button"></a>Button</h3><p><img src="/.com//blog\source_posts\image-20220417175256350.png" alt="image-20220417175256350"></p><p><img src="/.com//blog\source_posts\image-20220417175649701.png" alt="image-20220417175649701"></p><h3 id="ImageView"><a href="#ImageView" class="headerlink" title="ImageView"></a>ImageView</h3><p><img src="/.com//blog\source_posts\image-20220417180129763.png" alt="image-20220417180129763"></p><p><img src="/.com//blog\source_posts\image-20220417181250196.png" alt="image-20220417181250196"></p><p><img src="/.com//blog\source_posts\image-20220417181624915.png" alt="image-20220417181624915"></p><h3 id="progressbar"><a href="#progressbar" class="headerlink" title="progressbar"></a>progressbar</h3><p><img src="/.com//blog\source_posts\image-20220417181721189.png" alt="image-20220417181721189"></p><p><img src="/.com//blog\source_posts\image-20220417181939398.png" alt="image-20220417181939398"></p><p>设置progressbar的隐藏</p><h3 id="通知"><a href="#通知" class="headerlink" title="通知"></a>通知</h3><p><img src="/.com//blog\source_posts\image-20220417183740460.png" alt="image-20220417183740460"></p><p><img src="/.com//blog\source_posts\image-20220417183857795.png" alt="image-20220417183857795"></p><p><img src="/.com//blog\source_posts\image-20220417183933484.png" alt="image-20220417183933484"></p><p><img src="/.com//blog\source_posts\image-20220417184117477.png" alt="image-20220417184117477"></p><h3 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h3><p>LocationProvider</p><p>获取方法:LocationManager对象的getAllProviders()</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>oscode</title>
      <link href="/2022/03/27/oscode/"/>
      <url>/2022/03/27/oscode/</url>
      
        <content type="html"><![CDATA[<h1 id="进程的调度"><a href="#进程的调度" class="headerlink" title="进程的调度:"></a>进程的调度:</h1><h2 id="基于优先级优先调度"><a href="#基于优先级优先调度" class="headerlink" title="基于优先级优先调度"></a>基于优先级优先调度</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//定义进程控制块PCB</span></span><br><span class="line"><span class="comment">//定义状态</span></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="title">Status</span> &#123;</span></span><br><span class="line">    E,<span class="comment">//正在运行</span></span><br><span class="line">    R,<span class="comment">//运行结束</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PCB</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>: </span><br><span class="line">    string processName;</span><br><span class="line">    PCB* next;</span><br><span class="line">    <span class="keyword">int</span> runtime;</span><br><span class="line">    <span class="keyword">int</span> priority;</span><br><span class="line">    Status status;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">PCB</span>() :<span class="built_in">processName</span>(<span class="string">&quot;N&quot;</span>), <span class="built_in">next</span>(<span class="literal">NULL</span>), <span class="built_in">runtime</span>(<span class="built_in">rand</span>() % <span class="number">7</span>), <span class="built_in">priority</span>(<span class="built_in">rand</span>() % <span class="number">7</span>), <span class="built_in">status</span>(R) &#123;&#125;;<span class="comment">//</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; processName &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; runtime &lt;&lt; <span class="string">&quot;\t\t&quot;</span> &lt;&lt; priority;</span><br><span class="line">        <span class="keyword">if</span> (status == E) &#123; cout &lt;&lt; <span class="string">&quot;\tE&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123; cout &lt;&lt; <span class="string">&quot;\tR&quot;</span> &lt;&lt; endl; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">queuePCB</span>;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">queuePCB</span> &#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    PCB* head;<span class="comment">//指向队首的指针</span></span><br><span class="line">    PCB* p;<span class="comment">//游离的指针</span></span><br><span class="line"><span class="keyword">public</span>:  </span><br><span class="line">    <span class="built_in">queuePCB</span>()</span><br><span class="line">        :<span class="built_in">head</span>(<span class="literal">NULL</span>)</span><br><span class="line">        , <span class="built_in">p</span>(<span class="literal">NULL</span>)</span><br><span class="line">    &#123;&#125;</span><br><span class="line">    <span class="function">PCB* <span class="title">Insert</span><span class="params">(PCB&amp; pnode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pnode.processName == <span class="string">&quot;N&quot;</span>) &#123;<span class="comment">//初始化进程名</span></span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;请输入进程名：&quot;</span> &lt;&lt; endl;</span><br><span class="line">            string name;</span><br><span class="line">            cin &gt;&gt; name;</span><br><span class="line">            pnode.processName = name;</span><br><span class="line">        &#125;</span><br><span class="line">        p = head;</span><br><span class="line">        <span class="comment">//若是指针不为空</span></span><br><span class="line">        <span class="keyword">if</span> (head != <span class="literal">NULL</span>) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (head-&gt;next == <span class="literal">NULL</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (head-&gt;priority &lt; pnode.priority) </span><br><span class="line">                    &#123;<span class="comment">//swap</span></span><br><span class="line">                    pnode.next = head;</span><br><span class="line">                    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">                    head = &amp;pnode;</span><br><span class="line">                    <span class="built_in">Show</span>();</span><br><span class="line">                    <span class="keyword">return</span> p;</span><br><span class="line">                    &#125;</span><br><span class="line">                <span class="keyword">else</span> </span><br><span class="line">                    &#123;</span><br><span class="line">                    head-&gt;next = &amp;pnode;</span><br><span class="line">                    pnode.next = <span class="literal">NULL</span>;</span><br><span class="line">                    <span class="built_in">Show</span>();</span><br><span class="line">                    <span class="keyword">return</span> p;</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (pnode.priority &gt; head-&gt;priority)</span><br><span class="line">                &#123;</span><br><span class="line">                    pnode.next = p;</span><br><span class="line">                    head = &amp;pnode;</span><br><span class="line">                    <span class="built_in">Show</span>();</span><br><span class="line">                    <span class="keyword">return</span> p;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (pnode.priority &gt; (p-&gt;next-&gt;priority))</span><br><span class="line">                    &#123;</span><br><span class="line">                        pnode.next = p-&gt;next;</span><br><span class="line">                        p-&gt;next = &amp;pnode;</span><br><span class="line">                        <span class="built_in">Show</span>();</span><br><span class="line">                        <span class="keyword">return</span> p;</span><br><span class="line">                    &#125;</span><br><span class="line">                    p = p-&gt;next;</span><br><span class="line">                &#125;</span><br><span class="line">                p-&gt;next = &amp;pnode;</span><br><span class="line">                pnode.next= <span class="literal">NULL</span>;</span><br><span class="line">                <span class="built_in">Show</span>();</span><br><span class="line">                <span class="keyword">return</span> p;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">    head = &amp;pnode;</span><br><span class="line">    head-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="built_in">Show</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Run</span><span class="params">(PCB&amp; pnode)</span> </span>&#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;运行的进程为：&quot;</span> &lt;&lt; endl;</span><br><span class="line">        pnode.<span class="built_in">Display</span>();</span><br><span class="line">        cout &lt;&lt; endl;</span><br><span class="line">        pnode.priority--;</span><br><span class="line">        pnode.runtime--;</span><br><span class="line">        <span class="keyword">if</span> (pnode.runtime == <span class="number">0</span>) &#123;</span><br><span class="line">            pnode.status = E;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Dispatch</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (head != <span class="literal">NULL</span>) &#123;</span><br><span class="line">            <span class="built_in">Run</span>(*head);</span><br><span class="line">            <span class="keyword">if</span> (head-&gt;status == E) &#123;</span><br><span class="line">                head = head-&gt;next;</span><br><span class="line">                <span class="built_in">Show</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                p = head;</span><br><span class="line">                head = head-&gt;next;</span><br><span class="line">                <span class="built_in">Insert</span>(*p);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        PCB* tmp;</span><br><span class="line">        tmp = head;</span><br><span class="line">        <span class="keyword">if</span> (tmp != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; <span class="string">&quot;进程名&quot;</span> &lt;&lt; <span class="string">&#x27;\t&#x27;</span> &lt;&lt; <span class="string">&quot;所需运行时间&quot;</span> &lt;&lt; <span class="string">&#x27;\t&#x27;</span> &lt;&lt; <span class="string">&quot;优先级 &quot;</span> &lt;&lt; <span class="string">&#x27;\t&#x27;</span> &lt;&lt; <span class="string">&quot;状态&quot;</span> &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (tmp != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tmp-&gt;<span class="built_in">Display</span>();</span><br><span class="line">            tmp = tmp-&gt;next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    queuePCB qPCB;</span><br><span class="line">    PCB arr[<span class="number">5</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">size_t</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        qPCB.<span class="built_in">Insert</span>(arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;进程已就绪&quot;</span> &lt;&lt; endl;</span><br><span class="line">    qPCB.<span class="built_in">Dispatch</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;进程运行已结束&quot;</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="进程调度"><a href="#进程调度" class="headerlink" title="进程调度"></a>进程调度</h2><table><thead><tr><th align="left"><strong>调度方式</strong></th><th><strong>概念</strong></th><th><strong>优点</strong></th><th><strong>缺点</strong></th></tr></thead><tbody><tr><td align="left"><strong>FCFS</strong></td><td>根据到达时间来进行调度，先到达的先服务</td><td>算法简单，易于实现</td><td>对短作业不公平，可能会出现护送效应</td></tr><tr><td align="left"><strong>SJF</strong></td><td>根据期望运行时间进行调度，在前一个进程运行过程中到达的多个进程，按服务时间进行排列</td><td>考虑到作业的服务时间情况，短作业优先进行</td><td>有可能短进程一致插队，导致长进程处于长期饥饿状态</td></tr><tr><td align="left"><strong>Priority</strong></td><td>每次调度时选择当前已到达且优先级最高的进程，就是在运行进程的过程中，如果有优先级高的进程到达队列，则放弃当前进行，去进行优先级高的进程</td><td>可以根据调度环境的需求调节作业的优先级</td><td>可能会造成饥饿</td></tr><tr><td align="left"><strong>SRTF</strong></td><td>当新进程进入就绪<a href="https://so.csdn.net/so/search?q=%E9%98%9F%E5%88%97&spm=1001.2101.3001.7020">队列</a>时，如果它需要处理的时间比当前进程处理时间短，则将当前进程挂起，优先执行处理时间段的进程，是SJF的抢占式版本</td><td>保证新的短作业一进入系统就能很快的到服务,平均等待时间短</td><td>需要计算剩余时间开销比较大，并且长作业仍然存在饥饿现象</td></tr><tr><td align="left"><strong>Round  Robin</strong></td><td>调度器把处理器分成时间片，分配给各个进程，将时间片运行完后，进程被上下文切换走，运行下一个进程</td><td>所有作业运行机会均等</td><td>作业间上下文切换开销大</td></tr></tbody></table><h3 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="keyword">class</span> <span class="title">Status</span>//进程的两种状态 就绪<span class="title">or</span>完成</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">READY, FINISH</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PCB</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string Pname;<span class="comment">//进程名</span></span><br><span class="line">PCB* Pnext;<span class="comment">//指向下一个进程的指针</span></span><br><span class="line"><span class="keyword">int</span> t_arrival;<span class="comment">//到达时间</span></span><br><span class="line"><span class="keyword">int</span> t_need;<span class="comment">//还需要服务的时间，每次运行会自减一</span></span><br><span class="line"><span class="keyword">int</span> t_pass;<span class="comment">//已经服务时间</span></span><br><span class="line"><span class="keyword">int</span> priority;<span class="comment">//优先数</span></span><br><span class="line">Status status;<span class="comment">//进程状态</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">PCB</span>();<span class="comment">//默认构造函数</span></span><br><span class="line"><span class="built_in">PCB</span>(string name, <span class="keyword">int</span> arrival, <span class="keyword">int</span> need, <span class="keyword">int</span> pri);<span class="comment">//含参构造函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">display</span><span class="params">()</span></span>;<span class="comment">//输出当前进程的信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>;<span class="comment">//将当前进程运行一次</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PCBque</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">friend</span> <span class="class"><span class="keyword">class</span> <span class="title">PCB</span>;</span><span class="comment">//设置友元函数，可以访问私有属性</span></span><br><span class="line">PCB* first;<span class="comment">//头结点</span></span><br><span class="line">PCB* last;<span class="comment">//尾结点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//含参构造，参数为头结点</span></span><br><span class="line"><span class="built_in">PCBque</span>(PCB* p);</span><br><span class="line"><span class="comment">//在point后插入p</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertAfter</span><span class="params">(PCB* point, PCB* p)</span></span>;</span><br><span class="line"><span class="comment">//移除p后的结点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">removeAfter</span><span class="params">(PCB* p)</span></span>;</span><br><span class="line"><span class="comment">//找到p的前一个结点（first的前一个结点为last），和removeAfter结合使用</span></span><br><span class="line"><span class="function">PCB* <span class="title">findper</span><span class="params">(PCB* p)</span></span>;</span><br><span class="line"><span class="comment">//输出队列中所有进程的信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//按到达时间排序，p为存储指向结点指针的数组的首地址</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortByArrival</span><span class="params">(PCB* p)</span></span>;</span><br><span class="line"><span class="comment">//按需要被服务的时间排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sortByNeeded</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//交换链表中两个结点除next之外的属性（相当于交换两个进程的位置）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span><span class="params">(PCB* p1, PCB* p2)</span></span>;</span><br><span class="line"><span class="comment">//先来先服务算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">FCFS</span><span class="params">(PCB** p)</span></span>;</span><br><span class="line"><span class="comment">//短作业优先算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SJF</span><span class="params">(PCB** p)</span></span>;</span><br><span class="line"><span class="comment">//优先级调度算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Priority</span><span class="params">(PCB** p)</span></span>;</span><br><span class="line"><span class="comment">//最短的剩余时间优先算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SRTF</span><span class="params">(PCB** p)</span></span>;</span><br><span class="line"><span class="comment">//轮转（轮询）算法</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RR</span><span class="params">(PCB** p)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//——————————PCB的函数实现————————————</span></span><br><span class="line"><span class="comment">//PCB的默认构造函数,创建临时指针时调用</span></span><br><span class="line">PCB::<span class="built_in">PCB</span>()</span><br><span class="line">&#123;</span><br><span class="line">string name = <span class="string">&quot;null&quot;</span>;</span><br><span class="line">Pnext = <span class="literal">nullptr</span>;</span><br><span class="line">t_arrival = <span class="number">0</span>;</span><br><span class="line">t_need = <span class="number">0</span>;</span><br><span class="line">t_pass = <span class="number">0</span>;</span><br><span class="line">priority = <span class="number">0</span>;</span><br><span class="line">status = Status::READY;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//PCB的含参构造，创建进程时调用</span></span><br><span class="line">PCB::<span class="built_in">PCB</span>(string name, <span class="keyword">int</span> arrival, <span class="keyword">int</span> need, <span class="keyword">int</span> pri)</span><br><span class="line">&#123;</span><br><span class="line">Pname = name;</span><br><span class="line">Pnext = <span class="literal">nullptr</span>;</span><br><span class="line">t_arrival = arrival;</span><br><span class="line">t_need = need;</span><br><span class="line">t_pass = <span class="number">0</span>;<span class="comment">//初始状态的已运行时间为0</span></span><br><span class="line">priority = pri;</span><br><span class="line">status = Status::READY;<span class="comment">//进程初始状态都为READY</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出当前进程的信息</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCB::display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string str;</span><br><span class="line"><span class="keyword">if</span> (status == Status::READY)</span><br><span class="line">&#123;</span><br><span class="line">str = <span class="string">&quot;READY&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">str = <span class="string">&quot;FINISH&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; Pname &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; t_arrival &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; t_need &lt;&lt; <span class="string">&quot;\t&quot;</span></span><br><span class="line">&lt;&lt; t_pass &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; priority &lt;&lt; <span class="string">&quot;\t&quot;</span> &lt;&lt; str &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将当前进程运行一次</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCB::run</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">t_need--;</span><br><span class="line">t_pass++;</span><br><span class="line">priority--;</span><br><span class="line"><span class="keyword">if</span> (t_need == <span class="number">0</span>)<span class="comment">//如果服务时间为0，修改进程状态为READY</span></span><br><span class="line">&#123;</span><br><span class="line">status = Status::FINISH;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//—————————PCBque的函数实现————————————</span></span><br><span class="line"><span class="comment">//PCBque的含参构造</span></span><br><span class="line">PCBque::<span class="built_in">PCBque</span>(PCB* p)</span><br><span class="line">&#123;</span><br><span class="line">first = last = p;</span><br><span class="line">last-&gt;Pnext = first;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//后插</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::insertAfter</span><span class="params">(PCB* point, PCB* q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">q-&gt;Pnext = point-&gt;Pnext;</span><br><span class="line">point-&gt;Pnext = q;</span><br><span class="line"><span class="keyword">if</span> (point == last)</span><br><span class="line">&#123;</span><br><span class="line">last = q;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//找到前一个结点（first的前一个结点为last），和removeAfter结合使用</span></span><br><span class="line"><span class="function">PCB* <span class="title">PCBque::findper</span><span class="params">(PCB* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PCB* q = first;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;Pnext == p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> q;</span><br><span class="line">&#125;</span><br><span class="line">q = q-&gt;Pnext;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//后删删除p后面的节点</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::removeAfter</span><span class="params">(PCB* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PCB* q = p-&gt;Pnext;</span><br><span class="line">p-&gt;Pnext = q-&gt;Pnext;</span><br><span class="line"><span class="keyword">if</span> (q == first)</span><br><span class="line">&#123;</span><br><span class="line">first = q-&gt;Pnext;</span><br><span class="line">last-&gt;Pnext = first;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (q == last) &#123;</span><br><span class="line">last = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">delete</span> q;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出所有进程信息，从头结点开始，循环调用display</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::show</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PCB* p = first;</span><br><span class="line"><span class="keyword">if</span> (first == <span class="literal">nullptr</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">p-&gt;<span class="built_in">display</span>();</span><br><span class="line">p = p-&gt;Pnext;</span><br><span class="line">&#125; <span class="keyword">while</span> (p != first);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按到达时间排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::sortByArrival</span><span class="params">(PCB* p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PCB* q = first;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;t_arrival &lt; q-&gt;t_arrival)</span><br><span class="line">&#123;</span><br><span class="line">p-&gt;Pnext = first;</span><br><span class="line">last-&gt;Pnext = p;</span><br><span class="line">first = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">q = q-&gt;Pnext;</span><br><span class="line">&#125; <span class="keyword">while</span> (q != last &amp;&amp; q-&gt;Pnext-&gt;t_arrival &lt; p-&gt;t_arrival);</span><br><span class="line"><span class="built_in">insertAfter</span>(q, p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按需要被服务的时间排序</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::sortByNeeded</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PCB* p1 = first;</span><br><span class="line">PCB* p2 = first;</span><br><span class="line">PCB* pcb;</span><br><span class="line"><span class="keyword">int</span> time;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">time = p1-&gt;t_arrival + p1-&gt;t_need;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;Pnext-&gt;t_arrival &lt; time)</span><br><span class="line">&#123;</span><br><span class="line">p2 = p1;</span><br><span class="line"><span class="keyword">int</span> num = <span class="number">1</span>;</span><br><span class="line">p1 = p1-&gt;Pnext;</span><br><span class="line">pcb = p1;</span><br><span class="line"><span class="keyword">while</span> (p1 != last &amp;&amp; p1-&gt;Pnext-&gt;t_arrival &lt; time)</span><br><span class="line">&#123;</span><br><span class="line">num++;</span><br><span class="line">p1 = p1-&gt;Pnext;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; num - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">p1 = pcb;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; num - j - <span class="number">1</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;t_need &gt; p1-&gt;Pnext-&gt;t_need)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(p1, p1-&gt;Pnext);</span><br><span class="line">&#125;</span><br><span class="line">p1 = p1-&gt;Pnext;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p1 = p2-&gt;Pnext;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//交换链表中两个结点除next之外的属性（相当于交换两个进程的位置）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::swap</span><span class="params">(PCB* p1, PCB* p2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">PCB* temp = <span class="keyword">new</span> <span class="built_in">PCB</span>();</span><br><span class="line">temp-&gt;Pname = p1-&gt;Pname;</span><br><span class="line">temp-&gt;t_arrival = p1-&gt;t_arrival;</span><br><span class="line">temp-&gt;t_need = p1-&gt;t_need;</span><br><span class="line">temp-&gt;t_pass = p1-&gt;t_pass;</span><br><span class="line">temp-&gt;priority = p1-&gt;priority;</span><br><span class="line">p1-&gt;Pname = p2-&gt;Pname;</span><br><span class="line">p1-&gt;t_arrival = p2-&gt;t_arrival;</span><br><span class="line">p1-&gt;t_need = p2-&gt;t_need;</span><br><span class="line">p1-&gt;t_pass = p2-&gt;t_pass;</span><br><span class="line">p1-&gt;priority = p2-&gt;priority;</span><br><span class="line">p2-&gt;Pname = temp-&gt;Pname;</span><br><span class="line">p2-&gt;t_arrival = temp-&gt;t_arrival;</span><br><span class="line">p2-&gt;t_need = temp-&gt;t_need;</span><br><span class="line">p2-&gt;t_pass = temp-&gt;t_pass;</span><br><span class="line">p2-&gt;priority = temp-&gt;priority;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按FCFS排序：按到达时间排序（非抢占式）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::FCFS</span><span class="params">(PCB** p)</span><span class="comment">//p为存储PCB类指针的数组的首地址（存储指针的数组的首地址，所以是PCB**）</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;----------------------FCFS----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sortByArrival</span>(*(p + i));<span class="comment">//得到按到达时间排序的五个进程队列</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">show</span>();<span class="comment">//输出排序完毕的队列</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">PCB* q = first;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------&quot;</span> &lt;&lt; q-&gt;Pname &lt;&lt; <span class="string">&quot;---------------------&quot;</span> &lt;&lt; endl;<span class="comment">//标明哪个进程正在运行（非抢占式）</span></span><br><span class="line"><span class="keyword">while</span> (q-&gt;status == Status::READY)</span><br><span class="line">&#123;</span><br><span class="line">q-&gt;<span class="built_in">run</span>();</span><br><span class="line">q-&gt;<span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">q = q-&gt;Pnext;</span><br><span class="line">&#125; <span class="keyword">while</span> (q != first);<span class="comment">//循环运行，直到所有进程都运行完</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按SJF排序：先按到达时间排序，再根据执行时间按服务时间排序（非抢占式）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::SJF</span><span class="params">(PCB** p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------SJF-------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sortByArrival</span>(*(p + i));<span class="comment">//得到按到达时间排序的五个进程队列</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sortByNeeded</span>();<span class="comment">//根据前一个进程执行过程中到达的进程按服务时间进行排序</span></span><br><span class="line"><span class="built_in">show</span>();<span class="comment">//输出排序完毕的队列</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">PCB* q = first;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;----------------------&quot;</span> &lt;&lt; q-&gt;Pname &lt;&lt; <span class="string">&quot;----------------------&quot;</span> &lt;&lt; endl; <span class="comment">//标明哪个进程正在运行（非抢占式）</span></span><br><span class="line"><span class="keyword">while</span> (q-&gt;status == Status::READY)</span><br><span class="line">&#123;</span><br><span class="line">q-&gt;<span class="built_in">run</span>();</span><br><span class="line">q-&gt;<span class="built_in">display</span>();</span><br><span class="line">&#125;</span><br><span class="line">q = q-&gt;Pnext;</span><br><span class="line">&#125; <span class="keyword">while</span> (q != first);<span class="comment">//循环运行，直到所有进程都运行完</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按Priority排序：按优先级排序（抢占式）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::Priority</span><span class="params">(PCB** p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------Priority-------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sortByArrival</span>(*(p + i));<span class="comment">//得到按到达时间排序的五个进程队列</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">show</span>();<span class="comment">//输出排序后的队列</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">PCB* p1;</span><br><span class="line">PCB* p2;</span><br><span class="line">PCB* q;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">5</span>;</span><br><span class="line">p1 = first;</span><br><span class="line"><span class="keyword">int</span> time = p1-&gt;t_arrival;</span><br><span class="line"><span class="keyword">while</span> (t &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;Pnext != p1)<span class="comment">//有两个及以上个进程未完成</span></span><br><span class="line">&#123;</span><br><span class="line">p2 = p1-&gt;Pnext;</span><br><span class="line"><span class="keyword">while</span> (p2 != p1)<span class="comment">//找到优先级最高的进程</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2-&gt;t_arrival &lt;= time)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2-&gt;priority &gt; p1-&gt;priority || p1-&gt;t_arrival&gt;time)</span><br><span class="line">&#123;</span><br><span class="line">p1 = p2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p2 = p2-&gt;Pnext;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;t_arrival &lt;= time)</span><br><span class="line">&#123;</span><br><span class="line">p1-&gt;<span class="built_in">run</span>();</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();<span class="comment">//运行一次</span></span><br><span class="line"><span class="keyword">if</span> (p1-&gt;status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">q = p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">q-&gt;<span class="built_in">display</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">p1 = p1-&gt;Pnext;</span><br><span class="line"><span class="built_in">removeAfter</span>(<span class="built_in">findper</span>(q));</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">time++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//只剩一个进程</span></span><br><span class="line">&#123;</span><br><span class="line">p1-&gt;<span class="built_in">run</span>();</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line">time++;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按SRTF排序：SJF的抢占版本（抢占式）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::SRTF</span><span class="params">(PCB** p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------SRTF-------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sortByArrival</span>(*(p + i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">show</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">PCB* p1;</span><br><span class="line">PCB* p2;</span><br><span class="line">PCB* q;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">5</span>;</span><br><span class="line">p1 = first;</span><br><span class="line"><span class="keyword">int</span> time = p1-&gt;t_arrival;</span><br><span class="line"><span class="keyword">while</span> (t &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;Pnext != p1)<span class="comment">//有两个及以上进程还在队列中</span></span><br><span class="line">&#123;</span><br><span class="line">p2 = p1-&gt;Pnext;</span><br><span class="line"><span class="keyword">while</span> (p2 != p1)<span class="comment">//找到最短任务</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2-&gt;t_arrival &lt;= time)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2-&gt;t_need &lt; p1-&gt;t_need || p1-&gt;t_arrival&gt;time)</span><br><span class="line">&#123;</span><br><span class="line">p1 = p2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p2 = p2-&gt;Pnext;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;t_arrival &lt;= time)</span><br><span class="line">&#123;</span><br><span class="line">p1-&gt;<span class="built_in">run</span>();</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">q = p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">q-&gt;<span class="built_in">display</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">p1 = p1-&gt;Pnext;</span><br><span class="line"><span class="built_in">removeAfter</span>(<span class="built_in">findper</span>(q));</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">time++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//队列中只剩一个进程</span></span><br><span class="line">&#123;</span><br><span class="line">p1-&gt;<span class="built_in">run</span>();</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line">time++;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按Round Robin排序:假设时间片为2（抢占式）</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">PCBque::RR</span><span class="params">(PCB** p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;-------------------------Round Robin-------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sortByArrival</span>(*(p + i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">show</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">PCB* p1;</span><br><span class="line">PCB* p2;</span><br><span class="line">PCB* q;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">5</span>;</span><br><span class="line">p1 = first;</span><br><span class="line"><span class="keyword">int</span> time = p1-&gt;t_arrival;</span><br><span class="line"><span class="keyword">while</span> (t &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;Pnext != p1)<span class="comment">//还剩两个及以上个进程在队列中</span></span><br><span class="line">&#123;</span><br><span class="line">p2 = p1-&gt;Pnext;</span><br><span class="line"><span class="keyword">while</span> (p2 != p1)<span class="comment">//找到下一个任务</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p2-&gt;t_arrival &lt;= time)</span><br><span class="line">&#123;</span><br><span class="line">p1 = p2;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">p2 = p2-&gt;Pnext;</span><br><span class="line">&#125;</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();<span class="comment">//运行两次</span></span><br><span class="line">p1-&gt;<span class="built_in">run</span>();</span><br><span class="line">time++;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">q = p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">q-&gt;<span class="built_in">display</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">p1 = p1-&gt;Pnext;</span><br><span class="line"><span class="built_in">removeAfter</span>(<span class="built_in">findper</span>(q));</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line">p1-&gt;<span class="built_in">run</span>();</span><br><span class="line">time++;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">q = p1;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">q-&gt;<span class="built_in">display</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">p1 = p1-&gt;Pnext;</span><br><span class="line"><span class="built_in">removeAfter</span>(<span class="built_in">findper</span>(q));</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//队列中只剩一个进程</span></span><br><span class="line">&#123;</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line">p1-&gt;<span class="built_in">run</span>();</span><br><span class="line">time++;</span><br><span class="line"><span class="keyword">if</span> (p1-&gt;status == Status::FINISH)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">p1-&gt;<span class="built_in">display</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">t--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//———————————测试函数——————————————</span></span><br><span class="line"><span class="comment">//int main()</span></span><br><span class="line"><span class="comment">//&#123;</span></span><br><span class="line"><span class="comment">////实验要求评估这五种调度，所以采用一样的数据进行测试</span></span><br><span class="line"><span class="comment">//PCB* pcb[5];</span></span><br><span class="line"><span class="comment">//////FCFS</span></span><br><span class="line"><span class="comment">////pcb[0] = new PCB(&quot;A&quot;, 11, 20, 3);</span></span><br><span class="line"><span class="comment">////pcb[1] = new PCB(&quot;B&quot;, 30, 10, 1);</span></span><br><span class="line"><span class="comment">////pcb[2] = new PCB(&quot;C&quot;, 3, 4, 2);</span></span><br><span class="line"><span class="comment">////pcb[3] = new PCB(&quot;D&quot;, 24, 1, 2);</span></span><br><span class="line"><span class="comment">////pcb[4] = new PCB(&quot;E&quot;, 14, 6, 3);</span></span><br><span class="line"><span class="comment">////PCBque* que1 = new PCBque(*pcb);</span></span><br><span class="line"><span class="comment">////que1-&gt;FCFS(pcb);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//////SJF</span></span><br><span class="line"><span class="comment">////pcb[0] = new PCB(&quot;A&quot;, 11, 20, 3);</span></span><br><span class="line"><span class="comment">////pcb[1] = new PCB(&quot;B&quot;, 30, 10, 1);</span></span><br><span class="line"><span class="comment">////pcb[2] = new PCB(&quot;C&quot;, 3, 4, 2);</span></span><br><span class="line"><span class="comment">////pcb[3] = new PCB(&quot;D&quot;, 24, 1, 2);</span></span><br><span class="line"><span class="comment">////pcb[4] = new PCB(&quot;E&quot;, 14, 6, 3);</span></span><br><span class="line"><span class="comment">////PCBque* que2 = new PCBque(*pcb);</span></span><br><span class="line"><span class="comment">////que2-&gt;SJF(pcb);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////Priority</span></span><br><span class="line"><span class="comment">//pcb[0] = new PCB(&quot;A&quot;, 11, 20, 3);</span></span><br><span class="line"><span class="comment">//pcb[1] = new PCB(&quot;B&quot;, 30, 10, 1);</span></span><br><span class="line"><span class="comment">//pcb[2] = new PCB(&quot;C&quot;, 3, 4, 2);</span></span><br><span class="line"><span class="comment">//pcb[3] = new PCB(&quot;D&quot;, 24, 1, 2);</span></span><br><span class="line"><span class="comment">//pcb[4] = new PCB(&quot;E&quot;, 14, 6, 3);</span></span><br><span class="line"><span class="comment">//PCBque* que3 = new PCBque(*pcb);</span></span><br><span class="line"><span class="comment">//que3-&gt;Priority(pcb);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//////SRTF</span></span><br><span class="line"><span class="comment">////pcb[0] = new PCB(&quot;A&quot;, 11, 20, 3);</span></span><br><span class="line"><span class="comment">////pcb[1] = new PCB(&quot;B&quot;, 30, 10, 1);</span></span><br><span class="line"><span class="comment">////pcb[2] = new PCB(&quot;C&quot;, 3, 4, 2);</span></span><br><span class="line"><span class="comment">////pcb[3] = new PCB(&quot;D&quot;, 24, 1, 2);</span></span><br><span class="line"><span class="comment">////pcb[4] = new PCB(&quot;E&quot;, 14, 6, 3);</span></span><br><span class="line"><span class="comment">////PCBque* que4 = new PCBque(*pcb);</span></span><br><span class="line"><span class="comment">////que4-&gt;SRTF(pcb);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">////Bound Bobin</span></span><br><span class="line"><span class="comment">//pcb[0] = new PCB(&quot;A&quot;, 11, 20, 3);</span></span><br><span class="line"><span class="comment">//pcb[1] = new PCB(&quot;B&quot;, 30, 10, 1);</span></span><br><span class="line"><span class="comment">//pcb[2] = new PCB(&quot;C&quot;, 3, 4, 2);</span></span><br><span class="line"><span class="comment">//pcb[3] = new PCB(&quot;D&quot;, 24, 1, 2);</span></span><br><span class="line"><span class="comment">//pcb[4] = new PCB(&quot;E&quot;, 14, 6, 3);</span></span><br><span class="line"><span class="comment">//PCBque* que5 = new PCBque(*pcb);</span></span><br><span class="line"><span class="comment">//que5-&gt;RR(pcb);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br></pre></td></tr></table></figure><h2 id="银行家算法及随机分配算法"><a href="#银行家算法及随机分配算法" class="headerlink" title="银行家算法及随机分配算法"></a>银行家算法及随机分配算法</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//vector&lt;PCB*&gt; pcbs;</span></span><br><span class="line"><span class="comment">//vector&lt;vector&lt;int&gt;&gt; resquest;</span></span><br><span class="line"><span class="comment">//vector&lt;vector&lt;int&gt;&gt; Allocation;</span></span><br><span class="line"><span class="comment">//vector&lt;int&gt; Available;</span></span><br><span class="line"><span class="comment">//vector&lt;bool&gt; Finish;</span></span><br><span class="line"><span class="comment">//vector&lt;vector&lt;int&gt;&gt; Need;</span></span><br><span class="line"><span class="comment">//vector&lt;int&gt; work;</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">enum</span> <span class="keyword">class</span> <span class="title">State</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ready,wait,finish</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">PCB</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string Pname;</span><br><span class="line">State state;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; Max;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; Allocation;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; Need;</span><br><span class="line"><span class="built_in">PCB</span>(string pname, vector&lt;<span class="keyword">int</span>&gt; num) :<span class="built_in">state</span>(State::ready) &#123;</span><br><span class="line">Pname = pname;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">max</span><span class="params">(num.begin(), num.begin() + <span class="number">3</span>)</span></span>;<span class="comment">//前三个变量为总量</span></span><br><span class="line">Max = max;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">allocation</span><span class="params">(num.begin() + <span class="number">3</span>, num.begin() + <span class="number">6</span>)</span></span>;</span><br><span class="line">Allocation = allocation;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">3</span>] = &#123; max[<span class="number">0</span>]-allocation[<span class="number">0</span>],max[<span class="number">1</span>] - allocation[<span class="number">1</span>],max[<span class="number">2</span>] - allocation[<span class="number">2</span>]&#125;;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">a</span><span class="params">(b, b +<span class="number">3</span>)</span></span>; <span class="comment">//从数组中获得初值</span></span><br><span class="line">Need = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;进程名:&quot;</span> &lt;&lt; Pname;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;进程状态为:&quot;</span>;</span><br><span class="line"><span class="built_in"><span class="keyword">switch</span></span> (state) &#123;</span><br><span class="line"><span class="keyword">case</span> State::finish:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;已完成&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> State::wait:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;在等待&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> State::ready:</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;已就绪&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; Max[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; Allocation[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; Need[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">func</span><span class="params">(vector&lt;<span class="keyword">bool</span>&gt; Finish, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; Need,vector&lt;<span class="keyword">int</span>&gt; work)</span> </span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Finish.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!Finish[i] &amp;&amp; Need[i][<span class="number">0</span>] &lt;= work[<span class="number">0</span>] &amp;&amp; Need[i][<span class="number">1</span>] &lt;= work[<span class="number">1</span>] &amp;&amp; Need[i][<span class="number">2</span>] &lt;= work[<span class="number">2</span>]) &#123;</span><br><span class="line"><span class="keyword">return</span> i+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//安全性算法</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">SafetyCheck</span><span class="params">(vector&lt;PCB*&gt; pcbs,vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; Need,vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; Allocation,vector&lt;<span class="keyword">int</span>&gt; Available )</span> </span>&#123;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; work = Available;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">finish</span> <span class="params">(Need.size())</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; finish.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="comment">//if</span></span><br><span class="line"><span class="keyword">if</span> (pcbs[i]-&gt;state == State::finish) &#123;</span><br><span class="line">finish[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> finish[i] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i = <span class="built_in">func</span>(finish, Need, work);</span><br><span class="line"><span class="keyword">while</span> (i) &#123;</span><br><span class="line">work[<span class="number">0</span>] = work[<span class="number">0</span>] + Allocation[i - <span class="number">1</span>][<span class="number">0</span>];</span><br><span class="line">work[<span class="number">1</span>] = work[<span class="number">1</span>] + Allocation[i - <span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">work[<span class="number">2</span>] = work[<span class="number">2</span>] + Allocation[i - <span class="number">1</span>][<span class="number">2</span>];</span><br><span class="line">finish[i - <span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line">i = <span class="built_in">func</span>(finish, Need, work);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; finish.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (!finish[i]) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//银行家算法</span></span><br><span class="line"><span class="comment">//flag表示当前的请求是由哪个进程发出的!</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">banker</span><span class="params">(vector&lt;PCB*&gt; pcbs, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; request,vector&lt;<span class="keyword">int</span>&gt; Available<span class="comment">/*,int flag*/</span>)</span> </span>&#123;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">Max</span>(pcbs.<span class="built_in">size</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">Max[i] = pcbs[i]-&gt;Max;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">Allocation</span>(pcbs.<span class="built_in">size</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">Allocation[i] = pcbs[i]-&gt;Allocation;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;  <span class="built_in">Need</span>(pcbs.<span class="built_in">size</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">Need[i] = pcbs[i]-&gt;Need;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> h = <span class="number">0</span>; h &lt; request.<span class="built_in">size</span>(); h++) &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;--------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> flag = request[h][<span class="number">3</span>];<span class="comment">//获取到是哪个进程在发出请求</span></span><br><span class="line">cout &lt;&lt; pcbs[flag]-&gt;Pname &lt;&lt; <span class="string">&quot;请求获取资源&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; request[flag][i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (request[h][<span class="number">0</span>] &lt;= Need[<span class="number">0</span>][<span class="number">0</span>] &amp;&amp; request[h][<span class="number">1</span>] &lt;= Need[<span class="number">0</span>][<span class="number">1</span>] &amp;&amp; request[h][<span class="number">2</span>] &lt;= Need[<span class="number">0</span>][<span class="number">2</span>]) &#123;</span><br><span class="line"><span class="keyword">if</span> (request[h][<span class="number">0</span>] &lt;= Available[<span class="number">0</span>] &amp;&amp; request[h][<span class="number">1</span>] &lt;= Available[<span class="number">1</span>] &amp;&amp; request[h][<span class="number">2</span>] &lt;= Available[<span class="number">2</span>]) &#123;</span><br><span class="line"><span class="comment">//预分配</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> f = <span class="number">0</span>; f &lt; <span class="number">3</span>; f++) &#123;</span><br><span class="line">Available[f] -= request[h][f];</span><br><span class="line">Allocation[flag][f] += request[h][f];</span><br><span class="line">Need[flag][f] -= request[h][f];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;预分配资源给进程&quot;</span> &lt;&lt; endl;</span><br><span class="line">pcbs[flag]-&gt;<span class="built_in">show</span>();</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">SafetyCheck</span>(pcbs,Need, Allocation, Available)) &#123;</span><br><span class="line"><span class="comment">//通过了安全性算法,可以进行分配</span></span><br><span class="line"><span class="keyword">if</span> (Need[flag][<span class="number">1</span>] == <span class="number">0</span> &amp;&amp; Need[flag][<span class="number">0</span>] == <span class="number">0</span> &amp;&amp; Need[flag][<span class="number">2</span>] == <span class="number">0</span>) &#123;</span><br><span class="line">cout &lt;&lt; pcbs[flag]-&gt;Pname &lt;&lt; <span class="string">&quot; 进程已完成&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">pcbs[flag]-&gt;Allocation[i] = <span class="number">0</span>;</span><br><span class="line">pcbs[flag]-&gt;Max[i] = <span class="number">0</span>;</span><br><span class="line">pcbs[flag]-&gt;Need[i] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">pcbs[flag]-&gt;state = State::finish;</span><br><span class="line">pcbs[flag]-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;通过了安全性算法,可以进行分配&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; pcbs[flag]-&gt;Pname &lt;&lt; <span class="string">&quot;进程继续运行&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">pcbs[flag]-&gt;Allocation[i] = Allocation[flag][i];</span><br><span class="line">pcbs[flag]-&gt;Max[i] = Max[flag][i];</span><br><span class="line">pcbs[flag]-&gt;Need[i] = Need[flag][i];</span><br><span class="line">&#125;</span><br><span class="line">pcbs[flag]-&gt;state = State::ready;</span><br><span class="line">pcbs[flag]-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; pcbs[flag]-&gt;Pname &lt;&lt; <span class="string">&quot;未通过安全性检验,取消预分配&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> f = <span class="number">0</span>; f &lt; <span class="number">3</span>; f++) &#123;</span><br><span class="line">Available[f] += request[h][f];</span><br><span class="line">Allocation[flag][f] -= request[h][f];</span><br><span class="line">Need[flag][f] += request[h][f];</span><br><span class="line">&#125;</span><br><span class="line">pcbs[flag]-&gt;state = State::wait;</span><br><span class="line">cout &lt;&lt; pcbs[flag]-&gt;Pname &lt;&lt; <span class="string">&quot;取消预分配成功,进程等待&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">pcbs[<span class="number">0</span>]-&gt;state = State::wait;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;没有足够可用于分配的资源&quot;</span> &lt;&lt; pcbs[flag]-&gt;Pname &lt;&lt; <span class="string">&quot;进程等待&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">cout &lt;&lt; pcbs[flag]-&gt;Pname &lt;&lt; <span class="string">&quot;进程请求的资源超过了总需求量&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Safe</span><span class="params">(vector&lt;PCB*&gt; pcbs, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; Need, vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; Allocation, vector&lt;<span class="keyword">int</span>&gt; Available)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> M = pcbs.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">int</span> N = <span class="number">3</span>;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">bool</span>&gt; <span class="title">Finish</span><span class="params">(pcbs.size())</span></span>;</span><br><span class="line">vector&lt;<span class="keyword">int</span>&gt; work = Available;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="comment">//if</span></span><br><span class="line"><span class="keyword">if</span> (pcbs[i]-&gt;state == State::finish) &#123;</span><br><span class="line">Finish[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> Finish[i] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> i, j, m, k = <span class="number">0</span>, count;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">Finish[i] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">&#123;</span><br><span class="line">count = <span class="number">0</span>; <span class="comment">//记录符合条件的资源数量</span></span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Finish[i] == <span class="literal">false</span> &amp;&amp; Need[i][j] &lt;= work[j])</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (count == N)<span class="comment">//当进程各类资源都满足Need&lt;=Work时</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">0</span>; m &lt; N; m++)</span><br><span class="line">&#123;</span><br><span class="line">work[m] = work[m] + Allocation[i][m]; <span class="comment">//将该进程的各类资源全部收回</span></span><br><span class="line">&#125;</span><br><span class="line">Finish[i] = <span class="literal">true</span>;</span><br><span class="line">k++;</span><br><span class="line">i = <span class="number">-1</span>;  <span class="comment">//将i置为-1 进行i++ 变为0  从头开始循环</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line"><span class="keyword">if</span> (Finish[i] == <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">random</span><span class="params">(vector&lt;PCB*&gt; pcbs,vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; Request, vector&lt;<span class="keyword">int</span>&gt; Available)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> mi, i;</span><br><span class="line"><span class="keyword">int</span> N = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">int</span> M = pcbs.<span class="built_in">size</span>();</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt;  <span class="built_in">Need</span>(pcbs.<span class="built_in">size</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">Need[i] = pcbs[i]-&gt;Need;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">Allocation</span>(pcbs.<span class="built_in">size</span>());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pcbs.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">Allocation[i] = pcbs[i]-&gt;Allocation;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> m=<span class="number">0</span>;m&lt;Request.<span class="built_in">size</span>();m++)<span class="comment">//处理传进来的请求</span></span><br><span class="line">&#123;</span><br><span class="line">mi = Request[m][<span class="number">3</span>];</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------------------------------&quot;</span>;</span><br><span class="line">cout &lt;&lt; pcbs[mi]-&gt;Pname &lt;&lt; <span class="string">&quot;请求获取资源&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cout &lt;&lt; Request[mi][i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//初始判断,申请资源的合理性</span></span><br><span class="line"><span class="keyword">if</span> (Request[mi][i] &gt; Need[mi][i])</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt;pcbs[mi]-&gt;Pname &lt;&lt; <span class="string">&quot;所请求资源数超过进程的需求量！\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Request[mi][i] &gt; Available[i])</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; pcbs[mi] -&gt;Pname&lt;&lt; <span class="string">&quot;所请求资源数超过系统所有的资源数！\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line">Available[i] -= Request[mi][i];</span><br><span class="line">Allocation[mi][i] += Request[mi][i];</span><br><span class="line">Need[mi][i] -= Request[mi][i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">Safe</span>(pcbs,Need,Allocation,Available) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; pcbs[mi]-&gt;Pname &lt;&lt; <span class="string">&quot;发生死锁\n&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入进程总数&quot;</span> &lt;&lt; endl;</span><br><span class="line">cin &gt;&gt; sum;</span><br><span class="line"><span class="function">vector&lt;PCB*&gt; <span class="title">pcbs</span><span class="params">(sum)</span></span>;<span class="comment">//存储进程块指针的数组</span></span><br><span class="line">string pname;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">num</span><span class="params">(<span class="number">6</span>)</span></span>;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请依次输入进程名,资源总需求,已分配的的资源量&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sum; i++) &#123;</span><br><span class="line">cin &gt;&gt; pname;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">6</span>;j++) &#123;</span><br><span class="line">cin &gt;&gt; num[j];</span><br><span class="line">&#125;</span><br><span class="line">pcbs[i] = <span class="keyword">new</span> <span class="built_in">PCB</span>(pname, num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sum; i++) &#123;</span><br><span class="line">pcbs[i]-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;初始化资源请求&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;共有几个资源请求:&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">int</span> resSum;</span><br><span class="line">cin &gt;&gt; resSum;</span><br><span class="line">vector&lt;vector&lt;<span class="keyword">int</span>&gt;&gt; <span class="built_in">request</span>(resSum);<span class="comment">//存储请求资源向量的数组</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请依次输入发出请求的进程,请求资源的向量&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; resSum; i++) &#123;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">res</span><span class="params">(<span class="number">4</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++) &#123;</span><br><span class="line">cin &gt;&gt; res[j];</span><br><span class="line">&#125;</span><br><span class="line">request[i] = res;</span><br><span class="line">&#125;<span class="comment">//最后1位标志发出请求的进程</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;初始化可利用资源向量&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="function">vector&lt;<span class="keyword">int</span>&gt; <span class="title">available</span><span class="params">(<span class="number">3</span>)</span></span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">cin &gt;&gt; available[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------银行家算法------------------------&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">banker</span>(pcbs, request, available);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------银行家算法------------------------&quot;</span>&lt;&lt;endl; </span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------随机分配算法----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">random</span>(pcbs,request,available);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;---------------------随机分配算法----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> os </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript学习笔记</title>
      <link href="/2022/01/05/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/05/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h1><blockquote><ol><li><strong>HTML</strong> 定义了网页的内容</li><li><strong>CSS</strong> 描述了网页的布局</li><li><strong>JavaScript</strong> 控制了网页的行为</li></ol></blockquote><h2 id="JavaScript-是脚本语言"><a href="#JavaScript-是脚本语言" class="headerlink" title="JavaScript 是脚本语言"></a>JavaScript 是脚本语言</h2><p>JavaScript 是一种轻量级的编程语言。</p><p>JavaScript 是可插入 HTML 页面的编程代码。</p><p>JavaScript 插入 HTML 页面后，可由所有的现代浏览器执行。</p><h2 id="JavaScript输出"><a href="#JavaScript输出" class="headerlink" title="JavaScript输出"></a>JavaScript输出</h2><blockquote><ul><li>使用 <strong>window.alert()</strong> 弹出警告框。</li><li>使用 <strong>document.write()</strong> 方法将内容写到 HTML 文档中。</li><li>使用 <strong>innerHTML</strong> 写入到 HTML 元素。</li><li>使用 <strong>console.log()</strong> 写入到浏览器的控制台。</li></ul></blockquote><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p>**值类型(基本类型)*<em>：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、</em>Symbol(表示独一无二的值)*。</p><p><strong>引用数据类型</strong>：对象(Object)、数组(Array)、函数(Function)。</p><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>访问的方法:</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">name=person.lastname;</span><br><span class="line">name=person[<span class="string">&quot;lastname&quot;</span>];</span><br></pre></td></tr></table></figure></blockquote><h3 id="Undefined-和-Null"><a href="#Undefined-和-Null" class="headerlink" title="Undefined 和 Null"></a>Undefined 和 Null</h3><p>Undefined 这个值表示变量不含有值。</p><p>可以通过将变量的值设置为 null 来清空变量。</p><blockquote><p> JavaScript 变量均为对象。当您声明一个变量时，就创建了一个新的对象。</p></blockquote><h2 id="HTML-中的全局变量"><a href="#HTML-中的全局变量" class="headerlink" title="HTML 中的全局变量"></a>HTML 中的全局变量</h2><blockquote><p><strong>在 HTML 中, 全局变量是 window 对象: 所有数据变量都属于 window 对象。</strong></p></blockquote><h2 id="常见的HTML事件"><a href="#常见的HTML事件" class="headerlink" title="常见的HTML事件"></a>常见的HTML事件</h2><p>下面是一些常见的HTML事件的列表:</p><table><thead><tr><th align="left">事件</th><th>描述</th></tr></thead><tbody><tr><td align="left">onchange</td><td>HTML 元素改变</td></tr><tr><td align="left">onclick</td><td>用户点击 HTML 元素</td></tr><tr><td align="left">onmouseover</td><td>鼠标指针移动到指定的元素上时发生</td></tr><tr><td align="left">onmouseout</td><td>用户从一个 HTML 元素上移开鼠标时发生</td></tr><tr><td align="left">onkeydown</td><td>用户按下键盘按键</td></tr><tr><td align="left">onload</td><td>浏览器已完成页面的加载</td></tr></tbody></table><blockquote><p>=== 为绝对相等，即数据类型与值都必须相等。</p></blockquote><p>在JavaScript中，数组是一种特殊的对象类型。 因此 typeof [1,2,3,4] 返回 object。 </p><h2 id="undefined"><a href="#undefined" class="headerlink" title="undefined"></a>undefined</h2><p>在 JavaScript 中, <strong>undefined</strong> 是一个没有设置值的变量。</p><p><strong>typeof</strong> 一个没有值的变量会返回 <strong>undefined</strong>。</p><h2 id="JavaScript-初始化不会提升"><a href="#JavaScript-初始化不会提升" class="headerlink" title="JavaScript 初始化不会提升"></a>JavaScript 初始化不会提升</h2><p>JavaScript 只有声明的变量会提升，初始化的不会。</p><blockquote><p> “use strict” 指令只允许出现在脚本或函数的开头。</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php学习</title>
      <link href="/2021/12/06/php%E5%AD%A6%E4%B9%A0/"/>
      <url>/2021/12/06/php%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="1-php中的数据"><a href="#1-php中的数据" class="headerlink" title="1.php中的数据"></a>1.php中的数据</h1><p>变量：$a;</p><p>常量：</p><p>var_dump（）判断括号中的表达式是否为1</p><p>比较运算符:&gt;= &lt;= == !=</p><p>逻辑运算符：针对不同的结果进行匹配，</p><p>&amp;&amp; 逻辑与    $a=’week’, $b=’good’ ;  $a==’week’ &amp;&amp; $b==’good’</p><p>||逻辑或</p><p>！逻辑非</p><p>连接运算符：</p><p>​    将多个字符串拼接的字符：（.）(.=将左边的内容与右边的内容连接起来，然后赋值给左边的变量)</p><p>错误抑制符：</p><blockquote><p><em>在php中，有些错误可以提前预知</em>，</p><p>在可能出现错误的表达式之前使用@符号即可</p><p>@（$a/$b）</p></blockquote><p>三目运算：</p><p>自操作运算符：</p><blockquote><p>++</p><p>–</p><p>前置和后置</p><p>后置先赋值后操作</p><p>前置先操作后赋值</p></blockquote><p>非：~补码</p><p>&amp;：与操作</p><p>|:或</p><p>异或：^</p><p>左移：&gt;&gt;</p><p>右移：&lt;&lt;</p><p>while循环：</p><p>do{}while()</p><p> $a++;</p><p>如果是基于固定已知条件，而且有规律的话。使用for循环</p><p>while循环</p><p>php是可以嵌入到html中的脚本语言。</p><p>php函数：</p><p>function f_name($a,$b,$c~~~){</p><p>​    fun_body；</p><p>}</p><p>取消引用:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">strlen()获取字符串的长度</span><br><span class="line"></span><br><span class="line"><span class="variable">$string</span>[index] 访问字符串的某个位置的字符</span><br><span class="line"></span><br><span class="line"><span class="variable">$string</span> substr( [<span class="keyword">string</span> <span class="variable">$string</span>,<span class="keyword">int</span> <span class="variable">$start</span>[,<span class="keyword">int</span> <span class="variable">$length</span>]] )访问字符串中的多个字符</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> strstr( <span class="keyword">string</span> <span class="variable">$haystack</span>,<span class="keyword">mixed</span> <span class="variable">$needle</span>[,<span class="keyword">bool</span> <span class="variable">$before_needle</span>=<span class="literal">false</span>])判断一个字符是否是另一个字符串的子串</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> strpos(<span class="keyword">string</span> <span class="variable">$haystack</span>,<span class="keyword">mixed</span> <span class="variable">$needle</span>[,<span class="keyword">int</span> <span class="variable">$offset</span>=<span class="number">0</span>]) 查找字符串首次出现的位置</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>（（<span class="variable">$pos</span>=strpos(<span class="variable">$mystr</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$pos</span>)) !==<span class="literal">false</span> ）&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;The lette&quot;</span>;</span><br><span class="line"></span><br><span class="line">&amp;pos++;</span><br><span class="line"><span class="comment">//获取到字符串在源字符串中的所有位置的索引</span></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> strtpos() strpos的姐妹函数，作用与strpos基本相同，唯一的差别在于strrpos找的是最后一次匹配的位置。</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> substr_count(<span class="keyword">string</span> <span class="variable">$haystack</span>, <span class="keyword">string</span> <span class="variable">$needle</span>[,<span class="keyword">int</span> <span class="variable">$offset</span>=<span class="number">0</span>[,<span class="keyword">int</span> <span class="variable">$length</span>]]) 函数统计字符串出现的次数</span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> strpbak(<span class="keyword">string</span> <span class="variable">$haystack</span>,<span class="keyword">string</span> <span class="variable">$char_list</span>) 判断字符串中是否包含一个字符集中的任意一个字符时。</span><br><span class="line"></span><br><span class="line"><span class="keyword">mixed</span> str_replace(<span class="keyword">mixed</span> <span class="variable">$search</span>,<span class="keyword">mixed</span> <span class="variable">$replace</span>,<span class="keyword">mixed</span> <span class="variable">$subject</span>[,<span class="keyword">int</span> <span class="variable">$count</span>])</span><br><span class="line"><span class="keyword">mixed</span> substr_replace(<span class="keyword">mixed</span> <span class="variable">$search</span>,<span class="keyword">mixed</span> <span class="variable">$replacement</span>,<span class="keyword">mixed</span> <span class="variable">$start</span>[,<span class="keyword">mixed</span> <span class="variable">$length</span>])</span><br><span class="line"><span class="keyword">string</span> strtr(<span class="keyword">string</span> <span class="variable">$str</span>,<span class="keyword">string</span> <span class="variable">$from</span>,<span class="keyword">string</span> <span class="variable">$to</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据精度：</p><p>%.2f 表示小数的位数为两位</p><p>printf函数的作用：</p><p>1）类型说明</p><p>2）符号说明</p><p>3）宽度说明</p><p>4）说明数值精度</p><p>5）交换转换符的顺序</p><p>6）存储格式化效果 sprintf（）函数可以将结果字符串作为函数值返回</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#删除字符串中的空白符</span></span><br><span class="line">trim() 删除字符串首尾的空白符</span><br><span class="line">ltrim() 只删除字符串首部的空白符</span><br><span class="line">rtrim() 只删除字符串尾部的空白符</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="数组的创建"><a href="#数组的创建" class="headerlink" title="数组的创建"></a>数组的创建</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#### </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span> <span class="keyword">array</span>([<span class="keyword">mixed</span> $])</span><br><span class="line"></span><br><span class="line"><span class="variable">$mybook</span>=<span class="keyword">array</span>(<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#在创建好的数组之后添加数据</span></span><br><span class="line"><span class="variable">$mybook</span>[]=<span class="keyword">new</span> ele;</span><br><span class="line"><span class="comment">#利用array()构造函数首先初始化数组</span></span><br><span class="line"><span class="comment">#通过print_r函数输出数组的元素</span></span><br><span class="line">print_r(输出所有的数组元素)</span><br><span class="line"><span class="comment">#切割数组：</span></span><br><span class="line">  <span class="keyword">array</span> array_slice(<span class="keyword">array</span> <span class="variable">$array</span>,<span class="keyword">int</span> <span class="variable">$offset</span>[,<span class="keyword">int</span> <span class="variable">$length</span>=<span class="literal">null</span>[,<span class="keyword">bool</span> <span class="variable">$preserve_keys</span>=<span class="literal">false</span>]])</span><br><span class="line"><span class="comment">#统计数组中的个数：</span></span><br><span class="line">    <span class="keyword">int</span> count(<span class="variable">$array</span>)</span><br><span class="line"><span class="comment">#访问数组中的元素：</span></span><br><span class="line">    <span class="number">1</span>.通过数组指针访问数组中的元素：</span><br><span class="line">    <span class="number">2</span>.通过each()函数逐个访问数组的元素</span><br><span class="line">    <span class="number">3</span>.用<span class="keyword">foreach</span>遍历数组：</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$array</span> <span class="keyword">as</span> <span class="variable">$value</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$value</span>.<span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="number">4</span>.用<span class="keyword">foreach</span>遍历数组的键和值：</span><br><span class="line">    <span class="number">5</span>.用<span class="keyword">foreach</span>遍历修改数组元素的值：</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$array</span> <span class="keyword">as</span> &amp;<span class="variable">$val</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$val</span>==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">                <span class="variable">$val</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable">$val</span>);</span><br><span class="line">            <span class="keyword">echo</span><span class="string">&quot;&lt;br/&gt;&quot;</span>;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h3 id="数组的操作"><a href="#数组的操作" class="headerlink" title="数组的操作"></a>数组的操作</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sort（）和rsort（） 用于索引数组的排序</span><br><span class="line">asort（）和arsort（） 用于关联数组的排序</span><br><span class="line">ksort（）和krsort（）根据关联数组的键而非值对数组进行排序</span><br><span class="line">array_multisort():可以同时会多个数组或者多维数组进行排序</span><br></pre></td></tr></table></figure><h3 id="add和delete数组元素"><a href="#add和delete数组元素" class="headerlink" title="add和delete数组元素"></a>add和delete数组元素</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array_unshift();将一个或多个新元素添加到数组的开始位置</span><br><span class="line">array_shift();删除数组的最后一个元素</span><br><span class="line">array_push();在数组的末尾添加一个或多个新的元素<span class="keyword">int</span> array_push(<span class="keyword">array</span> <span class="variable">$array</span>,<span class="keyword">mixed</span> <span class="variable">$value1</span>[,<span class="keyword">mixed</span> $...])</span><br><span class="line">array_pop();删除数组的最后一个元素</span><br><span class="line">array_splice();删除数组中从某个位置开始的元素，或把新元素插入到数组得某个位置</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="合并数组"><a href="#合并数组" class="headerlink" title="合并数组"></a>合并数组</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span> array_merge(<span class="keyword">array</span> <span class="variable">$array1</span>[,<span class="keyword">array</span> $...])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组和字符串之间的转换"><a href="#数组和字符串之间的转换" class="headerlink" title="数组和字符串之间的转换"></a>数组和字符串之间的转换</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span> explode(<span class="keyword">string</span> separator,<span class="keyword">string</span> <span class="keyword">string</span>[,<span class="keyword">int</span> limit])</span><br><span class="line"><span class="keyword">string</span> implode(<span class="keyword">string</span> glue,<span class="keyword">array</span> pieces)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="数组转换为变量列表"><a href="#数组转换为变量列表" class="headerlink" title="数组转换为变量列表"></a>数组转换为变量列表</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span> <span class="keyword">list</span>(<span class="keyword">mixed</span> <span class="variable">$var1</span>[,<span class="keyword">mixed</span> <span class="variable">$var2</span>...])</span><br></pre></td></tr></table></figure><h1 id="2-正则表达式"><a href="#2-正则表达式" class="headerlink" title="2.正则表达式"></a>2.正则表达式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">行定位符：</span><br><span class="line">^tm tm$ tm</span><br><span class="line">单词定界符：</span><br><span class="line">\btm\b \Btm\B</span><br><span class="line">字符类：</span><br><span class="line">[]</span><br><span class="line">正则表达式是区分大小写的</span><br><span class="line">选择字符（|）</span><br><span class="line">连字符（-）</span><br><span class="line">排除字符（^）</span><br><span class="line">限定字符（？*+&#123;n,m&#125;）</span><br><span class="line">点字符（.）</span><br><span class="line">转义字符（\）</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>\反斜杠</th><th align="left">转义，指定预定义的字符集，定义断言，显示不可打印的字符</th></tr></thead><tbody><tr><td>（）圆括号</td><td align="left">改变限定符的作用范围，进行分组</td></tr><tr><td></td><td align="left"></td></tr><tr><td></td><td align="left"></td></tr></tbody></table><p>反向引用：</p><p>php中的模式匹配函数：</p><p>int preg_match(string $pattern,string $subject[,array &amp;$matces[,int $flag=0[,int $offset=0]]])</p><p>用preg_match_all( )函数实现多次匹配：</p><p>int preg_match_all(string $pattern,string $subject[,array &amp;$matches[,int $flag=PREG_PATTERN_ORDER[,int $offset=0]]])</p><p>matches数组用来表示匹配的结果。</p><h1 id="3-PHP和Web页面的交互"><a href="#3-PHP和Web页面的交互" class="headerlink" title="3.PHP和Web页面的交互"></a>3.PHP和Web页面的交互</h1><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><p>功能：让浏览者和网站有一个互动的平台。用来将数据发送到服务器。</p><h2 id="获取表单数据"><a href="#获取表单数据" class="headerlink" title="获取表单数据"></a>获取表单数据</h2><h3 id="post"><a href="#post" class="headerlink" title="post"></a>post</h3><p>ｐｏｓｔ方式的提交不依赖于ｕｒｌ，表单中的参数值不会显示再地址栏中，安全性高，能够提交大容量数据</p><h3 id="get"><a href="#get" class="headerlink" title="get"></a>get</h3><p>ｇｅｔ方式是表单数据默认的提交方式，即ｆｏｒｍ元素的ｍｅｔｈｏｄ属性的默认值．</p><h3 id="php参数传递的常用方法"><a href="#php参数传递的常用方法" class="headerlink" title="php参数传递的常用方法"></a>php参数传递的常用方法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]</span><br></pre></td></tr></table></figure><p>需要区分大小写</p><h3 id="在网页中嵌入php脚本"><a href="#在网页中嵌入php脚本" class="headerlink" title="在网页中嵌入php脚本"></a>在网页中嵌入php脚本</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在html标签中添加php脚本：</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对value进行赋值：</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="variable">$user_name</span>=<span class="string">&quot;landy&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;user-name&quot;</span> value=<span class="string">&quot;&lt;?php echo <span class="subst">$user_name</span>;?&gt;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h3 id="在php中获取表单数据"><a href="#在php中获取表单数据" class="headerlink" title="在php中获取表单数据"></a>在php中获取表单数据</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form name=&quot;from1&quot; method=&quot;post&quot; action=&quot;index.php&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">        &lt;table width=&quot;405&quot; border=&quot;0&quot; cellpadding=&quot;1&quot; cellspacing=&quot;1&quot; bordercolor=&quot;#FFFFFF&quot; bgcolor=&quot;#999999&quot;&gt;</span><br><span class="line">            &lt;tr bgcolor=&quot;#FFCC33&quot;&gt;</span><br><span class="line">                &lt;td width=&quot;103&quot; height=&quot;25&quot; align=&quot;right&quot;&gt;用户名：&lt;/td&gt;</span><br><span class="line">                &lt;td width=&quot;144&quot; height=&quot;25&quot;&gt;</span><br><span class="line">                    &lt;input name=&quot;user_name&quot; type=&quot;text&quot; id=&quot;user&quot;size=&quot;20&quot; </span><br><span class="line">                    maxlength=&quot;100&quot;/&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr bgcolor=&quot;#FFCC33&quot;&gt;</span><br><span class="line">                &lt;td width=&quot;103&quot; height=&quot;25&quot; align=&quot;right&quot;&gt;密码&lt;/td&gt;</span><br><span class="line">                &lt;td width=&quot;144&quot; height=&quot;25&quot;&gt;&lt;input name=&quot;password&quot; type=&quot;password&quot; id=&quot;user&quot;size=&quot;20&quot; </span><br><span class="line">                maxlength=&quot;100&quot;/&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr bgcolor=&quot;#FFCC33&quot;&gt;</span><br><span class="line">                &lt;td width=&quot;103&quot; height=&quot;25&quot; align=&quot;right&quot;&gt;确认密码&lt;/td&gt;</span><br><span class="line">                &lt;td width=&quot;144&quot; height=&quot;25&quot;&gt;&lt;input name=&quot;cfm_password&quot; type=&quot;password&quot; id=&quot;user&quot;size=&quot;20&quot; </span><br><span class="line">                maxlength=&quot;100&quot;/&gt;&lt;/td&gt;</span><br><span class="line"></span><br><span class="line">            &lt;/tr&gt;               </span><br><span class="line">            &lt;tr bgcolor=&quot;#FFCC33&quot;&gt;</span><br><span class="line">                &lt;td width=&quot;103&quot; height=&quot;25&quot; align=&quot;right&quot;&gt;性别&lt;/td&gt;</span><br><span class="line">                &lt;td width=&quot;144&quot; height=&quot;25&quot;&gt;</span><br><span class="line">                    &lt;input name=&quot;sex&quot; type=&quot;radio&quot; value=&quot;男&quot; checked&gt;男&lt;/input&gt;</span><br><span class="line">                    &lt;input name=&quot;sex&quot; type=&quot;radio&quot; value=&quot;女&quot;&gt;女&lt;/input&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr bgcolor=&quot;#a61b29&quot;&gt;</span><br><span class="line">                &lt;td width=&quot;103&quot; height=&quot;25&quot; align=&quot;right&quot;&gt;爱好&lt;/td&gt;</span><br><span class="line">                &lt;td width=&quot;144&quot; height=&quot;25&quot;&gt;</span><br><span class="line">                    &lt;input name=&quot;fond[]&quot; type=&quot;checkbox&quot; id=&quot;fond[]&quot; value=&quot;music&quot;&gt;music&lt;/input&gt;</span><br><span class="line">                    &lt;input name=&quot;fond[]&quot; type=&quot;checkbox&quot; id=&quot;fond[]&quot; value=&quot;ball&quot;&gt;ball&lt;/input&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr bgcolor=&quot;#FFCC33&quot;&gt;</span><br><span class="line">                    &lt;td colspan=&quot;2&quot; height=&quot;25&quot; align=&quot;center&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;submit&quot;/&gt;</span><br><span class="line">                        &lt;input type=&quot;reset&quot; name=&quot;reset&quot; value=&quot;reset&quot;/&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr bgcolor=&quot;#a61b29&quot;&gt;</span><br><span class="line">                &lt;td width=&quot;103&quot; height=&quot;25&quot; align=&quot;right&quot;&gt;学历&lt;/td&gt;</span><br><span class="line">                &lt;td width=&quot;144&quot; height=&quot;25&quot;&gt;</span><br><span class="line">                    &lt;select name=&quot;select&quot; size=&quot;1&quot;&gt;</span><br><span class="line">                        &lt;option value=&quot;专科&quot;&gt;专科&lt;/option&gt;</span><br><span class="line">                        &lt;option value=&quot;本科&quot;&gt;本科&lt;/option&gt;</span><br><span class="line">                        &lt;option value=&quot;硕士&quot;&gt;硕士&lt;/option&gt;</span><br><span class="line">                        &lt;option value=&quot;博士&quot;&gt;博士&lt;/option&gt;</span><br><span class="line">                        &lt;/select&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;tr bgcolor=&quot;#a61b29&quot;&gt;</span><br><span class="line">                &lt;td width=&quot;103&quot; height=&quot;25&quot; align=&quot;right&quot;&gt;上传头像&lt;/td&gt;</span><br><span class="line">                &lt;td width=&quot;144&quot; height=&quot;25&quot;&gt;</span><br><span class="line">                    &lt;input name=&#x27;img&#x27; type=&#x27;file&#x27; id=&quot;img&quot; size=&quot;20&quot; maxlength=&quot;100&quot;/&gt;</span><br><span class="line">                &lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">// 获取基本元素的值</span><br><span class="line">echo &quot;请确认表单的信息：&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;&quot;.trim($_POST[&#x27;user_name&#x27;]).&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;&quot;.trim($_POST[&#x27;password&#x27;]).&quot;&lt;br&gt;&quot;; </span><br><span class="line">echo &quot;&quot;.trim($_POST[&#x27;cfm_password&#x27;]).&quot;&lt;br&gt;&quot;;</span><br><span class="line">// 获取单选按钮的值</span><br><span class="line">echo &quot;性别&quot;.trim($_POST[&#x27;sex&#x27;]).&quot;&lt;br&gt;&quot;; </span><br><span class="line">// 获取复选框的值</span><br><span class="line">if($_POST[&#x27;fond&#x27;]!=null)&#123;</span><br><span class="line">    echo &quot;宁的爱好是：&quot;;</span><br><span class="line">    for($i=0;$i&lt;count($_POST[&#x27;fond&#x27;]);$i++)&#123;</span><br><span class="line">        echo $_POST[&#x27;fond&#x27;][$i].&quot;&amp;nbsp;&amp;nbsp;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">// 获取菜单列表框的值</span><br><span class="line">if($_POST[&#x27;select&#x27;]!=&#x27;&#x27;)&#123;</span><br><span class="line">    echo &quot;你的学历&quot;.$_POST[&#x27;select&#x27;];</span><br><span class="line">&#125;</span><br><span class="line">// 获取文件域的值</span><br><span class="line">echo &quot;上传文件的信息&quot;;</span><br><span class="line">echo &#x27;文件名&#x27;.$_FILES[&#x27;img&#x27;][&#x27;name&#x27;].&#x27;&lt;br&gt;&#x27;;</span><br><span class="line">echo &#x27;文件类型&#x27;.$_FILES[&#x27;img&#x27;][&#x27;type&#x27;].&#x27;&lt;br&gt;&#x27;;</span><br><span class="line">echo &#x27;文件大小&#x27;.($_FILES[&#x27;img&#x27;][&#x27;size&#x27;]/1024).&#x27;KB&lt;br&gt;&#x27;;</span><br><span class="line">echo &#x27;临时文件名&#x27;.$_FILES[&#x27;img&#x27;][&#x27;tmp_name&#x27;].&#x27;&lt;br&gt;&#x27;;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="对URL传递的参数进行编码和解码"><a href="#对URL传递的参数进行编码和解码" class="headerlink" title="对URL传递的参数进行编码和解码"></a>对URL传递的参数进行编码和解码</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> urlencode(<span class="keyword">string</span> str)</span><br><span class="line"><span class="keyword">string</span> urldecode(<span class="keyword">string</span> str)</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h2 id="web服务器端的其他数据采集方法"><a href="#web服务器端的其他数据采集方法" class="headerlink" title="web服务器端的其他数据采集方法"></a>web服务器端的其他数据采集方法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_REQUEST</span>[<span class="string">&#x27;NAME&#x27;</span>]</span><br><span class="line">    <span class="comment">//是post和get,cookie的综合</span></span><br><span class="line"><span class="comment">//预定义变量</span></span><br><span class="line">    <span class="variable">$_SERVE</span>是一个包含诸如头信息,路径以及脚本位置等信息的数组</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="4-日期和时间的操作"><a href="#4-日期和时间的操作" class="headerlink" title="4.日期和时间的操作"></a>4.日期和时间的操作</h1><h3 id="获取当前日期和时间"><a href="#获取当前日期和时间" class="headerlink" title="获取当前日期和时间"></a>获取当前日期和时间</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示的是unix时间戳</span></span><br><span class="line"><span class="keyword">echo</span> time();</span><br><span class="line"><span class="comment">//设置默认时区为北京时间</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;PRC&#x27;</span>)</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="创建时间戳"><a href="#创建时间戳" class="headerlink" title="创建时间戳"></a>创建时间戳</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//根据日期和时间生成时间戳</span></span><br><span class="line"><span class="keyword">echo</span> mktime(<span class="number">18</span>,<span class="number">30</span>,<span class="number">00</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">2021</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="comment">//从GMT日期和时间值生成时间戳</span></span><br><span class="line"><span class="keyword">echo</span> gmmktime(<span class="number">18</span>,<span class="number">30</span>,<span class="number">00</span>,<span class="number">12</span>,<span class="number">12</span>,<span class="number">2021</span>);</span><br><span class="line"><span class="comment">//从日期和时间字符串生成时间戳</span></span><br><span class="line"><span class="keyword">echo</span> strtotime(<span class="keyword">string</span> <span class="variable">$time</span>[,<span class="keyword">int</span> <span class="variable">$now</span>=time()])</span><br></pre></td></tr></table></figure><h3 id="转换时间戳"><a href="#转换时间戳" class="headerlink" title="转换时间戳"></a>转换时间戳</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//转换时间戳</span></span><br><span class="line"><span class="keyword">array</span> getdate([<span class="keyword">int</span> <span class="variable">$timestamp</span>=time()])</span><br><span class="line"><span class="comment">//接受一个时间戳作为参数,返回一个关联数组</span></span><br><span class="line"><span class="comment">//如果只想从时间戳中读取时间或日期,可以使用idate()函数</span></span><br><span class="line"><span class="keyword">int</span> idate(<span class="keyword">string</span> <span class="variable">$format</span>[,<span class="keyword">int</span> <span class="variable">$timestamp</span>])</span><br><span class="line"><span class="comment">//需要两个参数,一个格式串和一个可选的时间戳$timestamp</span></span><br></pre></td></tr></table></figure><h3 id="格式化日期字符串"><a href="#格式化日期字符串" class="headerlink" title="格式化日期字符串"></a>格式化日期字符串</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> date(<span class="keyword">string</span> <span class="variable">$format</span>[,<span class="keyword">int</span> <span class="variable">$timestamp</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="检查日期值"><a href="#检查日期值" class="headerlink" title="检查日期值"></a>检查日期值</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> checkdate(<span class="keyword">int</span> <span class="variable">$month</span>,<span class="keyword">int</span> <span class="variable">$day</span>,<span class="keyword">int</span> <span class="variable">$year</span>)</span><br><span class="line"><span class="comment">//该函数需要接收1~12月,1~31日和年是哪个参数,如果这个日期是有效的话,返回true</span></span><br></pre></td></tr></table></figure><h3 id="毫秒的使用"><a href="#毫秒的使用" class="headerlink" title="毫秒的使用"></a>毫秒的使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mixed microtime([bool $get_as_float])</span><br><span class="line">//这个函数回合time()一样,返回当前时间的时间戳.但是还会返回一个毫秒值.这样会使时间更加精确</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="DateTime"><a href="#DateTime" class="headerlink" title="DateTime"></a>DateTime</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">????</span><br></pre></td></tr></table></figure><h1 id="5-http的使用"><a href="#5-http的使用" class="headerlink" title="5.http的使用"></a>5.http的使用</h1><h2 id="http请求"><a href="#http请求" class="headerlink" title="http请求"></a>http请求</h2><p>请求行:GET/about/index.php HTTP/1.1</p><p>http头列表:</p><p>空行:</p><p>可选消息体:其中可能包括通过post方法传递的数据</p><h2 id="http响应"><a href="#http响应" class="headerlink" title="http响应"></a>http响应</h2><p>状态行:(200 ok  )</p><p>http头列表:(各个响应头)</p><p>空行</p><p>一个可选的消息头:</p><h1 id="6-cookie"><a href="#6-cookie" class="headerlink" title="6.cookie"></a>6.cookie</h1><p>cookie是一种在客户端浏览器中存储数据并以此跟踪和识别用户的机制</p><p>cookie的功能:</p><p>1.记录访客的某些信息.</p><p>2.在页面之间传递变量</p><p>3.将查看的网页存储在cookie临时文件中.提高浏览的速度</p><h2 id="创建cookie"><a href="#创建cookie" class="headerlink" title="创建cookie"></a>创建cookie</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">bool</span> setcookie(<span class="keyword">string</span> name[,<span class="keyword">string</span> value[,<span class="keyword">int</span> expire[,<span class="keyword">string</span> path[,<span class="keyword">string</span> domain[,<span class="keyword">int</span> secure]]]]])</span><br><span class="line">    name:cookie的名称,可以通过<span class="variable">$_COOKIE</span>[<span class="string">&#x27;cookie_name&#x27;</span>]调用变量名为cookie_name的cookie</span><br><span class="line">    value:cookie变量的值,该值保存在客户端,不能用来保存敏感的数据<span class="variable">$_COOKIE</span>[<span class="string">&#x27;values&#x27;</span>]获取名为values的值</span><br><span class="line">    expire:cookie的时效,用time()或者mktime()获取</span><br><span class="line">    path:cookie在服务器端的有效路径</span><br><span class="line">    domain:cookie的有效域名</span><br><span class="line">    secure:指明cookie是否仅通过安全的https,值为<span class="number">1</span></span><br></pre></td></tr></table></figure><h2 id="读取cookie"><a href="#读取cookie" class="headerlink" title="读取cookie"></a>读取cookie</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在php中可以直接通过超级全局数组$_COOKIE[]来读取浏览器端的cookie的值</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;visit_time&#x27;</span>]))&#123;</span><br><span class="line">setcookie(<span class="string">&#x27;visit_time&#x27;</span>,date(<span class="string">&#x27;y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;欢迎首次访问网络&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    setcookie(<span class="string">&#x27;visit_time&#x27;</span>,date(<span class="string">&#x27;y-m-d H:i:s&#x27;</span>),time()+<span class="number">60</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;上次访问时间为:&quot;</span>.<span class="variable">$_COOKIE</span>[<span class="string">&#x27;visit_time&#x27;</span>];</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">        </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;您上次访问网站的时间为:&#x27;</span>.date(<span class="string">&quot;y-m-d H:i:s&quot;</span>);</span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="删除cookie"><a href="#删除cookie" class="headerlink" title="删除cookie"></a>删除cookie</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcookie(<span class="string">&quot;visit_time&quot;</span>,<span class="string">&quot;&quot;</span>,time()-<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h2 id="cookie的生命周期"><a href="#cookie的生命周期" class="headerlink" title="cookie的生命周期"></a>cookie的生命周期</h2><blockquote><p>如果不为cookie设置时间,则他的生命周期就是浏览器会话时间范围</p><p>只要关闭浏览器,cookie就会消失</p><p><strong>cookie</strong>不是一成不变的,每个cookie文件的大小有限,每个域名最多支持20个cookie</p></blockquote><h1 id="7-session"><a href="#7-session" class="headerlink" title="7.session"></a>7.session</h1><h2 id="创建session"><a href="#创建session" class="headerlink" title="创建session"></a>创建session</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//session是指有始有终的一系列的动作和消息 比如说登陆的整个过程</span></span><br><span class="line"><span class="comment">// 1.启动session</span></span><br><span class="line"><span class="comment">//bool session_start(void)  </span></span><br><span class="line"><span class="comment">//session_register()函数用来创建session</span></span><br><span class="line">    <span class="comment">//设置session的失效时间</span></span><br><span class="line"><span class="variable">$time</span>=<span class="number">1</span>*<span class="number">60</span>;</span><br><span class="line">session_set_cookie_params(<span class="variable">$time</span>);<span class="comment">//将session和cookie结合起来设置失效时间</span></span><br><span class="line"><span class="comment">//启动session</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//使用setcookie()函数可以对session设置失效时间</span></span><br><span class="line">setcookie(session_name(),session_id(),time()+<span class="number">60</span>,<span class="string">&quot;/&quot;</span>);</span><br><span class="line"><span class="comment">// 注册session变量,赋值为用户的名称</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user_name&#x27;</span>]=<span class="literal">null</span>;</span><br><span class="line"><span class="comment">// 赋值为用户id</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;uid&#x27;</span>]=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><img src="/.com//blog\source\_posts\image-20211213160703940.png" alt="image-20211213160703940" style="zoom:80%;"><h2 id="用户操作权限实例"><a href="#用户操作权限实例" class="headerlink" title="用户操作权限实例"></a>用户操作权限实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">&lt;script text=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params">form</span>)</span>&#123;</span><br><span class="line"> <span class="keyword">if</span>(form.user.value==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line"> alert(<span class="string">&quot;请输入用户名:&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>(form.pwd.value==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">alert(<span class="string">&quot;请输入密码:&quot;</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> form.submit();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//为了防止其他的用户非法登陆系统</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span><span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;请使用正确的途径登陆:&quot;);history.back();&lt;/script&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">    </span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form name=<span class="string">&quot;form 1&quot;</span> method=<span class="string">&quot;post&quot;</span> action=<span class="string">&quot;test.php&quot;</span>&gt;</span><br><span class="line">&lt;table width=<span class="string">&quot;529&quot;</span> height=<span class="string">&quot;390&quot;</span> border=<span class="string">&quot;0&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td valign=<span class="string">&quot;top&quot;</span>&gt;</span><br><span class="line">&lt;table width=<span class="string">&quot;520&quot;</span> border=<span class="string">&quot;0&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td width=<span class="string">&quot;24&quot;</span> align=<span class="string">&quot;right&quot;</span>&gt;用户名:&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">&quot;24&quot;</span> align=<span class="string">&quot;left&quot;</span>&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;user&quot;</span> type=<span class="string">&quot;text&quot;</span> id=<span class="string">&quot;user&quot;</span> size=<span class="string">&quot;20&quot;</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td width=<span class="string">&quot;24&quot;</span> align=<span class="string">&quot;right&quot;</span>&gt;密码:&lt;/td&gt;</span><br><span class="line">&lt;td width=<span class="string">&quot;24&quot;</span> align=<span class="string">&quot;left&quot;</span>&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;pwd&quot;</span> type=<span class="string">&quot;password&quot;</span> id=<span class="string">&quot;pwd&quot;</span> size=<span class="string">&quot;20&quot;</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr align=<span class="string">&quot;center&quot;</span>&gt;</span><br><span class="line">&lt;td height=<span class="string">&quot;24&quot;</span> colspan=<span class="string">&quot;2&quot;</span>&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;submit&quot;</span> type=<span class="string">&quot;submit&quot;</span> value=<span class="string">&quot;提交&quot;</span> onclick=<span class="string">&quot;return check(form);&quot;</span>&gt;</span><br><span class="line">&lt;input name=<span class="string">&quot;reset&quot;</span> type=<span class="string">&quot;reset&quot;</span> value=<span class="string">&quot;重置&quot;</span>&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;tr&gt;</span><br><span class="line">&lt;td height=<span class="string">&quot;76&quot;</span>&gt;</span><br><span class="line">&lt;span&gt;超级用户:admin&amp;nbps;密码:<span class="number">111</span>&lt;/span&gt;</span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;span&gt;普通用户:tom&amp;nbps;密码:<span class="number">000</span>&lt;/span&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/td&gt;</span><br><span class="line">&lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">            </span><br><span class="line"><span class="comment">//session变量</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]=<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;pwd&#x27;</span>]=<span class="variable">$_POST</span>[<span class="string">&#x27;pwd&#x27;</span>]</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;table align=<span class="string">&quot;center&quot;</span> cellpadding=<span class="string">&quot;0&quot;</span> cellspacing=<span class="string">&quot;0&quot;</span>&gt;</span><br><span class="line">&lt;tr align=<span class="string">&quot;center&quot;</span>&gt; valign=<span class="string">&quot;middle&quot;</span>&gt;</span><br><span class="line">&lt;td style=<span class="string">&quot;width:140px;color:red;&quot;</span>&gt;当前用户:</span><br><span class="line">&lt;!--输出当前用户级别--&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]==<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$_SESSION</span>[<span class="string">&#x27;pwd&#x27;</span>]==<span class="string">&#x27;111&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;管理员&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;普通用户&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"> &lt;/td&gt;</span><br><span class="line"> &lt;td width=<span class="string">&quot;70&quot;</span>&gt;&lt;a href=<span class="string">&quot;default.php&quot;</span>&gt;首页&lt;/a&gt;&lt;td&gt;</span><br><span class="line"> &lt;td width=<span class="string">&quot;70&quot;</span>&gt;&lt;a href=<span class="string">&quot;default.php&quot;</span>&gt;文章&lt;/a&gt;&lt;td&gt;</span><br><span class="line"> &lt;td width=<span class="string">&quot;70&quot;</span>&gt;&lt;a href=<span class="string">&quot;default.php&quot;</span>&gt;相册&lt;/a&gt;&lt;td&gt;</span><br><span class="line"> &lt;td width=<span class="string">&quot;70&quot;</span>&gt;&lt;a href=<span class="string">&quot;default.php&quot;</span>&gt;修改密码&lt;/a&gt;&lt;td&gt;</span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]==<span class="string">&#x27;admin&#x27;</span>&amp;&amp;<span class="variable">$_SESSION</span>[<span class="string">&#x27;pwd&#x27;</span>]==<span class="string">&#x27;111&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;td width=&quot;100&quot;&gt;|&lt;a href=&quot;default.php&quot;&gt;用户管理&lt;/a&gt;&lt;td&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"> &lt;td width=<span class="string">&quot;100&quot;</span>&gt;|&lt;a href=<span class="string">&quot;safe.php&quot;</span>&gt;注销用户&lt;/a&gt;&lt;td&gt;</span><br><span class="line"> &lt;/tr&gt;</span><br><span class="line"> &lt;/table&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="删除和销毁session"><a href="#删除和销毁session" class="headerlink" title="删除和销毁session"></a>删除和销毁session</h2><h3 id="删除单个会话"><a href="#删除单个会话" class="headerlink" title="删除单个会话"></a>删除单个会话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">unset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br></pre></td></tr></table></figure><h3 id="删除多个会话"><a href="#删除多个会话" class="headerlink" title="删除多个会话"></a>删除多个会话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_SESSION</span>=<span class="keyword">array</span>();</span><br></pre></td></tr></table></figure><h3 id="结束当前会话"><a href="#结束当前会话" class="headerlink" title="结束当前会话"></a>结束当前会话</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session_destroy();</span><br></pre></td></tr></table></figure><h1 id="8-图像操作"><a href="#8-图像操作" class="headerlink" title="8.图像操作"></a>8.图像操作</h1><h2 id="8-1图像的基本操作"><a href="#8-1图像的基本操作" class="headerlink" title="8.1图像的基本操作"></a>8.1图像的基本操作</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);<span class="comment">//最好放在最前面 可以设置charset的方式</span></span><br><span class="line"><span class="variable">$img</span>=imagecreatetruecolor(<span class="number">200</span>,<span class="number">200</span>);<span class="comment">//新建一个图像</span></span><br><span class="line"><span class="variable">$color1</span>=imagecolorallocate(<span class="variable">$img</span>,<span class="number">92</span>,<span class="number">34</span>,<span class="number">35</span>);<span class="comment">//分配颜色</span></span><br><span class="line"><span class="variable">$color2</span>=imagecolorallocate(<span class="variable">$img</span>,<span class="number">200</span>,<span class="number">200</span>,<span class="number">200</span>);</span><br><span class="line">imagefill(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$color1</span>);</span><br><span class="line">imagerectangle(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="variable">$color2</span>);</span><br><span class="line">imagejpeg(<span class="variable">$img</span>); <span class="comment">//创建图像 最好用相对路径</span></span><br><span class="line">imagedestroy(<span class="variable">$img</span>);<span class="comment">//销毁图像</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//绘制函数</span></span><br><span class="line">imageellipse( resource <span class="variable">$image</span>, <span class="keyword">int</span> <span class="variable">$cx</span>, <span class="keyword">int</span> <span class="variable">$cy</span>, <span class="keyword">int</span> <span class="variable">$width</span>, <span class="keyword">int</span> <span class="variable">$height</span>, <span class="keyword">int</span> <span class="variable">$color</span>) : <span class="keyword">bool</span><span class="comment">//在指定的坐标上画一个椭圆。 </span></span><br><span class="line">    </span><br><span class="line">imagearc( resource <span class="variable">$image</span>, <span class="keyword">int</span> <span class="variable">$cx</span>, <span class="keyword">int</span> <span class="variable">$cy</span>, <span class="keyword">int</span> <span class="variable">$w</span>, <span class="keyword">int</span> <span class="variable">$h</span>, <span class="keyword">int</span> <span class="variable">$s</span>, <span class="keyword">int</span> <span class="variable">$e</span>, <span class="keyword">int</span> <span class="variable">$color</span>) : <span class="keyword">bool</span></span><br><span class="line"><span class="comment">//imagearc() 以 cx，cy（图像左上角为 0, 0）为中心在 image 所代表的图像中画一个椭圆弧。w 和 h 分别指定了椭圆的宽度和高度，起始和结束点以 s 和 e 参数以角度指定。0°位于三点钟位置，以顺时针方向绘画。 </span></span><br><span class="line"></span><br><span class="line">imagepolygon( resource <span class="variable">$image</span>, <span class="keyword">array</span> <span class="variable">$points</span>, <span class="keyword">int</span> <span class="variable">$num_points</span>, <span class="keyword">int</span> <span class="variable">$color</span>) : <span class="keyword">bool</span></span><br><span class="line"><span class="comment">//imagepolygon() 在图像中创建一个多边形。points 是一个 PHP 数组，包含了多边形的各个顶点坐标，即 points[0]= x0，points[1] = y0，points[2]= x1，points[3] = y1，以此类推。num_points 是顶点的总数。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-2验证码实例"><a href="#8-2验证码实例" class="headerlink" title="8.2验证码实例"></a>8.2验证码实例</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>); <span class="comment">//发送原生 HTTP 头 </span></span><br><span class="line"><span class="variable">$width</span>=<span class="number">120</span>;<span class="comment">//设置宽度</span></span><br><span class="line"><span class="variable">$height</span>=<span class="number">40</span>;<span class="comment">//设置高度</span></span><br><span class="line"><span class="variable">$element</span>=<span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;r&#x27;</span>);<span class="comment">//含多个字符的数组</span></span><br><span class="line"><span class="variable">$string</span>=<span class="string">&#x27;&#x27;</span>;<span class="comment">//初始化字符串</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">5</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$string</span>.=<span class="variable">$element</span>[rand(<span class="number">0</span>,count(<span class="variable">$element</span>)-<span class="number">1</span>)];<span class="comment">//生成要显示的字符串</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$img</span>=imagecreatetruecolor(<span class="variable">$width</span>,<span class="variable">$height</span>);<span class="comment">//新建新的画布</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$color_bg</span>=imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="variable">$color_border</span>=imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="variable">$color_string</span>=imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">10</span>,<span class="number">100</span>),rand(<span class="number">10</span>,<span class="number">100</span>),rand(<span class="number">10</span>,<span class="number">100</span>));</span><br><span class="line"></span><br><span class="line">imagefill(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$color_bg</span>);<span class="comment">//对img对象进行填充</span></span><br><span class="line">imagerectangle(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>,<span class="variable">$height</span>-<span class="number">1</span>,<span class="variable">$color_border</span>);<span class="comment">//在img上画一个矩形</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">100</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">imagesetpixel(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>-<span class="number">1</span>),imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">10</span>,<span class="number">100</span>),rand(<span class="number">10</span>,<span class="number">100</span>),rand(<span class="number">10</span>,<span class="number">100</span>)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">3</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">imageline(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="variable">$width</span>/<span class="number">2</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>),rand(<span class="variable">$width</span>/<span class="number">2</span>,<span class="variable">$width</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>),imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">10</span>,<span class="number">100</span>),rand(<span class="number">10</span>,<span class="number">100</span>),rand(<span class="number">10</span>,<span class="number">100</span>)));</span><br><span class="line">&#125;</span><br><span class="line">imagettftext(<span class="variable">$img</span>,<span class="number">25</span>,rand(-<span class="number">5</span>,<span class="number">5</span>),rand(<span class="number">5</span>,<span class="number">25</span>),rand(<span class="number">20</span>,<span class="number">30</span>),<span class="variable">$color_string</span>,<span class="string">&#x27;font/FZZJ-JYTJW.TTF&#x27;</span>,<span class="variable">$string</span>);<span class="comment">//使用相对路径引入字体</span></span><br><span class="line">imagejpeg(<span class="variable">$img</span>);<span class="comment">//输出图像到浏览器或者文件</span></span><br><span class="line">imagedestroy(<span class="variable">$img</span>);<span class="comment">//000</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-3水印"><a href="#8-3水印" class="headerlink" title="8.3水印"></a>8.3水印</h2><h3 id="8-3-1文字水印"><a href="#8-3-1文字水印" class="headerlink" title="8.3.1文字水印"></a>8.3.1文字水印</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//添加一个简单的文字水印</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>); <span class="comment">//发送原生 HTTP 头 </span></span><br><span class="line"><span class="variable">$img</span>=imagecreatefromjpeg(<span class="string">&#x27;images/girl.jpeg&#x27;</span>);</span><br><span class="line"><span class="variable">$color</span>=imagecolorallocate(<span class="variable">$img</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line">imagettftext(<span class="variable">$img</span>,<span class="number">14</span>,<span class="number">0</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="variable">$color</span>,<span class="string">&#x27;font/black.ttf&#x27;</span>,<span class="string">&#x27;木子南&#x27;</span>);</span><br><span class="line"></span><br><span class="line">imagejpeg(<span class="variable">$img</span>,<span class="string">&#x27;wow.jpeg&#x27;</span>);</span><br><span class="line">imagedestroy(<span class="variable">$img</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">imagesx( resource <span class="variable">$image</span>) : <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//imagesx() 返回 image 所代表的图像的宽度。</span></span><br><span class="line"></span><br><span class="line">imagesy( resource <span class="variable">$image</span>) : <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//imagesy() 返回 image 所代表的图像的高度。 </span></span><br><span class="line"></span><br><span class="line">imagettfbbox( <span class="keyword">float</span> <span class="variable">$size</span>, <span class="keyword">float</span> <span class="variable">$angle</span>, <span class="keyword">string</span> <span class="variable">$fontfile</span>, <span class="keyword">string</span> <span class="variable">$text</span>) : <span class="keyword">array</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*本函数计算并返回一个包围着 TrueType 文本范围的虚拟方框的像素大小。 </span></span><br><span class="line"><span class="comment">size 像素单位的字体大小。 angle text 将被度量的角度大小。 fontfile TrueType 字体文件的文件名（可以是 URL）。根据 PHP 所使用的 GD 库版本，可能尝试搜索那些不是以 &#x27;/&#x27; 开头的文件名并加上 &#x27;.ttf&#x27; 的后缀并搜索库定义的字体路径。  text 要度量的字符串。 imagettfbbox() 返回一个含有 8 个单元的数组表示了文本外框的四个角： </span></span><br><span class="line"><span class="comment">0 左下角 X 位置 </span></span><br><span class="line"><span class="comment">1 左下角 Y 位置 </span></span><br><span class="line"><span class="comment">2 右下角 X 位置 </span></span><br><span class="line"><span class="comment">3 右下角 Y 位置 </span></span><br><span class="line"><span class="comment">4 右上角 X 位置 </span></span><br><span class="line"><span class="comment">5 右上角 Y 位置 </span></span><br><span class="line"><span class="comment">6 左上角 X 位置 </span></span><br><span class="line"><span class="comment">7 左上角 Y 位置 </span></span><br><span class="line"><span class="comment">这些点是相对于文本的而和角度无关，因此&quot;左上角&quot;指的是以水平方向看文字时其左上角。*/</span> </span><br></pre></td></tr></table></figure><h3 id="8-3-2图片水印"><a href="#8-3-2图片水印" class="headerlink" title="8.3.2图片水印"></a>8.3.2图片水印</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">imagecopy( resource <span class="variable">$dst_im</span>, resource <span class="variable">$src_im</span>, <span class="keyword">int</span> <span class="variable">$dst_x</span>, <span class="keyword">int</span> <span class="variable">$dst_y</span>, <span class="keyword">int</span> <span class="variable">$src_x</span>, <span class="keyword">int</span> <span class="variable">$src_y</span>, <span class="keyword">int</span> <span class="variable">$src_w</span>, <span class="keyword">int</span> <span class="variable">$src_h</span>) : <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将 src_im 图像中坐标从 src_x，src_y  开始，宽度为 src_w，高度为 src_h 的一部分拷贝到 dst_im 图像中坐标为 dst_x 和 dst_y 的位置上。 </span></span><br><span class="line">imagecopymerge( resource <span class="variable">$dst_im</span>, resource <span class="variable">$src_im</span>, <span class="keyword">int</span> <span class="variable">$dst_x</span>, <span class="keyword">int</span> <span class="variable">$dst_y</span>, <span class="keyword">int</span> <span class="variable">$src_x</span>, <span class="keyword">int</span> <span class="variable">$src_y</span>, <span class="keyword">int</span> <span class="variable">$src_w</span>, <span class="keyword">int</span> <span class="variable">$src_h</span>, <span class="keyword">int</span> <span class="variable">$pct</span>) : <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将 src_im 图像中坐标从 src_x，src_y  开始，宽度为 src_w，高度为 src_h 的一部分拷贝到 dst_im 图像中坐标为 dst_x 和 dst_y 的位置上。两图像将根据 pct 来决定合并程度，其值范围从 0 到 100。当 pct = 0 时，实际上什么也没做，当为 100 时对于调色板图像本函数和 imagecopy() 完全一样，它对真彩色图像实现了 alpha 透明。 </span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="8-3-3透明处理"><a href="#8-3-3透明处理" class="headerlink" title="8.3.3透明处理"></a>8.3.3透明处理</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">imagecolorat( resource <span class="variable">$image</span>, <span class="keyword">int</span> <span class="variable">$x</span>, <span class="keyword">int</span> <span class="variable">$y</span>) : <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//返回 image 所指定的图形中指定位置像素的颜色索引值。 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果 PHP 编译时加上了 GD 库 2.0 或更高的版本并且图像是真彩色图像，则本函数以整数返回该点的 RGB 值。用移位加掩码来取得红，绿，蓝各自成分的值： </span></span><br><span class="line"></span><br><span class="line">imagecolorexact( resource <span class="variable">$image</span>, <span class="keyword">int</span> <span class="variable">$red</span>, <span class="keyword">int</span> <span class="variable">$green</span>, <span class="keyword">int</span> <span class="variable">$blue</span>) : <span class="keyword">int</span></span><br><span class="line"><span class="comment">//返回图像调色板中指定颜色的索引值。 </span></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">imagecolortransparent( resource <span class="variable">$image</span>, <span class="keyword">int</span> <span class="variable">$color</span> = ?) : <span class="keyword">int</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//imagecolortransparent() 将 image 图像中的透明色设定为 color。image 是 imagecreatetruecolor() 返回的图像标识符，color 是 imagecolorallocate() 返回的颜色标识符。 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="8-4缩放和裁剪"><a href="#8-4缩放和裁剪" class="headerlink" title="8.4缩放和裁剪"></a>8.4缩放和裁剪</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">imagecopyresampled( resource <span class="variable">$dst_image</span>, resource <span class="variable">$src_image</span>, <span class="keyword">int</span> <span class="variable">$dst_x</span>, <span class="keyword">int</span> <span class="variable">$dst_y</span>, <span class="keyword">int</span> <span class="variable">$src_x</span>, <span class="keyword">int</span> <span class="variable">$src_y</span>, <span class="keyword">int</span> <span class="variable">$dst_w</span>, <span class="keyword">int</span> <span class="variable">$dst_h</span>, <span class="keyword">int</span> <span class="variable">$src_w</span>, <span class="keyword">int</span> <span class="variable">$src_h</span>) : <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//imagecopyresampled() 将一幅图像中的一块正方形区域拷贝到另一个图像中，平滑地插入像素值，因此，尤其是，减小了图像的大小而仍然保持了极大的清晰度。 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//In other words, imagecopyresampled() will take arectangular area from src_image of width src_w and height src_h atposition (src_x,src_y)and place it in a rectangular area of dst_image of width dst_w and height dst_hat position (dst_x,dst_y). </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//如果源和目标的宽度和高度不同，则会进行相应的图像收缩和拉伸。坐标指的是左上角。本函数可用来在同一幅图内部拷贝（如果 dst_image 和 src_image 相同的话）区域，但如果区域交迭的话则结果不可预知。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="9-文件操作"><a href="#9-文件操作" class="headerlink" title="9.文件操作"></a>9.文件操作</h1><h2 id="9-1获取文件的信息"><a href="#9-1获取文件的信息" class="headerlink" title="9.1获取文件的信息"></a>9.1获取文件的信息</h2><h3 id="9-1-1获取文件的时间属性"><a href="#9-1-1获取文件的时间属性" class="headerlink" title="9.1.1获取文件的时间属性"></a>9.1.1获取文件的时间属性</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">is_file()</span><br><span class="line"><span class="comment">//判断是否是一个文件</span></span><br><span class="line">is_dir()</span><br><span class="line"><span class="comment">//判断是不是一个目录</span></span><br><span class="line">   </span><br><span class="line">file_exists( <span class="keyword">string</span> <span class="variable">$filename</span>) : <span class="keyword">bool</span></span><br><span class="line"><span class="comment">//检查文件或目录是否存在。 </span></span><br><span class="line">filesize( <span class="keyword">string</span> <span class="variable">$filename</span>) : <span class="keyword">int</span></span><br><span class="line"><span class="comment">//取得指定文件的大小。 </span></span><br><span class="line"></span><br><span class="line">fileatime( <span class="keyword">string</span> <span class="variable">$filename</span>) : <span class="keyword">int</span></span><br><span class="line"><span class="comment">//取得文件的上次访问时间。 </span></span><br><span class="line"><span class="variable">$a</span>=fileatime(<span class="string">&#x27;wow.jpeg&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>,<span class="variable">$a</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$time</span>=filectime(<span class="string">&#x27;wow.jpeg&#x27;</span>);</span><br><span class="line"><span class="comment">//取得文件的 inode 修改时间。 </span></span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">&#x27;H:i:s Y-m-d&#x27;</span>,<span class="variable">$time</span>);</span><br><span class="line"></span><br><span class="line">filemtime( <span class="keyword">string</span> <span class="variable">$filename</span>) : <span class="keyword">int</span></span><br><span class="line"><span class="comment">//本函数返回文件中的数据块上次被写入的时间，也就是说，文件的内容上次被修改的时间。</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-1-2从路径获取文件名"><a href="#9-1-2从路径获取文件名" class="headerlink" title="9.1.2从路径获取文件名"></a>9.1.2从路径获取文件名</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">string</span> basename(<span class="keyword">string</span> <span class="variable">$path</span>[,<span class="keyword">string</span> <span class="variable">$suffix</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="9-1-3打开和关闭文件"><a href="#9-1-3打开和关闭文件" class="headerlink" title="9.1.3打开和关闭文件"></a>9.1.3打开和关闭文件</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">resource fopen(<span class="keyword">string</span> <span class="variable">$filename</span>,<span class="keyword">string</span> <span class="variable">$mode</span>[,<span class="keyword">bool</span> <span class="variable">$use_include_path</span>=<span class="literal">false</span>[,resource <span class="variable">$context</span>]])</span><br><span class="line">    </span><br><span class="line">用fopen函数可以对远程的文件进行读操作</span><br><span class="line">    </span><br><span class="line">fclose(resource <span class="variable">$name</span>);</span><br></pre></td></tr></table></figure><h1 id="10php操作mysql数据库"><a href="#10php操作mysql数据库" class="headerlink" title="10php操作mysql数据库"></a>10php操作mysql数据库</h1><h2 id="10-1基本步骤"><a href="#10-1基本步骤" class="headerlink" title="10.1基本步骤"></a>10.1基本步骤</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">连接数据库服务器</span><br><span class="line">mysql_connect();</span><br><span class="line">选择数据库</span><br><span class="line">mysql_select_db();</span><br><span class="line">执行sql语句</span><br><span class="line">mysql_query();</span><br><span class="line">关闭数据集</span><br><span class="line">mysql_free_result(<span class="variable">$result</span>);</span><br><span class="line">关闭数据库服务器</span><br><span class="line">mysql_close(<span class="variable">$Link</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="10-2操作"><a href="#10-2操作" class="headerlink" title="10.2操作"></a>10.2操作</h2><h3 id="10-2-1连接数据库"><a href="#10-2-1连接数据库" class="headerlink" title="10.2.1连接数据库"></a>10.2.1连接数据库</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql_connect( <span class="keyword">string</span> <span class="variable">$server</span> = ini_get(<span class="string">&quot;mysql.default_host&quot;</span>), <span class="keyword">string</span> <span class="variable">$username</span> = ini_get(<span class="string">&quot;mysql.default_user&quot;</span>), <span class="keyword">string</span> <span class="variable">$password</span> = ini_get(<span class="string">&quot;mysql.default_password&quot;</span>), <span class="keyword">bool</span> <span class="variable">$new_link</span> = <span class="literal">false</span>, <span class="keyword">int</span> <span class="variable">$client_flags</span> = <span class="number">0</span>) : resource|<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//打开或重复使用一个到 MySQL 服务器的连接。 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="11-面向对象编程"><a href="#11-面向对象编程" class="headerlink" title="11.面向对象编程"></a>11.面向对象编程</h1><h2 id="11-1类的构成"><a href="#11-1类的构成" class="headerlink" title="11.1类的构成"></a>11.1类的构成</h2><h3 id="11-1-1类的成员变量"><a href="#11-1-1类的成员变量" class="headerlink" title="11.1.1类的成员变量"></a>11.1.1类的成员变量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="variable">$action</span>;</span><br><span class="line">    <span class="comment">//构造函数</span></span><br><span class="line">function__construct(<span class="variable">$_name</span>,<span class="variable">$_action</span>)&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name=<span class="variable">$_name</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;action=<span class="variable">$_action</span>;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//自定义函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">action</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name.<span class="keyword">$this</span>-&gt;action;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//析构函数</span></span><br><span class="line">function__destruct()&#123;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">    <span class="keyword">$this</span>-&gt;action;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//这里使用__destruct()函数清理由析构函数创建爱你的$name,$action资源,这个过程是自动进行的,不返回任何的消息,析构函数是不必要的,因为php内置了垃圾回收机制.</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">B</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$action</span>;</span><br><span class="line">funtion action()&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name.<span class="keyword">$this</span>-&gt;action; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有构造类的函数</span></span><br><span class="line"><span class="variable">$class1</span>=<span class="keyword">new</span> A(<span class="string">&quot;mike&quot;</span>,<span class="string">&quot;fuck herself&quot;</span>);</span><br><span class="line"><span class="variable">$class1</span>-&gt;action();</span><br><span class="line"><span class="comment">//没有构造类的函数</span></span><br><span class="line"><span class="variable">$class2</span>=<span class="keyword">new</span> class2();</span><br><span class="line"><span class="variable">$class2</span>-&gt;name=<span class="string">&quot;nike&quot;</span>;</span><br><span class="line"><span class="variable">$class2</span>-&gt;action=<span class="string">&quot;fuck me&quot;</span>;</span><br><span class="line"><span class="variable">$class2</span>-&gt;action()</span><br></pre></td></tr></table></figure><blockquote><p>在一个php文件中,导入 另一个php文件</p><p>require(‘filename’);</p></blockquote><blockquote><p>可以直接使用print_r()函数进行对象的输出</p></blockquote><h3 id="11-1-1静态属性"><a href="#11-1-1静态属性" class="headerlink" title="11.1.1静态属性"></a>11.1.1静态属性</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">myclass</span></span>&#123;</span><br><span class="line"> <span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$myProperty</span>;</span><br><span class="line">&#125;</span><br><span class="line">myclass::<span class="variable">$myProperty</span>=<span class="number">123</span>;<span class="comment">//初始化</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="11-1-3类常量"><a href="#11-1-3类常量" class="headerlink" title="11.1.3类常量"></a>11.1.3类常量</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义类常量,需要使用const关键字</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;</span><br><span class="line"> <span class="keyword">const</span> MYCONST=<span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> MyClass::MYCONST;</span><br></pre></td></tr></table></figure><h3 id="11-1-4方法"><a href="#11-1-4方法" class="headerlink" title="11.1.4方法"></a>11.1.4方法</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//在创建方法时可以对方法的可见性进行约定</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;这是代码&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$object</span>=<span class="keyword">new</span> MyClass;</span><br><span class="line"><span class="variable">$object</span>-&gt;hello();</span><br><span class="line"><span class="comment">//方法的参数:$Parma,$parm2;</span></span><br><span class="line"><span class="comment">//返回值:</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><h4 id="11-1-4-1静态方法"><a href="#11-1-4-1静态方法" class="headerlink" title="11.1.4.1静态方法"></a>11.1.4.1静态方法</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyClass</span>()</span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">staticmethod</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="comment">//方法体</span></span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyClass::staticmethod();</span><br><span class="line"><span class="comment">//与类有关但与实例对象无关的功能</span></span><br><span class="line"></span><br><span class="line">可以使用<span class="built_in">self</span>访问<span class="built_in">static</span>变量</span><br><span class="line">与<span class="keyword">$this</span>的作用类似</span><br></pre></td></tr></table></figure><h3 id="11-1-5用-get-set-call-重载对象"><a href="#11-1-5用-get-set-call-重载对象" class="headerlink" title="11.1.5用__get(),__set(),call()重载对象"></a>11.1.5用__get(),__set(),call()重载对象</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">用__get()和__set()方法重载属性访问:</span><br><span class="line"><span class="comment">//get和set方法可以将不存在的属性存储到一个私有的数组中.这种方法可以创建一个类,类中的虚拟属性的个数几乎不受限制,而且这些虚拟属性可以安全地和这个类的真是属性相隔离.这种方法经常用来创建需要保存任意数据的类</span></span><br><span class="line"><span class="keyword">public</span> function__get(<span class="variable">$propertyName</span>)&#123;</span><br><span class="line">    <span class="comment">//return &#x27;okok&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/用__call()重载方法调用</span><br><span class="line">    </span><br></pre></td></tr></table></figure><h1 id="12-Ajax技术的了解"><a href="#12-Ajax技术的了解" class="headerlink" title="12.Ajax技术的了解"></a>12.Ajax技术的了解</h1><blockquote><p>对于用户的每个行为,通过对Ajax进行一次javascript调用,能够在不刷新整个页面的情况下,对于部分数据进行更新.</p></blockquote><blockquote><p>AJAX 不需要任何浏览器插件，但需要用户允许JavaScript在浏览器上执行。</p></blockquote><h2 id="12-1javascript的介绍"><a href="#12-1javascript的介绍" class="headerlink" title="12.1javascript的介绍"></a>12.1javascript的介绍</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">javascript通过修改网页元素的css样式,达到动态地改变网页的外观.</span><br><span class="line">&lt;script src=外部脚本文件的路径&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="12-2html介绍"><a href="#12-2html介绍" class="headerlink" title="12.2html介绍"></a>12.2html介绍</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;类型&quot;</span> <span class="attr">name</span>=<span class="string">&quot;名称&quot;</span> <span class="attr">value</span>=<span class="string">&quot;可选属性指定表单元素的初始值&quot;</span> <span class="attr">Size</span>=<span class="string">&quot;元素显示长度&quot;</span> <span class="attr">maxlength</span>=<span class="string">&quot;指定在text和password表单元素中可用于文本输入的表单元素&quot;</span> <span class="attr">checked</span>=<span class="string">&quot;指定按钮是否选中&quot;</span> <span class="attr">src</span>=<span class="string">&quot;url表示图像的位置&quot;</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="/.com//1.JPG" alt="1"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理之流水线技术</title>
      <link href="/2021/11/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E6%B5%81%E6%B0%B4%E7%BA%BF%E6%8A%80%E6%9C%AF/"/>
      <url>/2021/11/30/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E6%B5%81%E6%B0%B4%E7%BA%BF%E6%8A%80%E6%9C%AF/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="一-流水线的相关："><a href="#一-流水线的相关：" class="headerlink" title="一.流水线的相关："></a>一.流水线的相关：</h1><p>​    1）结构相关：硬件方面（当硬件资源满足不了指令重叠执行时的要求时产生的）</p><p>​    2）数据相关：如果一条指令需要的某个数据正在被之前的指令操作着，那这条指令就无法执行，就导致了数据相关.（指令在流水线中重叠执行时，当后继指令需要用到前面指令的执行结果时发生的）</p><p>​    3）控制相关：如果现在要执行哪条指令，是由之前指令的运行结果决定，而现在那条之前指令的结果还没产生，就导致了控制相关.（当流水线遇到分支指令和其他改变PC值得指令时引起的）</p><h2 id="1-1结构相关"><a href="#1-1结构相关" class="headerlink" title="1.1结构相关"></a>1.1结构相关</h2><p>由访存引起的结构相关：取数和取指都需要访存。</p><p>·1：引起流水线停顿（stall），产生空泡（bubble）</p><p>·2：</p><p>解决访存冲突的方法：设置两个独立的存储器分别存放操作数和指令。</p><h2 id="1-2数据相关"><a href="#1-2数据相关" class="headerlink" title="1.2数据相关"></a>1.2数据相关</h2><p>1)RAW(Read After Write）后面指令用到前面所写的数据。</p><p>2)WAW(Write After Write）–两条指令写同一个单元，在简单流水线中没有此类相关，因为不会乱序执行</p><p>3)WAR(Write After Read)    后面指令覆盖前面指令所读的单元，在简单流水线中没有此类相关</p><p>•在动态流水线中会有WAR和WAW相关</p><h3 id="1-2-1解决数据相关的方法"><a href="#1-2-1解决数据相关的方法" class="headerlink" title="1.2.1解决数据相关的方法"></a>1.2.1解决数据相关的方法</h3><h4 id="1-2-1-1-forwarding技术"><a href="#1-2-1-1-forwarding技术" class="headerlink" title="1.2.1.1 forwarding技术"></a>1.2.1.1 forwarding技术</h4><blockquote><p>（旁路技术，相关专用通路技术）</p><p>数据在EX阶段就被计算出，所以可将它送到下一条指令ALU的输入，而不需要添加气泡（bubble）。</p></blockquote><h2 id="1-3控制相关"><a href="#1-3控制相关" class="headerlink" title="1.3控制相关"></a>1.3控制相关</h2><blockquote><p>主要是由转移指令引起的;</p><p>解决方法：尽早判断转移是否发生，尽早生成转移目标地址，预取转移成功或不成功两个控制流方向上的目标指令，加快和提前形成条件码，提高转移方向的猜准率。</p></blockquote><h1 id="二-流水线的性能"><a href="#二-流水线的性能" class="headerlink" title="二.流水线的性能"></a>二.流水线的性能</h1><p>1）吞吐量：</p><p>T=1/▲t</p><p>2）加速比:（speedup Ratio）</p><p>Sp=m·n÷（m+n-1）</p><p>3）效率：</p><p>E=Sp÷m</p><h1 id="三-流水线中的多发技术"><a href="#三-流水线中的多发技术" class="headerlink" title="三.流水线中的多发技术"></a>三.流水线中的多发技术</h1><p>·超标量技术</p><p>·超流水线技术</p><p>·超长指令字技术</p><h1 id="四-动态流水线技术"><a href="#四-动态流水线技术" class="headerlink" title="四.动态流水线技术"></a>四.动态流水线技术</h1><h2 id="指令集并行技术"><a href="#指令集并行技术" class="headerlink" title="指令集并行技术"></a>指令集并行技术</h2><h2 id="动态调度技术"><a href="#动态调度技术" class="headerlink" title="动态调度技术"></a>动态调度技术</h2><h2 id="记分板"><a href="#记分板" class="headerlink" title="记分板"></a>记分板</h2><p>Q j：当前把源寄存器F j当做目标寄存器的功能部件号</p><p>Q k: 当前把源寄存器当作当作目标寄存器的功能部件号</p><p>F i:目标寄存器号</p><p>F j:源寄存器号</p><p>F k:源寄存器号</p><p>R j:指示F j是否可用</p><p>R k:指示F k是否可用</p><h2 id="循环展开技术"><a href="#循环展开技术" class="headerlink" title="循环展开技术"></a>循环展开技术</h2><h2 id="Tomasulo算法"><a href="#Tomasulo算法" class="headerlink" title="Tomasulo算法"></a>Tomasulo算法</h2><h1 id="五-中断系统"><a href="#五-中断系统" class="headerlink" title="五.中断系统"></a>五.中断系统</h1><h2 id="中断请求标记和中断请求判优逻辑"><a href="#中断请求标记和中断请求判优逻辑" class="headerlink" title="中断请求标记和中断请求判优逻辑"></a>中断请求标记和中断请求判优逻辑</h2><p>由于漏电阻的存在，DRAM存储单元经过一段时间会泄放掉其充积的电荷，导致信息丢失或者错误，为了保证存储信息的正确性。需要每隔一段时间为DRAM的所有单元电路进行充电，此过程为刷新。</p><p>刷新分为异步,同步,</p><p>寻址方式主要包括：</p><p>指令寻址</p><p>数据寻址</p><p>主状态周期，节拍电位，节拍脉冲</p><p>cpu中断保护时的两个关键的硬件技术：程序断点和程序状态字</p><p>解释：是指将一种语言编写的程序的一条语句翻译成另一种语言的一条或者多条语句，然后执行。解释完一条语句之后，再解释下一条。</p><p>翻译：是指将一种语言编写的程序的所有语句翻译成另一种语言，然后再执行</p><p>计算机的属性</p><p>如何实现计算机体系结构表现出来的属性</p><p>二进制；</p><p>运算器：</p><p>五个部件：cdd</p><p>指令和数据都在存储器中：并可以按照地址访问</p><p>控制器：</p><p>翻译是指低等级的计算机将高一级机器上的程序整个翻译成低等级计算机能够执行的等效的程序,然后再在低一级的机器上去实现的技术.</p><p>解释是指在低一级的机器上用他的一串语句或者指令来仿真高一级机器上的一条语句或者指令的功能 通过对高一级机器语言程序中的每条语句或者指令解释来实现的技术</p>]]></content>
      
      
      
        <tags>
            
            <tag> 计组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql数据库学习</title>
      <link href="/2021/11/26/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0(1)/"/>
      <url>/2021/11/26/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0(1)/</url>
      
        <content type="html"><![CDATA[<h1 id="一-sql、DB、DBMS"><a href="#一-sql、DB、DBMS" class="headerlink" title="一.sql、DB、DBMS"></a>一.sql、DB、DBMS</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DB: DataBase（数据库，数据库实际上在硬盘上以文件的形式存在）</span><br><span class="line">DBMS: DataBase Management <span class="keyword">System</span>（数据库管理系统，常见的有：MySQL Oracle DB2 Sybase SqlServer...）</span><br><span class="line"><span class="keyword">SQL</span>: 结构化查询语言，是一门标准通用的语言。标准的<span class="keyword">sql</span>适合于所有的数据库产品。</span><br><span class="line">     <span class="keyword">SQL</span>属于高级语言。只要能看懂英语单词的，写出来的<span class="keyword">sql</span>语句，可以读懂什么意思。</span><br><span class="line">     <span class="keyword">SQL</span>语句在执行的时候，实际上内部也会先进行编译，然后再执行<span class="keyword">sql</span>。（<span class="keyword">sql</span>语句的编译由DBMS完成。）</span><br><span class="line">     DBMS负责执行<span class="keyword">sql</span>语句，通过执行<span class="keyword">sql</span>语句来操作DB当中的数据。</span><br><span class="line">DBMS <span class="operator">-</span>(执行)<span class="operator">-</span><span class="operator">&gt;</span> <span class="keyword">SQL</span> <span class="operator">-</span>(操作)<span class="operator">-</span><span class="operator">&gt;</span> DB</span><br></pre></td></tr></table></figure><h1 id="二-表的概念"><a href="#二-表的概念" class="headerlink" title="二.表的概念"></a>二.表的概念</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">表：<span class="keyword">table</span>是数据库的基本组成单元，所有的数据都以表格的形式组织，目的是可读性强。</span><br><span class="line">一个表包括行和列：</span><br><span class="line">行：被称为数据<span class="operator">/</span>记录(data)</span><br><span class="line">列：被称为字段(<span class="keyword">column</span>)</span><br><span class="line">学号(<span class="type">int</span>)姓名(<span class="type">varchar</span>)年龄(<span class="type">int</span>)</span><br><span class="line"><span class="comment">------------------------------------</span></span><br><span class="line"><span class="number">110</span>张三<span class="number">20</span></span><br><span class="line"><span class="number">120</span>李四<span class="number">21</span></span><br></pre></td></tr></table></figure><h1 id="三-字段的属性"><a href="#三-字段的属性" class="headerlink" title="三.字段的属性"></a>三.字段的属性</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字段名、数据类型、相关的约束。</span><br></pre></td></tr></table></figure><h1 id="四-SQL语句的分类"><a href="#四-SQL语句的分类" class="headerlink" title="四.SQL语句的分类"></a>四.SQL语句的分类</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DQL（数据查询语言）: 查询语句，凡是<span class="keyword">select</span>语句都是DQL。</span><br><span class="line">DML（数据操作语言）(Data Manipulation <span class="keyword">Language</span>)：<span class="keyword">insert</span> <span class="keyword">delete</span> update，对表当中的数据进行增删改。</span><br><span class="line">DDL（数据定义语言）：<span class="keyword">create</span> <span class="keyword">drop</span> <span class="keyword">alter</span>，对表结构的增删改。</span><br><span class="line">TCL（事务控制语言）：<span class="keyword">commit</span>提交事务，<span class="keyword">rollback</span>回滚事务。(TCL中的T是       Transaction)</span><br><span class="line">DCL（数据控制语言）: <span class="keyword">grant</span>授权、<span class="keyword">revoke</span>撤销权限等。</span><br></pre></td></tr></table></figure><h1 id="五-登录数据库"><a href="#五-登录数据库" class="headerlink" title="五.登录数据库"></a>五.登录数据库</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">命令行窗口输入：<span class="operator">-</span>uroot <span class="operator">-</span>p你的密码</span><br><span class="line">初始化数据：source 文件路径</span><br><span class="line">(以<span class="keyword">sql</span>结尾的文件称为<span class="keyword">sql</span>脚本，其中包含着许多的<span class="keyword">sql</span>语句)</span><br><span class="line"><span class="keyword">sql</span>脚本中的数据量太大的时候，无法打开，请使用source命令完成初始化。</span><br></pre></td></tr></table></figure><h1 id="六-常用sql命令"><a href="#六-常用sql命令" class="headerlink" title="六.常用sql命令"></a>六.常用sql命令</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) mysql<span class="operator">&gt;</span> <span class="keyword">select</span> database(); 查看当前使用的是哪个数据库</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) mysql<span class="operator">&gt;</span> <span class="keyword">select</span> version(); 查看mysql的版本号。</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) \c  命令，结束一条语句。</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) exit 命令，退出mysql。</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>)<span class="keyword">show</span> tables;(显示当前数据库中的所有的表)</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>)<span class="keyword">create</span> &#123;database<span class="operator">|</span>schema&#125; [if <span class="keyword">not</span> <span class="keyword">exists</span>] 数据库名<span class="operator">/</span><span class="operator">/</span>创建数据库</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>)<span class="keyword">show</span> databases [<span class="keyword">like</span> wild]显示当前有的所有数据库</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>)use db_name 选择要使用的数据库名(该语句可以用来从一个数据库转移到另一个数据库，用<span class="keyword">create</span>语句创建的数据库不会自动成为当前数据库，需要用use语句指定当前的数据库)</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>)<span class="keyword">drop</span> database [if <span class="keyword">exists</span> ] sqlname;删库</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>)<span class="keyword">show</span> <span class="keyword">create</span> database sqlname 查看数据库的定义</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>)对于数据库的修改：<span class="keyword">alter</span> database db_name <span class="keyword">default</span> <span class="type">character</span> <span class="keyword">set</span> charset_name</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="七-mysql数据表操作"><a href="#七-mysql数据表操作" class="headerlink" title="七.mysql数据表操作"></a>七.mysql数据表操作</h1><h2 id="7-1创建数据表"><a href="#7-1创建数据表" class="headerlink" title="7.1创建数据表"></a>7.1创建数据表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">建表语句的语法格式： </span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名(</span><br><span class="line"></span><br><span class="line">字段名<span class="number">1</span> 数据类型,</span><br><span class="line"></span><br><span class="line">字段名<span class="number">2</span> 数据类型,</span><br><span class="line"></span><br><span class="line">字段名<span class="number">3</span> 数据类型,</span><br><span class="line"></span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> [temporary] <span class="keyword">table</span> [if <span class="keyword">not</span> <span class="keyword">exists</span>]table_name </span><br><span class="line">[([column_definition],<span class="operator">~</span><span class="operator">~</span><span class="operator">~</span><span class="operator">|</span>[index_definition])]</span><br><span class="line">[table_option][select_statement];</span><br><span class="line">创建数据表：temporary创建临时表，此表只能对创建它的用户可见，当断开与数据库的连接时，会自动删除临时表</span><br><span class="line">  index<span class="operator">-</span>definition:表索引项定义</span><br><span class="line">  table_option:用于描述表的选项</span><br><span class="line">  select_statement:可以在语句的末尾添加一个<span class="keyword">select</span>语句，在一个表的基础上创建一个表</span><br><span class="line">  </span><br><span class="line"><span class="number">1</span>)<span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> tablename 查看数据表的定义</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>关于MySQL当中字段的数据类型：</p><p>int        整数型(java中的int)</p><p>bigint   长整型(java中的long)</p><p>float        浮点型(java中的float double)</p><p>char        定长字符串(String)</p><p>Varchar     可变长字符串(StringBuffer/StringBuilder)</p><p>date        日期类型 （对应Java中的java.sql.Date类型）</p><p>BLOB        二进制大对象（存储图片、视频等流媒体信息） Binary Large OBject        （  对应java中的Object）</p><p>CLOB        字符大对象（存储较大文本，比如，可以存储4G的字符串。） Character Large OBject（对应java中的Object）</p><p>……</p><p><em>数据是定长的话，使用char，不定长的话，使用varchar</em></p><h2 id="7-2表的复制"><a href="#7-2表的复制" class="headerlink" title="7.2表的复制"></a>7.2表的复制</h2><p>复制数据表：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crate [temporary] <span class="keyword">table</span> [if <span class="keyword">not</span> <span class="keyword">exists</span>] table_name</span><br></pre></td></tr></table></figure><p>语法：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名 <span class="keyword">as</span> <span class="keyword">select</span>语句;</span><br></pre></td></tr></table></figure><p>将查询结果当做表创建出来。</p><h2 id="7-3表的修改"><a href="#7-3表的修改" class="headerlink" title="7.3表的修改"></a>7.3表的修改</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">修改数据表的名称：</span><br><span class="line"><span class="number">1</span>)<span class="keyword">alter</span> <span class="keyword">table</span> 旧表名 rename 新表名</span><br><span class="line">添加新的字段：</span><br><span class="line"><span class="number">2</span>)<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> 字段名 数据类型...;</span><br><span class="line">修改字段：</span><br><span class="line"><span class="number">3</span>)<span class="keyword">alter</span> <span class="keyword">table</span> 表名 change 原字段名 新字段名 数据类型...；(修改字段)</span><br><span class="line"><span class="number">4</span>)<span class="keyword">alter</span> <span class="keyword">table</span> 表名 modify 字段名 新数据类型</span><br><span class="line">删除字段：</span><br><span class="line"><span class="number">5</span>)<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">drop</span> 字段名（删除字段）</span><br><span class="line">在创建完表之后添加主键约束：</span><br><span class="line"><span class="number">6</span>)<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 主键名 <span class="keyword">primary</span> key 表名（主键字段）</span><br><span class="line">在创建完表之后进行外键约束：</span><br><span class="line"><span class="number">7</span>)<span class="keyword">alter</span> <span class="keyword">table</span> 表名 <span class="keyword">add</span> <span class="keyword">constraint</span> 外键名 <span class="keyword">foreign</span> key（外键字段）<span class="keyword">references</span> 关联表名（关联字段）</span><br><span class="line"> 查看表的结构</span><br><span class="line"><span class="number">8</span>)<span class="keyword">desc</span> table_name</span><br><span class="line">  如：<span class="keyword">desc</span> t_student;</span><br><span class="line">        <span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line">        <span class="operator">|</span> Field <span class="operator">|</span> Type         <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span> <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line">        <span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line">        <span class="operator">|</span> <span class="keyword">no</span>    <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> YES  <span class="operator">|</span> PRI <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line">        <span class="operator">|</span> sname <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">255</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line">        <span class="operator">|</span> age   <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>)      <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line">        <span class="operator">|</span> email <span class="operator">|</span> <span class="type">varchar</span>(<span class="number">255</span>) <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>    <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line">        <span class="operator">+</span><span class="comment">-------+--------------+------+-----+---------+-------+</span></span><br><span class="line">删除数据表：</span><br><span class="line">  <span class="number">9</span>)<span class="keyword">drop</span> [temporary] <span class="keyword">table</span> [id <span class="keyword">exists</span>]tbl_name<span class="operator">~</span><span class="operator">~</span><span class="operator">~</span>可以一次删除多个表</span><br><span class="line">  基本表删除之后，数据，表上的视图，索引都将删除</span><br><span class="line">复制数据表：</span><br><span class="line"><span class="number">10</span>)<span class="keyword">create</span> <span class="keyword">table</span> new_tbl_name <span class="keyword">like</span> old_tbl_name</span><br></pre></td></tr></table></figure><h2 id="7-4将查询结果插入到一张表中"><a href="#7-4将查询结果插入到一张表中" class="headerlink" title="7.4将查询结果插入到一张表中"></a>7.4将查询结果插入到一张表中</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> 表名(表要存在) <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> table_name(不存在) <span class="keyword">from</span> <span class="comment">----</span></span><br></pre></td></tr></table></figure><h2 id="7-5mysql表记录操作"><a href="#7-5mysql表记录操作" class="headerlink" title="7.5mysql表记录操作"></a>7.5mysql表记录操作</h2><blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">&gt;</span> 插入新的记录：<span class="keyword">insert</span>  [][][low_priority<span class="operator">|</span>delayed<span class="operator">|</span>high_priority] [ignore] [<span class="keyword">into</span>] tbl_name</span><br><span class="line">               [(col_name,<span class="operator">~</span><span class="operator">~</span><span class="operator">~</span>)] <span class="keyword">values</span>(&#123;expr<span class="operator">|</span><span class="keyword">default</span>&#125;,……) <span class="operator">|</span> <span class="keyword">set</span> col_name<span class="operator">=</span>(expr<span class="operator">|</span><span class="keyword">default</span>)</span><br><span class="line">#如下:</span><br><span class="line">    <span class="number">1</span>)<span class="keyword">insert</span> <span class="keyword">into</span> 表名(字段名<span class="number">1</span>,字段名<span class="number">2</span>,字段名<span class="number">3</span>,....) <span class="keyword">values</span>(值<span class="number">1</span>,值<span class="number">2</span>,值<span class="number">3</span>,....)</span><br><span class="line"></span><br><span class="line">    要求：字段的数量和值的数量相同，并且数据类型要对应相同。</span><br><span class="line"></span><br><span class="line">    <span class="number">2</span>)<span class="keyword">insert</span> <span class="keyword">into</span> tab_name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">set</span> 字段名<span class="number">1</span><span class="operator">=</span>&quot;value&quot;,字段名<span class="number">2</span><span class="operator">=</span>&quot;value&quot;；</span><br><span class="line"></span><br><span class="line">    <span class="number">3</span>）对于图片的储存：</span><br><span class="line"></span><br><span class="line">    使用路径：LOAD_FILE(<span class="string">&#x27;D:\images\picture.jpg&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> </span><br></pre></td></tr></table></figure></blockquote><h3 id="7-4-1update数据"><a href="#7-4-1update数据" class="headerlink" title="7.4.1update数据"></a>7.4.1update数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">update 表名 <span class="keyword">set</span> 字段名<span class="number">1</span><span class="operator">=</span>值<span class="number">1</span>,字段名<span class="number">2</span><span class="operator">=</span>值<span class="number">2.</span>.. <span class="keyword">where</span> 条件;</span><br><span class="line"></span><br><span class="line"><span class="operator">&gt;</span> 更新表记录：update [low_priprity] [ignore]  tbl_name <span class="keyword">set</span>  clo_name1<span class="operator">=</span>expr1</span><br><span class="line"></span><br><span class="line">更新多个表的数据：</span><br><span class="line">update[low_priority][ignore] table_references <span class="keyword">set</span> col_name<span class="operator">=</span>expr1[,col_name2<span class="operator">=</span>expr2[,...]]</span><br><span class="line">[<span class="keyword">where</span> where_definition]</span><br><span class="line"></span><br><span class="line">不同约束条件的修改：</span><br><span class="line">update table_name <span class="keyword">set</span> 字段名 <span class="operator">=</span> <span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> 条件一                                                </span><br><span class="line"><span class="keyword">then</span> 结果一                            </span><br><span class="line"><span class="keyword">else</span>   结果二                          </span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><em>没有条件时更新表中的所有数据</em></p><h3 id="7-4-2delete数据"><a href="#7-4-2delete数据" class="headerlink" title="7.4.2delete数据"></a>7.4.2delete数据</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">带条件的记录删除：</span><br><span class="line"><span class="keyword">delete</span> [low_priority][quick(快速删除)][ignore] <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;[<span class="keyword">order</span> by....(<span class="keyword">ASC</span><span class="operator">||</span><span class="keyword">DESC</span>)][limit row_count]</span><br><span class="line"></span><br><span class="line">#删除表记录：<span class="keyword">delete</span> [low_priority] [quick] [ignore] <span class="keyword">from</span> tbl<span class="operator">-</span>name</span><br></pre></td></tr></table></figure><p>没有条件的时候全部删除</p><h2 id="7-5约束"><a href="#7-5约束" class="headerlink" title="7.5约束"></a>7.5约束</h2><p>什么是约束：</p><p>在创建表的时候，可以给表的字段添加相应的约束，添加约束的目的是为了保证表中数据的合法性、有效性、完整性。</p><p>常见的约束：</p><p>非空约束(not null)：约束的字段不能为NULL</p><p>唯一约束(unique)：约束的字段不能重复</p><p>主键约束(primary key)：约束的字段既不能为NULL，也不能重复（简称PK）</p><p>外键约束(foreign key)：…（简称FK）</p><p>检查约束(check)：注意Oracle数据库有check约束，但是mysql没有，目前mysql不支持该约束。</p><h4 id="1-非空约束"><a href="#1-非空约束" class="headerlink" title="(1)非空约束"></a>(1)非空约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line"></span><br><span class="line">id <span class="type">int</span>,</span><br><span class="line"></span><br><span class="line">username <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">not</span> <span class="keyword">null</span>（<span class="operator">*</span><span class="operator">*</span>在创建表时添加约束<span class="operator">*</span><span class="operator">*</span>）,</span><br><span class="line"></span><br><span class="line">password <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_user(id,password) <span class="keyword">values</span>(<span class="number">1</span>,<span class="string">&#x27;123&#x27;</span>); <span class="operator">/</span><span class="operator">/</span>编译错误，约束username字段不能为空！</span><br><span class="line"></span><br><span class="line">ERROR <span class="number">1364</span> (HY000): Field <span class="string">&#x27;username&#x27;</span> doesn<span class="string">&#x27;t have a default value</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> insert into t_user(id,username,password) values(1,&#x27;</span>lisi<span class="string">&#x27;,&#x27;</span><span class="number">123</span><span class="string">&#x27;);</span></span><br></pre></td></tr></table></figure><h4 id="2-唯一性约束"><a href="#2-唯一性约束" class="headerlink" title="(2)唯一性约束"></a>(2)唯一性约束</h4><p> <em>唯一性约束修饰的字段具有唯一性</em>，<em>不能重复。但可以为null。</em></p><p> drop table if exists t_user;</p><p>create table t_user(</p><p>  id int,</p><p>  usercode varchar(255),</p><p>  username varchar(255),</p><p>  <strong>unique</strong>(usercode,username) //多个字段联合起来添加一个约束unique 【表级约束】</p><p>​      );</p><p><strong>ps：not null约束只有列级约束，没有表级约束。</strong></p><h4 id="3-主键约束"><a href="#3-主键约束" class="headerlink" title="(3)主键约束"></a>(3)主键约束</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> if <span class="keyword">exists</span> t_user;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line"></span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key, <span class="operator">/</span><span class="operator">/</span>列级约束</span><br><span class="line"></span><br><span class="line">username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"></span><br><span class="line">email <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">   );</span><br></pre></td></tr></table></figure><p><strong>主键约束</strong>，不能为null也不能重复！</p><p> 主键约束 ：primary key</p><p> 主键字段 : id字段添加primary key之后，id叫做主键字段</p><p> 主键值 ：id字段中的每一个值都是主键值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">create</span> <span class="keyword">table</span> t_user(</span><br><span class="line"></span><br><span class="line">id <span class="type">int</span> <span class="keyword">primary</span> key, <span class="operator">/</span><span class="operator">/</span>列级约束</span><br><span class="line"></span><br><span class="line">username <span class="type">varchar</span>(<span class="number">255</span>),</span><br><span class="line"></span><br><span class="line">email <span class="type">varchar</span>(<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line"> );</span><br></pre></td></tr></table></figure><h5 id="主键的分类"><a href="#主键的分类" class="headerlink" title="主键的分类"></a>主键的分类</h5><p>1）根据主键字段的字段数量来分：</p><blockquote><p>单一主键 and 复合主键</p></blockquote><p>2）根据主键的性质来划分：</p><blockquote><p>自然主键  and 业务主键</p></blockquote><p><strong>一个表的主键约束只能有一个</strong></p><p><em>mysql<strong>提供主键自增</strong></em></p><h4 id="5-外键约束"><a href="#5-外键约束" class="headerlink" title="(5)外键约束"></a>(5)外键约束</h4><blockquote><p>关于外键约束的相关术语：</p><p>   外键约束：foreign key</p><p>   外键字段：添加有外键约束的字段</p><p>   外键值：外键字段中的每一个值。</p></blockquote><p><strong>A表中的字段引用B表中的字段，则A是子表，B是父表</strong></p><blockquote><p>删除数据的时候，先删除子表，再删除父表。</p><p>添加数据的时候，先添加父表，再添加子表。</p><p>创建表的时候，先创建父表，再创建子表。</p><p>删除表的时候，先删除子表，再删除父表。</p><p>外键值可以为null</p></blockquote><p>​        </p><h2 id="7-6mysql常量"><a href="#7-6mysql常量" class="headerlink" title="7.6mysql常量"></a>7.6mysql常量</h2><p>1.字符串常量：用单引号进行字符串</p><h1 id="八-sql语句"><a href="#八-sql语句" class="headerlink" title="八.sql语句"></a>八.sql语句</h1><h2 id="8-1查询语句"><a href="#8-1查询语句" class="headerlink" title="8.1查询语句"></a>8.1查询语句</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名（能够显示表中所有数据的信息，但一般不常用）</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> 字段名<span class="number">1</span>,字段名<span class="number">2</span>,字段名<span class="number">3</span>,.... <span class="keyword">from</span> 表名;（字段可以参与数学运算）</span><br><span class="line"></span><br><span class="line">给查询结果的列重命名：<span class="keyword">select</span> ename,sal <span class="operator">*</span> <span class="number">12</span> <span class="keyword">as</span> yearsal <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,sal <span class="operator">*</span> <span class="number">12</span> （<span class="keyword">as</span>可以省略） <span class="string">&#x27;年薪&#x27;</span> <span class="keyword">from</span> emp;</span><br><span class="line"></span><br><span class="line"><span class="operator">*</span>条件查询：（<span class="number">3</span>）<span class="keyword">select</span>  字段,字段... （<span class="number">1</span>） <span class="keyword">from</span>  表名  （<span class="number">2</span>）<span class="keyword">where</span>  条件;<span class="operator">*</span></span><br><span class="line"></span><br><span class="line"><span class="operator">*</span>· <span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">=</span> <span class="number">5000</span>;<span class="operator">*</span></span><br><span class="line"></span><br><span class="line"><span class="operator">*</span>·<span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">between</span> <span class="number">1100</span> <span class="keyword">and</span> <span class="number">3000</span>;<span class="operator">*</span> </span><br><span class="line"></span><br><span class="line"><span class="operator">*</span><span class="operator">/</span><span class="operator">/</span> between...and...是闭区间 [<span class="number">1100</span> <span class="operator">~</span> <span class="number">3000</span>]<span class="operator">*</span></span><br><span class="line"></span><br><span class="line">在数据库当中<span class="keyword">NULL</span>不是一个值，代表什么也没有，为空。</span><br><span class="line"></span><br><span class="line">空不是一个值，不能用等号衡量。必须使用 <span class="keyword">is</span> <span class="keyword">null</span>或者<span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,sal,comm <span class="keyword">from</span> emp <span class="keyword">where</span> comm <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> ename,job <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="keyword">in</span>(<span class="number">800</span>, <span class="number">5000</span>); </span><br><span class="line"><span class="operator">/</span> <span class="keyword">in</span>后面的值不是区间，是具体的值。</span><br><span class="line"></span><br><span class="line">ISLOWER(Sdept)将查询出来的结果用小写字母表示</span><br><span class="line">例如：</span><br><span class="line"><span class="keyword">SELECT</span> Sname，‘<span class="keyword">Year</span> <span class="keyword">of</span> Birth: <span class="string">&#x27;，2000-Sage，ISLOWER(Sdept)</span></span><br><span class="line"><span class="string">FROM Student；</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Where字句是不能出现聚集函数的，因为where是对每一个元组进行过滤，而不是对每一个集合进行过滤 </span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h2 id="8-2模糊查询like"><a href="#8-2模糊查询like" class="headerlink" title="8.2模糊查询like"></a>8.2模糊查询like</h2><p>​                找出名字当中含有O的？（在模糊查询当中，必须掌握两个特殊的符号，一个是%，一个是_)</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">%</span>代表任意多个字符，_代表任意<span class="number">1</span>个字符。</span><br><span class="line"><span class="keyword">like</span> <span class="keyword">not</span> <span class="keyword">like</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> ename <span class="keyword">like</span> <span class="string">&#x27;%O%&#x27;</span>;</span><br><span class="line"></span><br><span class="line">新建一张表：<span class="keyword">Create</span> <span class="keyword">table</span> name<span class="operator">&lt;</span>Id <span class="type">int</span> ,Name <span class="type">varchar</span><span class="operator">&lt;</span><span class="number">255</span><span class="operator">&gt;&gt;</span>;</span><br><span class="line"></span><br><span class="line">(插入信息)<span class="keyword">Insert</span> nametable<span class="operator">&lt;</span>id,name<span class="operator">&gt;</span> <span class="keyword">values</span><span class="operator">&lt;</span><span class="number">1</span>,<span class="string">&#x27;john&#x27;</span><span class="operator">&gt;</span></span><br></pre></td></tr></table></figure><h2 id="8-3排序"><a href="#8-3排序" class="headerlink" title="8.3排序"></a>8.3排序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 （<span class="number">4</span>）<span class="keyword">order</span> <span class="keyword">by</span> 字段;(默认是升序)</span><br><span class="line"></span><br><span class="line">​<span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段 <span class="keyword">asc</span>;</span><br><span class="line"></span><br><span class="line">​<span class="keyword">select</span> 字段名 <span class="keyword">from</span> 表名 <span class="keyword">order</span> <span class="keyword">by</span> 字段 <span class="keyword">desc</span>;（降序）</span><br><span class="line"></span><br><span class="line">​<span class="keyword">select</span> ename,sal <span class="keyword">from</span> emp <span class="keyword">order</span> <span class="keyword">by</span> sal <span class="keyword">desc</span> , ename <span class="keyword">asc</span>;</span><br><span class="line"></span><br><span class="line">注意：越靠前的字段越能起到主导作用。只有当前面的字段无法完成排序的时候，才会启用后面的字段。</span><br></pre></td></tr></table></figure><h2 id="8-4分组函数"><a href="#8-4分组函数" class="headerlink" title="8.4分组函数"></a>8.4分组函数</h2><p>对某一组数据进行操作（在where操作之后）：（又名多行处理函数）自动忽略null</p><p>count 计数  count（*）计数总记录的条数  count（comm）：表示统计comm字段中不为null的数据总量</p><p>sum 求和</p><p>avg  平均值</p><p>max 最大值</p><p>min 最小值</p><h2 id="8-5单行处理函数"><a href="#8-5单行处理函数" class="headerlink" title="8.5单行处理函数"></a>8.5单行处理函数</h2><p>ifnull（可能为null的数据被当作什么处理）:属于单行处理函数</p><h2 id="8-6groupby和having"><a href="#8-6groupby和having" class="headerlink" title="8.6groupby和having"></a>8.6groupby和having</h2><p>groupby：按照某个字段或者某些字段进行分组</p><p>having：having是对分组之后的数据进行再次过滤</p><p>规则：当一条语句中有group by的话，select后面只能跟分组函数和参与分组的字段。</p><p>也就是 select 后面的所有列中，没有使用聚合函数的列,必须出现在 group by 后面</p><h2 id="8-7执行顺序"><a href="#8-7执行顺序" class="headerlink" title="8.7执行顺序"></a>8.7执行顺序</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>               <span class="number">5</span></span><br><span class="line"></span><br><span class="line">..</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span>            <span class="number">1</span>    </span><br><span class="line"></span><br><span class="line">..</span><br><span class="line"></span><br><span class="line"><span class="keyword">where</span>            <span class="number">2</span></span><br><span class="line"></span><br><span class="line">..</span><br><span class="line"></span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span>        <span class="number">3</span></span><br><span class="line"></span><br><span class="line">..</span><br><span class="line"></span><br><span class="line"><span class="keyword">having</span>               <span class="number">4</span></span><br><span class="line"></span><br><span class="line">..</span><br><span class="line"></span><br><span class="line"><span class="keyword">order</span> <span class="keyword">by</span>        <span class="number">6</span></span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">limit &#123;[<span class="keyword">offset</span>,]row_count <span class="operator">|</span> row_count <span class="keyword">OFFSET</span> <span class="keyword">offset</span>&#125;    <span class="number">7</span></span><br><span class="line"></span><br><span class="line">## 查询</span><br></pre></td></tr></table></figure><h2 id="8-8结果集的去重"><a href="#8-8结果集的去重" class="headerlink" title="8.8结果集的去重"></a>8.8结果集的去重</h2><p>distinct 关键字去除重复记录（只能出现在所有字段的最前面）</p><h2 id="8-9连接查询"><a href="#8-9连接查询" class="headerlink" title="8.9连接查询"></a>8.9连接查询</h2><p><strong>内连接：</strong></p><p>​    1）等值连接</p><p>​    2）非等值连接</p><p>​    3）自连接</p><p><strong>外连接：</strong></p><p>​    1）左外连接</p><p>​    2）右外连接</p><p>​    全连接(很少用)</p><p><strong>笛卡尔积现象：当两张表进行连接查询的时候，没有任何条件进行限制，最终的查询结果条数是两张表记录条数的乘积。</strong></p><p>内连接:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> emp e (<span class="keyword">inner</span>) <span class="keyword">join</span>  dept d <span class="keyword">on</span> e.deptno<span class="operator">=</span>d.deptno(连接条件);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span>   e.ename,e.sal,s.grade  </span><br><span class="line"><span class="keyword">from</span> emp e <span class="keyword">inner</span> <span class="keyword">join</span> salgrade s </span><br><span class="line"><span class="keyword">on</span>  e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br></pre></td></tr></table></figure><p><strong>自连接</strong>：最大的特点是：一张表看做两张表。自己连接自己。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 字段名 <span class="keyword">from</span> emp e1 <span class="keyword">join</span> emp e2 <span class="keyword">on</span> 条件</span><br></pre></td></tr></table></figure><p><strong>外连接</strong>：</p><p>内连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">假设A和B表进行连接，使用内连接的话，凡是A表和B表能够匹配上的记录查询出来，这就是内连接。</span><br><span class="line"></span><br><span class="line">AB两张表没有主副之分，两张表是平等的。</span><br></pre></td></tr></table></figure><p> 外连接：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">假设A和B表进行连接，使用外连接的话，AB两张表中有一张表是主表，一张表是副表，主要查询主表中</span><br><span class="line"></span><br><span class="line">的数据，捎带着查询副表，当副表中的数据没有和主表中的数据匹配上，副表自动模拟出NULL与之匹配。</span><br></pre></td></tr></table></figure><p> 外连接的分类？</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">左外连接（左连接）：表示左边的这张表是主表。</span><br><span class="line"></span><br><span class="line">右外连接（右连接）：表示右边的这张表是主表。</span><br></pre></td></tr></table></figure><p> <em>左连接有右连接的写法，右连接也会有对应的左连接的写法。</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> </span><br><span class="line">a.ename <span class="string">&#x27;员工&#x27;</span>, b.ename <span class="string">&#x27;领导&#x27;</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">emp a</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span></span><br><span class="line">emp b</span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">a.mgr <span class="operator">=</span> b.empno;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>左外连接</span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">a.ename <span class="string">&#x27;员工&#x27;</span>, b.ename <span class="string">&#x27;领导&#x27;</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">emp b</span><br><span class="line"><span class="keyword">right</span> <span class="keyword">outer</span> <span class="keyword">join</span></span><br><span class="line">emp a</span><br><span class="line"><span class="keyword">on</span></span><br><span class="line">a.mgr <span class="operator">=</span> b.empno;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>右外连接</span><br></pre></td></tr></table></figure><p><u>外连接最重要的特点是：主表的数据无条件的全部查询出来。</u></p><p>三张表之间的连接：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line">e.ename,d.dname,s.grade</span><br><span class="line"><span class="keyword">from</span> </span><br><span class="line">emp e</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> </span><br><span class="line">dept d</span><br><span class="line"><span class="keyword">on</span> </span><br><span class="line">e.deptno<span class="operator">=</span>d.deptno</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> </span><br><span class="line">salgrade s</span><br><span class="line"><span class="keyword">on</span> </span><br><span class="line">e.sal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span>emp表先和dept表连接，然后和salgrade表连接</span><br></pre></td></tr></table></figure><h2 id="8-10子查询"><a href="#8-10子查询" class="headerlink" title="8.10子查询"></a>8.10子查询</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span></span><br><span class="line"></span><br><span class="line">..(<span class="keyword">select</span>).</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span>    </span><br><span class="line"><span class="keyword">select</span>  t.<span class="operator">*</span>,s.grade <span class="keyword">from</span> (<span class="keyword">select</span> deptno,<span class="built_in">avg</span>(sal) <span class="keyword">as</span> avgsal <span class="keyword">from</span> emp <span class="keyword">group</span> <span class="keyword">by</span> deptno) t <span class="keyword">join</span> </span><br><span class="line">salgrade s <span class="keyword">on</span>  t.avgsal <span class="keyword">between</span> s.losal <span class="keyword">and</span> s.hisal;</span><br><span class="line">..(<span class="keyword">select</span>).</span><br><span class="line"><span class="keyword">where</span>  </span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> emp <span class="keyword">where</span> sal <span class="operator">&gt;</span> (<span class="keyword">select</span> <span class="built_in">avg</span>(sal) <span class="keyword">from</span> emp);</span><br><span class="line">..(<span class="keyword">select</span>).</span><br><span class="line"></span><br><span class="line"> <span class="operator">/</span><span class="operator">/</span>语句中嵌入<span class="keyword">select</span>子句</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="8-11union"><a href="#8-11union" class="headerlink" title="8.11union"></a>8.11union</h2><blockquote><p>（可以将查询结果集相加）</p></blockquote><p>将两张表整合在一起：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ename <span class="keyword">from</span> emp <span class="keyword">where</span> 条件一</span><br><span class="line"><span class="keyword">union</span> </span><br><span class="line"><span class="keyword">select</span> dname <span class="keyword">from</span> dept <span class="keyword">where</span> 条件二</span><br></pre></td></tr></table></figure><p><em>//拼接的数据必须两两相对应。不能一张表是一个数据，另一张表是两个数据，这样无法拼接！</em></p><h2 id="8-12limit"><a href="#8-12limit" class="headerlink" title="8.12limit"></a>8.12limit</h2><blockquote><p>(取出结果集中的部分数据)</p></blockquote><p>limit startindex length</p><p>startindex表示起始位置，从0开始，0表示第一条数据</p><p>length表示取几个</p><p>limit执行的顺序是最后一个</p><h1 id="九-mysql函数"><a href="#九-mysql函数" class="headerlink" title="九.mysql函数"></a>九.mysql函数</h1><h2 id="9-1数学函数"><a href="#9-1数学函数" class="headerlink" title="9.1数学函数"></a>9.1数学函数</h2><blockquote><p>abs（）绝对值函数</p><p>round（）取整函数</p><p>sqrt（）求平方根函数</p><p>rand（）随机数函数</p><p>floor（）取最大整数函数</p><p>PI() 返回圆周率的值</p><p>truncate（x，d）四舍五入函数 返回被舍去至小数点后d位的数字x</p><p>greatset（x1，x2，x3）返回参数中的最大值 </p><p>least（）返回参数中最小值函数</p><p>bin（x）返回参数x的二进制值</p><p>otc（x）返回参数x的八进制值</p><p>hex（x）返回参数x的十六进制值</p></blockquote><h2 id="9-2聚合函数"><a href="#9-2聚合函数" class="headerlink" title="9.2聚合函数"></a>9.2聚合函数</h2><blockquote><p>sum（）求和函数</p><p>avg（）平均值函数</p><p>count（）数量函数</p><p>max（）用来计算表中满足条件的数的最大值</p><p>min（）用来计算表中满足条件的数的最小值</p></blockquote><h2 id="9-3字符串函数"><a href="#9-3字符串函数" class="headerlink" title="9.3字符串函数"></a>9.3字符串函数</h2><blockquote><p>char_length() </p><p>concat(str1,str2…)返回的是连接参数产生的字符串，如有一个值为null，则结果为null</p><p>repeat（str，count）返回一个由重复的字符串str组成的字符串</p><p>find_in_set(str,strlist)返回str在strlist中的位置值</p><p>locate(substr.str) 返回str中子字符串第一次出现的位置</p><p>instr（str，substr）返回字符串str中子字符串substr的第一个出现位置</p><p>left（str，len）返回字符串str最左侧len个字符</p><p>right（str，len）返回字符串str最右侧的len个字符</p><p>中间截取函数：</p></blockquote><h1 id="十-存储引擎"><a href="#十-存储引擎" class="headerlink" title="十.存储引擎"></a>十.存储引擎</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span>  t_x (</span><br><span class="line"></span><br><span class="line">   id <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span></span><br><span class="line"></span><br><span class="line">   ) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8; </span><br><span class="line"></span><br><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;storage_engine%&#x27;</span>; <span class="operator">/</span><span class="operator">/</span>查询默认的存储引擎 </span><br><span class="line">在创建一个表的时候可以指定表使用的存储引擎以及字符编码的方式。</span><br></pre></td></tr></table></figure><h2 id="10-1常见的存储引擎"><a href="#10-1常见的存储引擎" class="headerlink" title="10.1常见的存储引擎"></a>10.1常见的存储引擎</h2><h3 id="10-1-1MyISAM"><a href="#10-1-1MyISAM" class="headerlink" title="10.1.1MyISAM"></a>10.1.1MyISAM</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Engine: MyISAM</span><br><span class="line"></span><br><span class="line">   Support: YES</span><br><span class="line"></span><br><span class="line">   Comment: MyISAM storage engine</span><br><span class="line"></span><br><span class="line">   Transactions: NO</span><br><span class="line"></span><br><span class="line"> XA: NO</span><br><span class="line"></span><br><span class="line"> Savepoints: NO</span><br></pre></td></tr></table></figure><blockquote><p>1）不支持事务</p><p>2）是mysql最常用的存储引擎，但是不是默认的，默认的是（InnoDB）</p><p>​      <a href="https://so.csdn.net/so/search?q=Mysql&spm=1001.2101.3001.7020">Mysql</a>在V5.1之前默认存储引擎是MyISAM；在此之后默认存储引擎是InnoDB</p><p>3）MyISAM采用三个文件组织一个表：</p><p>xxx.frm(存储格式的文件)</p><p>xxx.MYD(存储表中数据的文件)</p><p>xxx.MYI(存储表中索引的文件)</p><p>索引文件和数据文件是分开的,B+tree中存储的是索引所在行的磁盘地址</p><p>R-tree 索引（空间索引）：空间索引是MyISAM引擎的一个特殊索引类型，主要用于地理空间数据类型，通常使用较少，不做特别介绍。<br>Full-text （全文索引） ：全文索引也是MyISAM的一个特殊索引类型，主要用于全文索引，InnoDB从Mysql5.6版本开始支持全文索引。</p><p>优点：可被压缩，节省存储空间。并且可以转换为只读表，提高检索效率。</p><p>缺点:不支持事务的完整性和并发性。</p></blockquote><h3 id="10-1-2InnoDB"><a href="#10-1-2InnoDB" class="headerlink" title="10.1.2InnoDB"></a>10.1.2InnoDB</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Engine: InnoDB</span><br><span class="line"></span><br><span class="line">   Support: DEFAULT</span><br><span class="line"></span><br><span class="line">   Comment: Supports transactions, row-level locking, and foreign keys</span><br><span class="line"></span><br><span class="line">   Transactions: YES</span><br><span class="line"></span><br><span class="line">   XA: YES</span><br><span class="line"></span><br><span class="line">   Savepoints: YES</span><br></pre></td></tr></table></figure><blockquote><p>优点：支持事务、行级锁、外键等。这种存储引擎数据的安全得到保障。</p><p>​    支持自动增长列auto-increment;(须为主键)</p><p>​    优点：良好的事务管理,崩溃修复能力和并发控制.InoDB支持级联删除和级联更新。</p><p>​    缺点：读写效率稍差，占用的数据空间比较大。</p><p>​    表的结构存储在xxx.frm文件中</p><p>​    数据存储在tablespace这样的表空间中(逻辑概念)，无法被压缩，无法转换成只读。</p><pre><code>在表上定义主键PRIMARY KEY，InnoDB将主键索引用作聚簇索引。如果表没有定义主键，InnoDB会选择第一个不为NULL的唯一索引列用作聚簇索引。如果以上两个都没有，InnoDB 会使用一个6 字节长整型的隐式字段 ROWID字段构建聚簇索引。该ROWID字段会在插入新行时自动递增</code></pre></blockquote><h3 id="10-1-3MEMORY"><a href="#10-1-3MEMORY" class="headerlink" title="10.1.3MEMORY"></a>10.1.3MEMORY</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Engine: MEMORY</span><br><span class="line"></span><br><span class="line">   Support: YES</span><br><span class="line"></span><br><span class="line">   Comment: Hash based, stored <span class="keyword">in</span> memory, useful <span class="keyword">for</span> temporary tables</span><br><span class="line"></span><br><span class="line">   Transactions: <span class="keyword">NO</span></span><br><span class="line"></span><br><span class="line">   XA: <span class="keyword">NO</span></span><br><span class="line"></span><br><span class="line">   Savepoints: <span class="keyword">NO</span></span><br></pre></td></tr></table></figure><blockquote><p>  缺点：不支持事务。数据容易丢失。因为所有数据和索引都是存储在内存当中的。</p><p>  优点：查询速度最快。</p><p>  以前叫做HEPA引擎。</p><ul><li>HASH 索引：只有Memory引擎支持 ， 使用场景简单 。</li></ul></blockquote><h1 id="十一-事务"><a href="#十一-事务" class="headerlink" title="十一.事务"></a>十一.事务</h1><p>事务是指满足ACID特性（指数据库管理系统在写入或更新资料的过程中，为保证事务是正确可靠的，所必须具备的四个特性：原子性，一致性，隔离性，持久性）的一组操作，可以通过Commit提交一个事务，也可以使用Rollback进行回滚。</p><p>一个事务是一个完整的业务逻辑单元，不可再分。</p><p>事务的存在是为了保证数据的完整性，安全性。</p><h2 id="11-1事务的特性"><a href="#11-1事务的特性" class="headerlink" title="11.1事务的特性"></a>11.1事务的特性</h2><p>​    原子性：事务是最小的工作单元，不可再分。</p><p>​                    回滚可以使用回滚日志来实现，回滚日志记录着事务所执行的修改操作，再回滚时反向执行这些修改操作即可。</p><p>​    一致性：事务必须保证多条DML语句同时成功或者同时失败。</p><p>​    隔离性：事务A和事务B之间具有隔离。</p><p>​    持久性：最终数据必须持久化到硬盘中，事务才算成功结束。</p><p>​                    一旦事务提交，则其所做的修改会永远保存到数据库中，即使系统发生崩溃，事务执行的结果也不能丢失。</p><h4 id="AUTOCOMMIT"><a href="#AUTOCOMMIT" class="headerlink" title="AUTOCOMMIT"></a>AUTOCOMMIT</h4><p>mysql默认采用自动提交模式。也就是说，日过不显式使用START TRANSACTION 语句来开始一个事务，那么每个查询操作都会当作一个事务并自动提交。</p><h2 id="11-2事务的隔离级别"><a href="#11-2事务的隔离级别" class="headerlink" title="11.2事务的隔离级别"></a>11.2事务的隔离级别</h2><p>1）读未提交（read uncommitted）</p><p>​    对方事务还没有提交，我们当前事务可以读取到对方未提交的数据。</p><p>​    读未提交（当前事务可以读到另外事务未提交的数据）存在脏读现象：表示读到了脏数据。</p><p>2）读已提交（read committed）</p><p>​    对方事务提交之后的数据我方可以读取到。</p><p>​    一个事务只能读取已经提交的事务所做的修改,换句话说,一个事务所做的修改在提交之前对其他事务是不可见的.</p><p>​    读已提交存在的问题是：不可重复读。</p><p>3）可重复读（repeatable read）</p><p>​    解决了：不可重复读的问题。</p><p>​    问题：读取到的数据是幻象。</p><p>4）序列化读/串行化读</p><p>​    强制所有事务串行执行.读个事务不会干扰.不会出现并发一致性问题.</p><p>​    需要加锁,效率低，需要事务排队。</p><p>​    解决了所有的问题。</p><p>commit：提交</p><p>rollback：回滚</p><p>start transaction：关闭自动提交机制</p><blockquote><p>mysql可以远程登录：mysql -h主机号 -uroot -pyourpassword</p></blockquote><h1 id="十二-索引和视图"><a href="#十二-索引和视图" class="headerlink" title="十二.索引和视图"></a>十二.索引和视图</h1><p>索引相当于一本书的目录，通过目录可以快速的找到对应的资源。</p><p>查询一张表是的方法：</p><p>​    全表扫描：</p><p>​    根据索引检索：</p><p>创建索引对象：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index 索引名称 <span class="keyword">on</span> 表名（字段名）；</span><br><span class="line">删除索引:</span><br><span class="line"><span class="keyword">drop</span> index 索引对象 <span class="keyword">on</span> 表名；</span><br><span class="line"></span><br><span class="line">查看索引:</span><br><span class="line"><span class="keyword">show</span> index <span class="keyword">from</span> table_name</span><br><span class="line"><span class="number">1</span>). <span class="keyword">alter</span> <span class="keyword">table</span> tb_name <span class="keyword">add</span> <span class="keyword">primary</span> key(column_list); </span><br><span class="line"> </span><br><span class="line">该语句添加一个主键，这意味着索引值必须是唯一的，且不能为<span class="keyword">NULL</span></span><br><span class="line"> </span><br><span class="line"><span class="number">2</span>). <span class="keyword">alter</span> <span class="keyword">table</span> tb_name <span class="keyword">add</span> <span class="keyword">unique</span> index_name(column_list);</span><br><span class="line"> </span><br><span class="line">这条语句创建索引的值必须是唯一的（除了<span class="keyword">NULL</span>外，<span class="keyword">NULL</span>可能会出现多次）</span><br><span class="line"> </span><br><span class="line"><span class="number">3</span>). <span class="keyword">alter</span> <span class="keyword">table</span> tb_name <span class="keyword">add</span> index index_name(column_list); </span><br><span class="line"> </span><br><span class="line">添加普通索引， 索引值可以出现多次。</span><br><span class="line"> </span><br><span class="line"><span class="number">4</span>). <span class="keyword">alter</span> <span class="keyword">table</span> tb_name <span class="keyword">add</span> fulltext index_name(column_list);</span><br><span class="line"> </span><br><span class="line">该语句指定了索引为FULLTEXT， 用于全文索引</span><br></pre></td></tr></table></figure><p>什么时候添加索引：</p><p>​    1）数据量庞大</p><p>​    2）该字段很少DML操作</p><p>​    3）该字段经常出现在where子句中</p><blockquote><p>主键具有unique约束的字段会被自动添加索引</p><p>根据主键索引的效率较高，尽量根据主键进行索引</p></blockquote><p>索引的结构</p><p>Btree索引</p><p>最常见的索引</p><p> BTree又叫多路平衡搜索树，一颗 m 叉的 BTree 特性如下：<br>    树中每个节点最多包含m个孩子。<br>    除根节点与叶子节点外，每个节点至少有[ceil(m/2)]个孩子。<br>    若根节点不是叶子节点，则至少有两个孩子。<br>    所有的叶子节点都在同一层。<br>    每个非叶子节点由n个key与n+1个指针组成，其中[ceil(m/2)-1] &lt;= n &lt;= m-1</p><p> 2、B+TREE 结构<br>B+Tree为 BTree 的变种， B+Tree 与 BTree 的区别为：<br>    n叉B+Tree最多含有n个key，而BTree最多含有n-1个key。<br>    B+Tree的叶子节点保存所有的key信息，依key大小顺序排列。<br>    所有的非叶子节点都可以看作是key的索引部分。</p><h2 id="12-1索引的分类"><a href="#12-1索引的分类" class="headerlink" title="12.1索引的分类"></a>12.1索引的分类</h2><p>​    单一索引：给单个字段添加索引</p><p>​    复合索引：给多个字段联合起来添加一个索引</p><p>​    主键索引：主键上会自动添加索引</p><p>​    唯一索引：有unique约束的字段会自动添加索引</p><p>​    ……</p><blockquote><p>模糊查询的时候，第一个通配符使用的是%，这个时候索引是是失效的。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">建立索引：</span><br><span class="line"><span class="keyword">CREATE</span> [<span class="keyword">UNIQUE</span>] [CLUSTER] INDEX <span class="operator">&lt;</span>索引名<span class="operator">&gt;</span>     <span class="keyword">ON</span> <span class="operator">&lt;</span>表名<span class="operator">&gt;</span>(<span class="operator">&lt;</span>列名<span class="operator">&gt;</span>[<span class="operator">&lt;</span>次序<span class="operator">&gt;</span>][,<span class="operator">&lt;</span>列名<span class="operator">&gt;</span>[<span class="operator">&lt;</span>次序<span class="operator">&gt;</span>] ]…)；</span><br><span class="line">用<span class="operator">&lt;</span>表名<span class="operator">&gt;</span>指定要建索引的基本表名字</span><br><span class="line">索引可以建立在该表的一列或多列上，各列名之间用逗号分隔</span><br><span class="line">用<span class="operator">&lt;</span>次序<span class="operator">&gt;</span>指定索引值的排列次序，升序：<span class="keyword">ASC</span>，降序：<span class="keyword">DESC</span>。缺省值：<span class="keyword">ASC</span></span><br><span class="line"><span class="keyword">UNIQUE</span>表明此索引的每一个索引值只对应唯一的数据记录</span><br><span class="line">CLUSTER表示要建立的索引是聚簇索引</span><br><span class="line">删除索引：</span><br><span class="line"><span class="keyword">drop</span> index 索引名</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="12-2视图"><a href="#12-2视图" class="headerlink" title="12.2视图"></a>12.2视图</h2><blockquote><p>站在不同的角度去看到数据。(同一张表的数据，通过不同的角度去看待)</p><p>视图(VIEW)也被称作虚表，即虚拟的表</p><p>子模式:外模式</p><p>常见的规则:</p><p>​    视图可以嵌套，即可以使用基于其它视图的查询构造新视图（但应该尽量避免，会降低性能）</p><p>​    在MySQL中，ORDER BY可以用在视图中，但如果使用该视图的SELECT语句中也含有ORDER BY，那么该视图中的ORDER BY会被覆盖；</p><p>​    视图不能索引，也不能有关联的触发器和默认值；</p><p>​    视图可以和表一起使用</p><p>视图的特点：</p><p>​    是从一个或者几个基本表（视图）中导出的表</p><p>​    只存放视图的定义，不存放视图对应的数据</p><p>​    基表中的数据发生变化，从视图中查询出的数据也会随之改变。</p><p>优点:简化了复杂的查询</p><p>​        限制对特定用户的数据访问</p><p>​        提供额外的安全层</p><p>​        启用计算列</p><p>​        实现向后兼容</p></blockquote><p>创建视图：</p><p>首先需要查看创建视图的权限:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> select_priv,Create_view_priv <span class="keyword">from</span> mysql.user <span class="keyword">where</span> <span class="keyword">user</span><span class="operator">=</span><span class="string">&#x27;用户名&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">RDBMS执行<span class="keyword">CREATE</span> <span class="keyword">VIEW</span>语句时只是把视图的定义存入数据字典，并不执行其中的<span class="keyword">SELECT</span>语句。</span><br><span class="line">在对视图查询时，按视图的定义从基本表中将数据查出。</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> vst </span><br><span class="line"><span class="keyword">AS</span> </span><br><span class="line"><span class="keyword">SELECT</span> sno,sname,IDno </span><br><span class="line"><span class="keyword">FROM</span> student</span><br><span class="line"><span class="keyword">WHERE</span> sdept<span class="operator">=</span><span class="string">&#x27;IS&#x27;</span> <span class="keyword">and</span> ssex<span class="operator">=</span><span class="string">&#x27;男&#x27;</span></span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION;</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION:</span><br><span class="line">对视图进行UPDATE，<span class="keyword">INSERT</span>和<span class="keyword">DELETE</span>操作时要保证更新、插入或删除的行满足视图定义中的谓词条件（即子查询中的条件表达式）</span><br><span class="line">表示更新视图时要保证在该视图的权限范围之内</span><br><span class="line"></span><br><span class="line">删除视图:</span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> myview;</span><br><span class="line">如果该视图上还导出了其他视图，使用CASCADE级联删除语句，把该视图和由它导出的所有视图一起删除 </span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">VIEW</span> sf_S1 CASCADE;</span><br><span class="line"></span><br><span class="line">需要明确指定视图的所有列名:</span><br><span class="line">   (<span class="number">1</span>) 某个目标列是聚集函数 或 列表达式</span><br><span class="line">   (<span class="number">2</span>) 多表连接时选出了几个同名列作为视图的字段</span><br><span class="line">   (<span class="number">3</span>) 需要在视图中为某个列启用新的更合适的名字</span><br><span class="line">注意：只有DQL语句才能以试图对象的方式创建出来。</span><br><span class="line"></span><br><span class="line">查看视图的结构:<span class="keyword">desc</span> 视图名  </span><br><span class="line">查看视图的信息:<span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">like</span> <span class="string">&#x27;视图名&#x27;</span>;</span><br><span class="line">查看视图的详细定义: <span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">view</span> 视图名;</span><br></pre></td></tr></table></figure><p>对视图进行增删改查，会影响到原表数据。(通过视图影响原表数据，不是直接操作的原表)</p><h3 id="12-2-1视图的操作"><a href="#12-2-1视图的操作" class="headerlink" title="12.2.1视图的操作"></a>12.2.1视图的操作</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">修改视图:</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace [algorithm<span class="operator">=</span>&#123;undefined<span class="operator">|</span><span class="keyword">merge</span><span class="operator">|</span>temptable&#125;];</span><br><span class="line"><span class="keyword">view</span> 视图;</span><br><span class="line"><span class="keyword">as</span> <span class="keyword">select</span> 语句</span><br><span class="line">[<span class="keyword">with</span>[cascade<span class="operator">|</span><span class="keyword">local</span>]<span class="keyword">check</span> option];</span><br><span class="line"></span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">view</span>[&#123;algorithm<span class="operator">=</span>&#123;<span class="keyword">merge</span>,temptable<span class="operator">|</span>undefined&#125;&#125;]<span class="keyword">view</span> view_name [(column_list)] </span><br><span class="line"><span class="keyword">as</span> select_statement</span><br><span class="line">[<span class="keyword">with</span>[<span class="keyword">cascaded</span><span class="operator">|</span><span class="keyword">local</span>]<span class="keyword">check</span> option]</span><br><span class="line">视图数据的修改:</span><br><span class="line">update view_name <span class="keyword">set</span> <span class="comment">----- where条件</span></span><br><span class="line"></span><br><span class="line">DB2对视图更新的限制：</span><br><span class="line">(<span class="number">1</span>) 若视图是由两个以上基本表导出的，则此视图不允许更新。</span><br><span class="line">(<span class="number">2</span>) 若视图的字段来自字段表达式或常数，则不允许对此视图执行<span class="keyword">INSERT</span>和UPDATE操作，但允许执行<span class="keyword">DELETE</span>操作。</span><br><span class="line">(<span class="number">3</span>) 若视图的字段来自集函数，则此视图不允许更新。</span><br><span class="line">(<span class="number">4</span>) 若视图定义中含有<span class="keyword">GROUP</span> <span class="keyword">BY</span>子句，则此视图不允许更新。</span><br><span class="line">(<span class="number">5</span>) 若视图定义中含有<span class="keyword">DISTINCT</span>短语，则此视图不允许更新。</span><br><span class="line">(<span class="number">6</span>) 若视图定义中有嵌套查询，并且内层查询的<span class="keyword">FROM</span>子句中涉及的表也是导出该视图的基本表，则此视图不允许更新。</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>不能更改视图的情况:</p><p>​    1)视图中包含count(),sum(),max(),min()</p><p>​    2)视图中包含union,union all,</p><p>​    3)常量视图</p><p>​    4)视图中的select中包含子查询</p><p>​    5)由不可更新的视图导出的视图</p><p>​    6)创建视图时,algorithm为temptable类型</p></blockquote><p>可以对视图进行CRUD操作。</p><blockquote><p>视图可以隐藏表的实现细节。保密级别较高的系统，数据库只对外提供相关的视图。</p></blockquote><h1 id="DBA命令"><a href="#DBA命令" class="headerlink" title="DBA命令"></a>DBA命令</h1><p>在数据库当中的数据导出</p><blockquote><p> 在windows的DOS命令窗口中执行： (导出整个库)</p><p> mysqldump  数据库名&gt;D:\文件名.sql -uroot -p999</p><p>在windows的dos命令窗口中执行：(导出数据库中指定的表)</p><p>  mysqldump 数据库名 表名&gt;D:\文件名.sql -uroot -p999</p></blockquote><p><strong>导入数据</strong></p><blockquote><p>create database bjpowernode;</p><p>use bjpowernode;</p><p>source D:\bjpowernode.sql </p></blockquote><p>数据库设计三范式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">1.任何一张表都应该有主键</span><br><span class="line">2.建立在第一范式的基础上，所有的非主键字段完全依赖主键，不能产生部分依赖</span><br><span class="line">3.建立在第二范式的基础上，所有非主键字段直接依赖主键，不能产生传递依赖</span><br><span class="line"> 多对多？三张表，关系表两个外键。</span><br><span class="line"> 一对多？两张表，多的表加外键。</span><br><span class="line">  一对一设计:主键共享。</span><br><span class="line">  一对一设计:外键唯一。</span><br></pre></td></tr></table></figure><h1 id="十三-mysql内部存储过程与触发"><a href="#十三-mysql内部存储过程与触发" class="headerlink" title="十三.mysql内部存储过程与触发"></a>十三.mysql内部存储过程与触发</h1><h2 id="13-1相关知识"><a href="#13-1相关知识" class="headerlink" title="13.1相关知识"></a>13.1相关知识</h2><h3 id="13-1-1内部存储过程"><a href="#13-1-1内部存储过程" class="headerlink" title="13.1.1内部存储过程"></a>13.1.1内部存储过程</h3><p>存储过程是一组为了完成特定功能的sql语句集,经编译后存储在数据库中,用户通过指定存储过程的名字并给定参数来调用执行他.</p><h1 id="十四-锁"><a href="#十四-锁" class="headerlink" title="十四.锁"></a>十四.锁</h1><h2 id="14-1封锁粒度"><a href="#14-1封锁粒度" class="headerlink" title="14.1封锁粒度"></a>14.1封锁粒度</h2><p>mysql中提供了两种封锁粒度：行级锁以及表级锁。</p><p>应该尽量只锁定需要修改的那部分数据，而不是所有的资源。锁定的数据量越少，发生锁重用的可能就越小，系统的开销就越小，系统的并发程度就越高。</p><p>加锁需要消耗资源，锁的各种操作都会增加系统开销。因此<strong>封锁粒度越小</strong>，系统的开销就越大。</p><h2 id="14-2封锁类型"><a href="#14-2封锁类型" class="headerlink" title="14.2封锁类型"></a>14.2封锁类型</h2><h3 id="14-2-1读写锁"><a href="#14-2-1读写锁" class="headerlink" title="14.2.1读写锁"></a>14.2.1读写锁</h3><p>互斥锁（Exclusive）：简写为X锁，又称写锁。</p><p>共享锁（Shared）：简写为S锁，又称读锁。</p><h3 id="14-2-2意向锁"><a href="#14-2-2意向锁" class="headerlink" title="14.2.2意向锁"></a>14.2.2意向锁</h3><p>使用意向锁可以更容易的支持多粒度封锁。</p><p>在存在行级锁和表级锁的情况下，事务 T 想要对表 A 加 X 锁，就需要先检测是否有其它事务对表 A 或者表 A 中的任意一行加了锁，那么就需要对表 A 的每一行都检测一次，这是非常耗时的。</p><p>意向锁在原来的 X/S 锁之上引入了 IX/IS，IX/IS 都是表锁，用来表示一个事务想要在表中的某个数据行上加 X 锁或 S 锁。有以下两个规定：</p><blockquote><ul><li>一个事务在获得某个数据行对象的 S 锁之前，必须先获得表的 IS 锁或者更强的锁；</li><li>一个事务在获得某个数据行对象的 X 锁之前，必须先获得表的 IX 锁。</li></ul></blockquote><p>通过引入意向锁，事务 T 想要对表 A 加 X 锁，只需要先检测是否有其它事务对表 A 加了 X/IX/S/IS 锁，如果加了就表示有其它事务正在使用这个表或者表中某一行的锁，因此事务 T 加 X 锁失败。</p><p>SIX锁:对某个表加SIX锁，则表示该事务要读整个表（所以要对该表加S锁），同时会更新个别元组（所以要对该表加IX锁）</p><p><img src="/.com//blog\source_posts\image-20220418122203742.png" alt="image-20220418122203742"></p><h2 id="14-3封锁协议"><a href="#14-3封锁协议" class="headerlink" title="14.3封锁协议"></a>14.3封锁协议</h2><h3 id="14-3-1三界封锁协议"><a href="#14-3-1三界封锁协议" class="headerlink" title="14.3.1三界封锁协议"></a>14.3.1三界封锁协议</h3><h4 id="14-3-1-1一级封锁协议"><a href="#14-3-1-1一级封锁协议" class="headerlink" title="14.3.1.1一级封锁协议"></a>14.3.1.1一级封锁协议</h4><p>事务T要修改数据A时必须加X锁，直到T结束才释放锁。</p><p>可以解决丢失修改的问题，因为不能同时有两个事务对同一个数据进行修改，那么事务的修改就不会被覆盖。</p><h4 id="14-3-1-2二级封锁协议"><a href="#14-3-1-2二级封锁协议" class="headerlink" title="14.3.1.2二级封锁协议"></a>14.3.1.2二级封锁协议</h4><p>在一级的基础上，要求读取数据A时必须加S锁，读取完马上释放S锁。</p><p>可以解决读脏数据问题，如果一个事务在对数据A进行修改，根据1级封锁协议，会加X锁，那么就不能再加S锁了，也就是不会读入数据。</p><h4 id="14-3-1-3三级封锁协议"><a href="#14-3-1-3三级封锁协议" class="headerlink" title="14.3.1.3三级封锁协议"></a>14.3.1.3三级封锁协议</h4><p>在二级的基础上,要求读取数据A时必须加S锁,直到事务结束了才能释放S锁;</p><p>可以解决不可重复读的问题，因为读 A 时，其它事务不能对 A 加 X 锁，从而避免了在读的期间数据发生改变。</p><h3 id="14-3-2-两段锁协议"><a href="#14-3-2-两段锁协议" class="headerlink" title="14.3.2 两段锁协议"></a>14.3.2 两段锁协议</h3><p>加锁和解锁分为两个阶段进行.</p><p>可串行化调度:通过并发控制,是的并行执行的事务结果与某个串行执行的事务结果相同.串行执行的事务互不干扰,不会出现并发一致性问题.</p><p>事务遵循两段锁协议是保证可串行化调度的充分条件.</p><h1 id="十五-多版本并发控制"><a href="#十五-多版本并发控制" class="headerlink" title="十五 多版本并发控制"></a>十五 多版本并发控制</h1><p>多版本并发控制（Multi-Version Concurrency Control, MVCC）是 MySQL 的 InnoDB 存储引擎实现隔离级别的一种具体方式，用于实现提交读和可重复读这两种隔离级别。而未提交读隔离级别总是读取最新的数据行，要求很低，无需使用 MVCC。可串行化隔离级别需要对所有读取的行都加锁，单纯使用 MVCC 无法实现。</p><h2 id><a href="#" class="headerlink" title></a></h2><h1 id="数据库的卸载"><a href="#数据库的卸载" class="headerlink" title="数据库的卸载"></a>数据库的卸载</h1><blockquote><p>1.卸载软件</p><p>2.programData文件夹</p><p>3.数据库目录</p></blockquote><h1 id="十六-数据完整性和安全性"><a href="#十六-数据完整性和安全性" class="headerlink" title="十六. 数据完整性和安全性"></a>十六. 数据完整性和安全性</h1><h2 id="16-1数据完整性约束"><a href="#16-1数据完整性约束" class="headerlink" title="16.1数据完整性约束"></a>16.1数据完整性约束</h2><h3 id="16-1-1实体完整性约束"><a href="#16-1-1实体完整性约束" class="headerlink" title="16.1.1实体完整性约束"></a>16.1.1实体完整性约束</h3><blockquote><p>1.主键约束:</p><p>​        每个表只能定义<strong>一个</strong>主键</p><p>​        唯一性约束</p><p>​        最小化规则</p><p>​        一个列名在复合主键的列表中只能出现一次</p><p>​            1)作为列的完整性约束</p><p>​            2)作为表的完整性约束</p><p>2.候选键约束:</p><p>​        一个表只能创建一个主键,但是可以定义若干个候选键</p><p>​        定义主键约束时,系统会自动创建primary key索引,</p><p>而定义候选键约束时,系统会自动创建unique索引</p></blockquote><h3 id="16-1-2参照完整性"><a href="#16-1-2参照完整性" class="headerlink" title="16.1.2参照完整性"></a>16.1.2参照完整性</h3><blockquote><p>若属性f是基本关系R的外码,它与基本关系S的主键K相对应,则对于R中的每个属性F只允许有两个可能,要么取空值,要么等于S中某个元组的主键值.</p><p>被参考的表要么是已经存在的表,或者是当前正在创建的表,也就是说,参考表和被参考表是同一个表,这样的表称为自参考表,这种结构被称为自参考完整性.</p></blockquote><h3 id="16-1-3用户定义完整性"><a href="#16-1-3用户定义完整性" class="headerlink" title="16.1.3用户定义完整性"></a>16.1.3用户定义完整性</h3><blockquote><p>1.非空约束:</p><p>​    not null;</p><p>2.check约束:</p><p>​    check(expr)</p></blockquote><h2 id="16-2数据库的安全性"><a href="#16-2数据库的安全性" class="headerlink" title="16.2数据库的安全性"></a>16.2数据库的安全性</h2><blockquote><p><strong>数据库的安全性</strong></p><p><strong>数据库的安全是指DBMS能够保证DB免受非法,非授权用户的使用,泄露,更改或者破坏的机制和手段.</strong></p></blockquote><h3 id="16-2-1用户身份鉴别"><a href="#16-2-1用户身份鉴别" class="headerlink" title="16.2.1用户身份鉴别"></a>16.2.1用户身份鉴别</h3><p> 静态口令鉴别<br> 动态口令鉴别<br> 生物特征鉴别<br> 智能卡鉴别</p><h3 id="16-2-2存取控制"><a href="#16-2-2存取控制" class="headerlink" title="16.2.2存取控制"></a>16.2.2存取控制</h3><table><thead><tr><th>对象</th><th>操作类型</th></tr></thead><tbody><tr><td>模式</td><td>CREATE SCHEMA</td></tr><tr><td>基本表</td><td>CREATE table ALTER table</td></tr><tr><td>视图</td><td>CREATE VIEW</td></tr><tr><td>索引</td><td>CREATE INDEX</td></tr><tr><td>数据</td><td>SELELCT INSERT UODATE DELETE REFERENCES ALL PRIVILEGES</td></tr></tbody></table><h4 id="16-2-2-1自主存取控制-DAC-discretionary-access-control"><a href="#16-2-2-1自主存取控制-DAC-discretionary-access-control" class="headerlink" title="16.2.2.1自主存取控制(DAC discretionary access control)"></a>16.2.2.1自主存取控制(DAC discretionary access control)</h4><p>GRANT：授予用户对数据的操作权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> 权限</span><br><span class="line"><span class="keyword">ON</span> 对象类型 对象名</span><br><span class="line"><span class="keyword">TO</span> 用户</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION:获得该权限的用户可以将该权限授予其他用户</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> SC</span><br><span class="line"><span class="keyword">TO</span> U1</span><br><span class="line"><span class="keyword">WITH</span> <span class="keyword">GRANT</span> OPTION;</span><br></pre></td></tr></table></figure><p>REVOKE 收回用户对于数据的操作权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">ON</span> <span class="keyword">TABLE</span> SC</span><br><span class="line"><span class="keyword">FROM</span> U1</span><br><span class="line">CASCADE <span class="operator">|</span> RESTRICT</span><br><span class="line">CASCADE ：级联，收回具有权限传递的所有用户</span><br><span class="line">RESTRICT：受限制的回收</span><br></pre></td></tr></table></figure><p>数据库角色</p><blockquote><p>数据库的角色可以简化授权的操作，<strong>角色是权限的集合</strong></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">角色的创建：</span><br><span class="line">Create ROLE 角色名</span><br><span class="line">角色授权：</span><br><span class="line">GRANT 权限</span><br><span class="line">ON 对象类型 对象名</span><br><span class="line">TO 角色</span><br><span class="line">将一个角色授予其他的角色</span><br><span class="line">GRANT 角色</span><br><span class="line">TO 角色</span><br><span class="line">WITH ADMIN OPTION </span><br><span class="line">WITH ADMIN OPTION ：可以传递角色权限</span><br><span class="line">角色权限的收回</span><br><span class="line">REVOKE 权限</span><br><span class="line">ON 对象类型 对象名</span><br><span class="line">FROM 角色</span><br></pre></td></tr></table></figure><h4 id="16-2-2-2强制存取控制-MAC-mandatory-access-control"><a href="#16-2-2-2强制存取控制-MAC-mandatory-access-control" class="headerlink" title="16.2.2.2强制存取控制(MAC mandatory access control)"></a>16.2.2.2强制存取控制(MAC mandatory access control)</h4><h3 id="16-3视图机制"><a href="#16-3视图机制" class="headerlink" title="16.3视图机制"></a>16.3视图机制</h3><p>对数据对象进行安全性分级：绝密（Top Secret） 机密（Secret） 可信（confidential） 无分类（unclassified）</p><p>推断控制机制</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#授权命令</span><br><span class="line"><span class="keyword">grant</span> &#123;<span class="keyword">all</span> privileges<span class="operator">|</span>privilege&#123;,privilege...&#125;&#125;</span><br><span class="line"><span class="keyword">on</span> [<span class="keyword">table</span>] tablename<span class="operator">|</span>viewname</span><br><span class="line"><span class="keyword">to</span> &#123;public<span class="operator">|</span><span class="keyword">user</span><span class="operator">-</span>id&#123;,<span class="keyword">user</span><span class="operator">-</span>id...&#125;&#125;</span><br><span class="line">[<span class="keyword">with</span> <span class="keyword">grant</span> option]</span><br><span class="line"></span><br><span class="line">#收回授权命令：</span><br><span class="line"><span class="keyword">REVOKE</span> &#123;<span class="keyword">all</span> privilEges <span class="operator">|</span> priv &#123;, priv…&#125; &#125; </span><br><span class="line"><span class="keyword">ON</span> tablename <span class="operator">|</span> viewname</span><br><span class="line"><span class="keyword">FROM</span> &#123;public <span class="operator">|</span> <span class="keyword">user</span> &#123;, <span class="keyword">user</span>…&#125; &#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>视图</p><p>审计：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">AUDIT <span class="keyword">ALTER</span>,UPDATE <span class="keyword">on</span> SC;</span><br><span class="line">NOAUDIT<span class="keyword">ALTER</span>,UPDATE  <span class="keyword">ON</span> SC;</span><br></pre></td></tr></table></figure><p>数据加密</p><p>自主访问控制:</p><p>grant select:</p><p>强制安全性机制:</p><p>绝密(top secret),机密(secret),可信(confirm)</p><p>审计:</p><p>audit  </p><p>用户级审计</p><p>系统级审计</p><h1 id="十七-数据的恢复-database-recovery"><a href="#十七-数据的恢复-database-recovery" class="headerlink" title="十七.数据的恢复(database recovery)"></a>十七.数据的恢复(database recovery)</h1><h2 id="事务故障-回滚"><a href="#事务故障-回滚" class="headerlink" title="事务故障(回滚)"></a>事务故障(回滚)</h2><p>逻辑故障</p><p><img src="/.com//blog\source_posts\image-20220421104817233.png" alt="image-20220421104817233"></p><p>系统的故障</p><p><img src="/.com//blog\source_posts\image-20220421104831205.png" alt="image-20220421104831205"></p><p>事务故障的恢复:运用日志文件 (undo操作)</p><p><img src="/.com//blog\source_posts\image-20220421112304218.png" alt="image-20220421112304218"></p><h2 id="系统故障-system-crash"><a href="#系统故障-system-crash" class="headerlink" title="系统故障(system crash)"></a>系统故障(system crash)</h2><p><img src="/.com//blog\source_posts\image-20220421105141015.png" alt="image-20220421105141015"></p><h2 id="磁盘的故障-disk-failure"><a href="#磁盘的故障-disk-failure" class="headerlink" title="磁盘的故障(disk failure)"></a>磁盘的故障(disk failure)</h2><p><img src="/.com//blog\source_posts\image-20220421105438983.png" alt="image-20220421105438983"></p><p>保持一致性,原子性,持久性</p><p><img src="/.com//blog\source_posts\image-20220421112636142.png" alt="image-20220421112636142"></p><h2 id="备份-dump"><a href="#备份-dump" class="headerlink" title="备份(dump)"></a>备份(dump)</h2><p>转储是指DBA将整个数据库复制到磁带或另一个磁盘上保存起来的过程。</p><p><img src="/.com//blog\source_posts\image-20220421110001528.png" alt="image-20220421110001528"></p><p>静态转储</p><p>在系统中没有事务的时候进行备份,备份开始的时候数据库处于一致性状态</p><p>缺点:降低了数据库的可用性</p><p><img src="/.com//blog\source_posts\image-20220421110725052.png" alt="image-20220421110725052"></p><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><p><img src="/.com//blog\source_posts\image-20220421111130195.png" alt="image-20220421111130195"></p><p>日志文件的内容</p><p><img src="/.com//blog\source_posts\image-20220421111204650.png" alt="image-20220421111204650"></p><p><img src="/.com//blog\source_posts\image-20220421120416508.png" alt="image-20220421120416508"></p><p>选d</p><p><img src="/.com//blog\source_posts\image-20220421120725670.png"></p><p>关系代数的执行结果</p><p>模式：</p><blockquote><p>cascade和restrict两者必须选择一个，选择了级联删除，表示在删除的时候同时把这个模式中的所有的数据库的对象全部删除，选择了限制删除，如果该模式下，已经定义了下属的数据库对象，则拒绝删除语句的执行，只有当该模式中没有任何 的下属的对象时才可以执行drop schema语句</p></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入了解JVM</title>
      <link href="/2021/11/22/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3JVM/"/>
      <url>/2021/11/22/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3JVM/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理之存储器</title>
      <link href="/2021/11/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E5%AD%98%E5%82%A8%E5%99%A8/"/>
      <url>/2021/11/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E5%AD%98%E5%82%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一、存储器："><a href="#一、存储器：" class="headerlink" title="一、存储器："></a>一、存储器：</h1><h2 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h2><h3 id="根据存储介质分类："><a href="#根据存储介质分类：" class="headerlink" title="根据存储介质分类："></a>根据存储介质分类：</h3><pre><code>    1.半导体存储器    2.磁表面存储器    3.磁芯存储器    4.光盘存储器</code></pre><h3 id="根据存取的方式进行分类："><a href="#根据存取的方式进行分类：" class="headerlink" title="根据存取的方式进行分类："></a>根据存取的方式进行分类：</h3><pre><code>    1.随机存储器 RAM    2.只读存储器 ROM    3.串行访问存储器</code></pre><h3 id="根据在计算机中的作用分类："><a href="#根据在计算机中的作用分类：" class="headerlink" title="根据在计算机中的作用分类："></a>根据在计算机中的作用分类：</h3><pre><code>    1.主存储器：    2.辅助存储器     3.缓冲存储器</code></pre><h2 id="存储器的基本结构结构："><a href="#存储器的基本结构结构：" class="headerlink" title="存储器的基本结构结构："></a>存储器的基本结构结构：</h2><pre><code>存储器包括存储的部分以及选址的部分，同时可以控制对于存储器的读或者写不同的操作。地址线：用来选址的信号传输线。片选线（用于容量的扩容）、读写控制线（WE）、数据线。</code></pre><p><strong><em>存储器的总容量=存储单元*存储字长</em></strong></p><h2 id="主存储器（主要由RAM和ROM构成）："><a href="#主存储器（主要由RAM和ROM构成）：" class="headerlink" title="主存储器（主要由RAM和ROM构成）："></a>主存储器（主要由RAM和ROM构成）：</h2><pre><code>1.地址寄存器2.数据寄存器3.存储体：存储元组成存储单元，多个存储单元构成存储体    译码器：有2**n个存储单元</code></pre><h3 id="RAM："><a href="#RAM：" class="headerlink" title="RAM："></a>RAM：</h3><pre><code>1.SRAM（静态）：触发器（常用作cache）2.DRAM（动态随机存储器）：电容（常用作主存）    刷新：1）分散刷新 2）集中刷新 3）异步刷新 。（死区的概念）</code></pre><h1 id="存储器的性能指标："><a href="#存储器的性能指标：" class="headerlink" title="存储器的性能指标："></a>存储器的性能指标：</h1><pre><code>1.存储容量： 存储字数*存储字长2.单位成本： 每位价格=总成本/总容量3.存储速度：数据传输率=数据的宽度/存储周期</code></pre><h1 id="主存与CPU的连接："><a href="#主存与CPU的连接：" class="headerlink" title="主存与CPU的连接："></a>主存与CPU的连接：</h1><pre><code>    1.容量拓展：*_使能信号_*(低电平有效)    字拓展：1）译码片选法 2)线选法 n条线对应n个选片信号    位拓展：    字和位同时拓展（选择芯片）</code></pre><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><pre><code>系统程序区用ROM用户程序区用RAM执行区都用RAM</code></pre><h1 id="高速缓冲存储器："><a href="#高速缓冲存储器：" class="headerlink" title="高速缓冲存储器："></a>高速缓冲存储器：</h1><pre><code>1.命中率：是指cpu要访问的信息已在cache中的比率h=Nc/(Nc+Nm)2.访问效率：e=tc/ta*100% ta是指平均访问时间</code></pre><h2 id="1-cache地址映射："><a href="#1-cache地址映射：" class="headerlink" title="1.cache地址映射："></a>1.cache地址映射：</h2><pre><code>1.全相连映射2.组相联映射（其余两者的折中）3.直接映射</code></pre><h2 id="2-替换算法："><a href="#2-替换算法：" class="headerlink" title="2.替换算法："></a>2.替换算法：</h2><pre><code>1.RAND（随机）2.FIFO（先进先出）3.LRU （最近最少使用）4.LFU  （不经常使用）</code></pre><h2 id="3-写策略："><a href="#3-写策略：" class="headerlink" title="3.写策略："></a>3.写策略：</h2><pre><code>1.命中时：（1）.全写法 （2）.写回法2.不命中： （1）.写分配法 （2）.非写分配法</code></pre><h2 id="虚拟存储器："><a href="#虚拟存储器：" class="headerlink" title="虚拟存储器："></a>虚拟存储器：</h2><pre><code>辅存的地址（磁盘）：    磁盘号+盘面号+磁道号+扇区号1.虚拟存储器是一个逻辑模型；功能：用户给出一个地址，叫做虚地址或者逻辑地址，虚拟存储器要给出该地址对应      的数据实现：由辅助硬件将虚地址映射到主存当中的某个单元，主存单元地址称为实地址或       物理地址</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 计组 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>muzinanStart</title>
      <link href="/2021/11/15/muzinanStart/"/>
      <url>/2021/11/15/muzinanStart/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello World&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">使用javascript脚本验证表单元素是否为空</span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;author&quot;</span> <span class="attr">content</span>=<span class="string">&quot;http://www.example.com/&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>js验证表单<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript">            <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript">            </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> bt=doucment.getElementById(<span class="string">&quot;bt&quot;</span>);</span></span><br><span class="line"><span class="javascript">                bt.onclick=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">if</span>(<span class="built_in">document</span>.myform.name.value==<span class="string">&quot;&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    &#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&quot;用户名不能为空!&quot;</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.myform.name.focus();</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                    <span class="keyword">else</span> <span class="keyword">if</span>(<span class="built_in">document</span>.myform.pw.value==<span class="string">&quot;&quot;</span>)</span></span><br><span class="line"><span class="javascript">                    &#123;</span></span><br><span class="line"><span class="javascript">                        alert(<span class="string">&quot;密码不能为空!&quot;</span>);</span></span><br><span class="line"><span class="javascript">                        <span class="built_in">document</span>.myform.pw.focus();</span></span><br><span class="line"><span class="javascript">                        <span class="keyword">return</span> <span class="literal">false</span>;</span></span><br><span class="line"><span class="javascript">                    &#125;</span></span><br><span class="line"><span class="javascript">                &#125;</span></span><br><span class="line"><span class="javascript">            &#125;</span></span><br><span class="line"><span class="javascript">            </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;index.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span> <span class="attr">name</span>=<span class="string">&quot;myform&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span> <span class="attr">id</span>=<span class="string">&quot;name&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span>密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;pw&quot;</span> <span class="attr">id</span>=<span class="string">&quot;age&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bt&quot;</span>/&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> 代码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王璐瑶我喜欢你</title>
      <link href="/2021/11/14/first-blog/"/>
      <url>/2021/11/14/first-blog/</url>
      
        <content type="html"><![CDATA[<h1 id="我的"><a href="#我的" class="headerlink" title="我的"></a><em>我的</em></h1><h1 id="一生至少该有一次-，"><a href="#一生至少该有一次-，" class="headerlink" title="一生至少该有一次 ，"></a><em>一生至少该有一次 ，</em></h1><h1 id="为了某个人而忘了自己-，"><a href="#为了某个人而忘了自己-，" class="headerlink" title="为了某个人而忘了自己 ，"></a><em>为了某个人而忘了自己 ，</em></h1><h1 id="不求有结果-，"><a href="#不求有结果-，" class="headerlink" title="不求有结果 ，"></a><em>不求有结果 ，</em></h1><h1 id="不求同行-，"><a href="#不求同行-，" class="headerlink" title="不求同行 ，"></a><em>不求同行 ，</em></h1><h1 id="不求曾经拥有-，"><a href="#不求曾经拥有-，" class="headerlink" title="不求曾经拥有 ，"></a><em>不求曾经拥有 ，</em></h1><h1 id="甚至不求你爱我-，"><a href="#甚至不求你爱我-，" class="headerlink" title="甚至不求你爱我 ，"></a><em>甚至不求你爱我 ，</em></h1><h1 id="只求在我最美的年华里-，"><a href="#只求在我最美的年华里-，" class="headerlink" title="只求在我最美的年华里 ，"></a><em>只求在我最美的年华里 ，</em></h1><h1 id="遇到你-。"><a href="#遇到你-。" class="headerlink" title="遇到你 。"></a><em>遇到你 。</em></h1><p><em><strong>love is like the wind. You can’t see it but you can feel it.</strong></em></p><img src="/2021/11/14/first-blog/blog\source\_posts\IMG_1266.JPG" style="zoom: 25%;"><h3 id="我真的很感谢迄今为止-我遇到的所与人-经历的所有事"><a href="#我真的很感谢迄今为止-我遇到的所与人-经历的所有事" class="headerlink" title="我真的很感谢迄今为止,我遇到的所与人,经历的所有事."></a>我真的很感谢迄今为止,我遇到的所与人,经历的所有事.</h3>]]></content>
      
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/14/hello-world/"/>
      <url>/2021/11/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
