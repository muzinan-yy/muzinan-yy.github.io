<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Mysql数据库学习</title>
      <link href="/2021/11/26/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0(1)/"/>
      <url>/2021/11/26/Mysql%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AD%A6%E4%B9%A0(1)/</url>
      
        <content type="html"><![CDATA[<h1 id="一、sql、DB、DBMS分别是什么，他们之间的关系？"><a href="#一、sql、DB、DBMS分别是什么，他们之间的关系？" class="headerlink" title="一、sql、DB、DBMS分别是什么，他们之间的关系？"></a>一、sql、DB、DBMS分别是什么，他们之间的关系？</h1><pre><code>DB: DataBase（数据库，数据库实际上在硬盘上以文件的形式存在）DBMS: DataBase Management System（数据库管理系统，常见的有：MySQL Oracle DB2 Sybase           SqlServer...）SQL: 结构化查询语言，是一门标准通用的语言。标准的sql适合于所有的数据库产品。     SQL属于高级语言。只要能看懂英语单词的，写出来的sql语句，可以读懂什么意思。     SQL语句在执行的时候，实际上内部也会先进行编译，然后再执行sql。（sql语句的编译由DBMS完成。）     DBMS负责执行sql语句，通过执行sql语句来操作DB当中的数据。DBMS -(执行)-&gt; SQL -(操作)-&gt; DB</code></pre><h1 id="什么是表？"><a href="#什么是表？" class="headerlink" title="什么是表？"></a>什么是表？</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">表：<span class="keyword">table</span>是数据库的基本组成单元，所有的数据都以表格的形式组织，目的是可读性强。</span><br><span class="line">一个表包括行和列：</span><br><span class="line">行：被称为数据<span class="operator">/</span>记录(data)</span><br><span class="line">列：被称为字段(<span class="keyword">column</span>)</span><br><span class="line">学号(<span class="type">int</span>)姓名(<span class="type">varchar</span>)年龄(<span class="type">int</span>)</span><br><span class="line"><span class="comment">------------------------------------</span></span><br><span class="line"><span class="number">110</span>张三<span class="number">20</span></span><br><span class="line"><span class="number">120</span>李四<span class="number">21</span></span><br></pre></td></tr></table></figure><h2 id="每一个字段应该包括哪些属性？"><a href="#每一个字段应该包括哪些属性？" class="headerlink" title="每一个字段应该包括哪些属性？"></a>每一个字段应该包括哪些属性？</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字段名、数据类型、相关的约束。</span><br></pre></td></tr></table></figure><h1 id="学习通用的SQL语句，SQL语句的分类"><a href="#学习通用的SQL语句，SQL语句的分类" class="headerlink" title="学习通用的SQL语句，SQL语句的分类"></a>学习通用的SQL语句，SQL语句的分类</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DQL（数据查询语言）: 查询语句，凡是<span class="keyword">select</span>语句都是DQL。</span><br><span class="line">DML（数据操作语言）：<span class="keyword">insert</span> <span class="keyword">delete</span> update，对表当中的数据进行增删改。</span><br><span class="line">DDL（数据定义语言）：<span class="keyword">create</span> <span class="keyword">drop</span> <span class="keyword">alter</span>，对表结构的增删改。</span><br><span class="line">TCL（事务控制语言）：<span class="keyword">commit</span>提交事务，<span class="keyword">rollback</span>回滚事务。(TCL中的T是       Transaction)</span><br><span class="line">DCL（数据控制语言）: <span class="keyword">grant</span>授权、<span class="keyword">revoke</span>撤销权限等。</span><br></pre></td></tr></table></figure><h1 id="登录数据库"><a href="#登录数据库" class="headerlink" title="登录数据库"></a>登录数据库</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">命令行窗口输入：<span class="operator">-</span>uroot <span class="operator">-</span>p你的密码</span><br><span class="line">查看有那些数据库：<span class="keyword">show</span> databases;(这个不是<span class="keyword">sql</span>语句，是mysql的命令)</span><br><span class="line">创建数据库：<span class="keyword">create</span> database (数据库名)(这个不是<span class="keyword">sql</span>语句，是mysql的命令)</span><br><span class="line">使用选定的数据库。use (数据库名)(这个不是<span class="keyword">sql</span>语句，是mysql的命令)</span><br><span class="line">查看数据库中的表：<span class="keyword">show</span> tables;(这个不是<span class="keyword">sql</span>语句，是mysql的命令)</span><br><span class="line">初始化数据：source 文件路径</span><br><span class="line">(以<span class="keyword">sql</span>结尾的文件称为<span class="keyword">sql</span>脚本，其中包含着许多的<span class="keyword">sql</span>语句)</span><br><span class="line"><span class="keyword">sql</span>脚本中的数据量太大的时候，无法打开，请使用source命令完成初始化。</span><br></pre></td></tr></table></figure><h1 id="常用sql命令"><a href="#常用sql命令" class="headerlink" title="常用sql命令"></a>常用sql命令</h1><p>​        1) mysql&gt; select database(); 查看当前使用的是哪个数据库</p><p>​        +————-+</p><p>​        | database() |</p><p>​        +————-+</p><p>​        | bjpowernode |</p><p>​        +————-+</p><pre><code>     2) mysql&gt; select version(); 查看mysql的版本号。</code></pre><p>​        +———–+</p><p>​        | version() |</p><p>​        +———–+</p><p>​        | 5.5.36  |</p><p>​        +———–+</p><p>​        3) \c  命令，结束一条语句。</p><pre><code>     4) exit 命令，退出mysql。</code></pre><h2 id="删除数据库：drop-database-数据库名"><a href="#删除数据库：drop-database-数据库名" class="headerlink" title="删除数据库：drop database 数据库名"></a>删除数据库：drop database 数据库名</h2><h1 id="查看表的结构：desc-表名"><a href="#查看表的结构：desc-表名" class="headerlink" title="查看表的结构：desc 表名"></a>查看表的结构：desc 表名</h1><h1 id="sql语句：（sql语句不区分大小写。）"><a href="#sql语句：（sql语句不区分大小写。）" class="headerlink" title="sql语句：（sql语句不区分大小写。）"></a>sql语句：（sql语句不区分大小写。）</h1><p>​    查询语句：</p><pre><code> select * from 表名（能够显示表中所有数据的信息，但一般不常用）</code></pre><p>​     select 字段名1,字段名2,字段名3,…. from 表名;（字段可以参与数学运算）</p><p>​     给查询结果的列重命名：select ename,sal * 12 as yearsal from emp;</p><p>​                                               select ename,sal * 12 （as可以省略） ‘年薪’ from emp;</p><p>​     条件查询：（3）select  字段,字段… （1） from  表名  （2）where  条件;</p><p>​                           · select ename from emp where sal = 5000;</p><p>​                           ·select ename,sal from emp where sal between 1100 and 3000; </p><p>​                            // between…and…是闭区间 [1100 ~ 3000]</p><p>​    在数据库当中NULL不是一个值，代表什么也没有，为空。</p><p>​    空不是一个值，不能用等号衡量。必须使用 is null或者is not null</p><p>​                            ·select ename,sal,comm from emp where comm is null;</p><p>​                            ·select ename,job from emp where sal in(800, 5000); </p><p>​                            // in后面的值不是区间，是具体的值。</p><p>​    模糊查询like：</p><p>​                找出名字当中含有O的？（在模糊查询当中，必须掌握两个特殊的符号，一个是%，一个是_)</p><pre><code>           %代表任意多个字符，_代表任意1个字符。</code></pre><p>​                            ·select ename from emp where ename like ‘%O%’;</p><p>​    新建一张表：Create table name&lt;Id int ,Name varchar&lt;255&gt;&gt;;</p><p>​                         (插入信息)Insert nametable&lt;id,name&gt; values&lt;1,’john’&gt;</p><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>​        select 字段名 from 表名 （4）order by 字段;(默认是升序)</p><p>​        select 字段名 from 表名 order by 字段 asc;</p><p>​        select 字段名 from 表名 order by 字段 desc;（降序）</p><p>​        select ename,sal from emp order by sal desc , ename asc;</p><p>注意：越靠前的字段越能起到主导作用。只有当前面的字段无法完成排序的时候，才会启用后面的字段。</p><h2 id="分组函数"><a href="#分组函数" class="headerlink" title="分组函数"></a>分组函数</h2><p>对某一组数据进行操作（在where操作之后）：（又名多行处理函数）自动忽略null</p><p>count 计数  count（*）计数总记录的条数  count（comm）：表示统计comm字段中不为bull的数据总量</p><p>sum 求和</p><p>avg  平均值</p><p>max 最大值</p><p>min 最小值</p><h1 id="单行处理函数"><a href="#单行处理函数" class="headerlink" title="单行处理函数"></a>单行处理函数</h1><p>ifnull（可能为null的数据被当作什么处理）:属于单行处理函数</p><h1 id="groupby-和-having："><a href="#groupby-和-having：" class="headerlink" title="groupby 和 having："></a>groupby 和 having：</h1><p>groupby：按照某个字段或者某些字段进行分组</p><p>having：having是对分组之后的数据进行再次过滤</p><p>规则：当一条语句中有group by的话，select后面只能跟分组函数和参与分组的字段。</p><h2 id="执行顺序"><a href="#执行顺序" class="headerlink" title="执行顺序"></a>执行顺序</h2><p>select               5</p><p>..</p><p>from            1    </p><p>..</p><p>where            2</p><p>..</p><p>group by        3</p><p>..</p><p>having               4</p><p>..</p><p>order by        6</p><p>..</p>]]></content>
      
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深入了解JVM</title>
      <link href="/2021/11/22/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3JVM/"/>
      <url>/2021/11/22/%E6%B7%B1%E5%85%A5%E4%BA%86%E8%A7%A3JVM/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理之指令系统</title>
      <link href="/2021/11/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/"/>
      <url>/2021/11/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E6%8C%87%E4%BB%A4%E7%B3%BB%E7%BB%9F/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理之存储器</title>
      <link href="/2021/11/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E5%AD%98%E5%82%A8%E5%99%A8/"/>
      <url>/2021/11/16/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E4%B9%8B%E5%AD%98%E5%82%A8%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="一、存储器："><a href="#一、存储器：" class="headerlink" title="一、存储器："></a>一、存储器：</h1><h2 id="分类："><a href="#分类：" class="headerlink" title="分类："></a>分类：</h2><h3 id="根据存储介质分类："><a href="#根据存储介质分类：" class="headerlink" title="根据存储介质分类："></a>根据存储介质分类：</h3><pre><code>    1.半导体存储器    2.磁表面存储器    3.磁芯存储器    4.光盘存储器</code></pre><h3 id="根据存取的方式进行分类："><a href="#根据存取的方式进行分类：" class="headerlink" title="根据存取的方式进行分类："></a>根据存取的方式进行分类：</h3><pre><code>    1.随机存储器 RAM    2.只读存储器 ROM    3.串行访问存储器</code></pre><h3 id="根据在计算机中的作用分类："><a href="#根据在计算机中的作用分类：" class="headerlink" title="根据在计算机中的作用分类："></a>根据在计算机中的作用分类：</h3><pre><code>    1.主存储器：    2.辅助存储器     3.缓冲存储器</code></pre><h2 id="存储器的基本结构结构："><a href="#存储器的基本结构结构：" class="headerlink" title="存储器的基本结构结构："></a>存储器的基本结构结构：</h2><pre><code>存储器包括存储的部分以及选址的部分，同时可以控制对于存储器的读或者写不同的操作。地址线：用来选址的信号传输线。片选线（用于容量的扩容）、读写控制线（WE）、数据线。</code></pre><p><strong><em>存储器的总容量=存储单元*存储字长</em></strong></p><h2 id="主存储器（主要由RAM和ROM构成）："><a href="#主存储器（主要由RAM和ROM构成）：" class="headerlink" title="主存储器（主要由RAM和ROM构成）："></a>主存储器（主要由RAM和ROM构成）：</h2><pre><code>1.地址寄存器2.数据寄存器3.存储体：存储元组成存储单元，多个存储单元构成存储体    译码器：有2**n个存储单元</code></pre><h3 id="RAM："><a href="#RAM：" class="headerlink" title="RAM："></a>RAM：</h3><pre><code>1.SRAM（静态）：触发器（常用作cache）2.DRAM（动态随机存储器）：电容（常用作主存）    刷新：1）分散刷新 2）集中刷新 3）异步刷新 。（死区的概念）</code></pre><h1 id="存储器的性能指标："><a href="#存储器的性能指标：" class="headerlink" title="存储器的性能指标："></a>存储器的性能指标：</h1><pre><code>1.存储容量： 存储字数*存储字长2.单位成本： 每位价格=总成本/总容量3.存储速度：数据传输率=数据的宽度/存储周期</code></pre><h1 id="主存与CPU的连接："><a href="#主存与CPU的连接：" class="headerlink" title="主存与CPU的连接："></a>主存与CPU的连接：</h1><pre><code>    1.容量拓展：*_使能信号_*(低电平有效)    字拓展：1）译码片选法 2)线选法 n条线对应n个选片信号    位拓展：    字和位同时拓展（选择芯片）</code></pre><h3 id="例题："><a href="#例题：" class="headerlink" title="例题："></a>例题：</h3><pre><code>系统程序区用ROM用户程序区用RAM执行区都用RAM</code></pre><h1 id="高速缓冲存储器："><a href="#高速缓冲存储器：" class="headerlink" title="高速缓冲存储器："></a>高速缓冲存储器：</h1><pre><code>1.命中率：是指cpu要访问的信息已在cache中的比率h=Nc/(Nc+Nm)2.访问效率：e=tc/ta*100% ta是指平均访问时间</code></pre><h2 id="1-cache地址映射："><a href="#1-cache地址映射：" class="headerlink" title="1.cache地址映射："></a>1.cache地址映射：</h2><pre><code>1.全相连映射2.组相联映射（其余两者的折中）3.直接映射</code></pre><h2 id="2-替换算法："><a href="#2-替换算法：" class="headerlink" title="2.替换算法："></a>2.替换算法：</h2><pre><code>1.RAND（随机）2.FIFO（先进先出）3.LRU （最近最少使用）4.LFU  （不经常使用）</code></pre><h2 id="3-写策略："><a href="#3-写策略：" class="headerlink" title="3.写策略："></a>3.写策略：</h2><pre><code>1.命中时：（1）.全写法 （2）.写回法2.不命中： （1）.写分配法 （2）.非写分配法</code></pre><h2 id="虚拟存储器："><a href="#虚拟存储器：" class="headerlink" title="虚拟存储器："></a>虚拟存储器：</h2><pre><code>辅存的地址（磁盘）：    磁盘号+盘面号+磁道号+扇区号1.虚拟存储器是一个逻辑模型；功能：用户给出一个地址，叫做虚地址或者逻辑地址，虚拟存储器要给出该地址对应      的数据实现：由辅助硬件将虚地址映射到主存当中的某个单元，主存单元地址称为实地址或       物理地址</code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>OCEANBASE数据库</title>
      <link href="/2021/11/16/OCEANBASE%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
      <url>/2021/11/16/OCEANBASE%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>muzinanStart</title>
      <link href="/2021/11/15/muzinanStart/"/>
      <url>/2021/11/15/muzinanStart/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    cout&lt;&lt;<span class="string">&quot;Hello World&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> zh-CN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>王璐瑶我喜欢你</title>
      <link href="/2021/11/14/first-blog/"/>
      <url>/2021/11/14/first-blog/</url>
      
        <content type="html"><![CDATA[<p>人类的悲欢离合并不相同，我只觉得他们喧闹。</p>]]></content>
      
      
      
        <tags>
            
            <tag> zh-CN </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/11/14/hello-world/"/>
      <url>/2021/11/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
